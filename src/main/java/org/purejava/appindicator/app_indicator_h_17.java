// Generated by jextract

package org.purejava.appindicator;

import java.lang.foreign.AddressLayout;
import java.lang.foreign.MemorySegment;
import java.lang.invoke.MethodHandle;
public class app_indicator_h_17 extends app_indicator_h_16 {

    /**
     * {@snippet :
     * typedef struct _GSList* GtkNativeDialogClass_slistautoptr;
     * }
     */
    public static final AddressLayout GtkNativeDialogClass_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkNativeDialogClass_queueautoptr;
     * }
     */
    public static final AddressLayout GtkNativeDialogClass_queueautoptr = RuntimeHelper.POINTER;
    public static MethodHandle gtk_native_dialog_show$MH() {
        return RuntimeHelper.requireNonNull(constants$2703.const$1,"gtk_native_dialog_show");
    }
    /**
     * {@snippet :
     * void gtk_native_dialog_show(struct _GtkNativeDialog* self);
     * }
     */
    public static void gtk_native_dialog_show(MemorySegment self) {
        var mh$ = gtk_native_dialog_show$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_hide$MH() {
        return RuntimeHelper.requireNonNull(constants$2703.const$2,"gtk_native_dialog_hide");
    }
    /**
     * {@snippet :
     * void gtk_native_dialog_hide(struct _GtkNativeDialog* self);
     * }
     */
    public static void gtk_native_dialog_hide(MemorySegment self) {
        var mh$ = gtk_native_dialog_hide$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$2703.const$3,"gtk_native_dialog_destroy");
    }
    /**
     * {@snippet :
     * void gtk_native_dialog_destroy(struct _GtkNativeDialog* self);
     * }
     */
    public static void gtk_native_dialog_destroy(MemorySegment self) {
        var mh$ = gtk_native_dialog_destroy$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_get_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$2703.const$4,"gtk_native_dialog_get_visible");
    }
    /**
     * {@snippet :
     * int gtk_native_dialog_get_visible(struct _GtkNativeDialog* self);
     * }
     */
    public static int gtk_native_dialog_get_visible(MemorySegment self) {
        var mh$ = gtk_native_dialog_get_visible$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_set_modal$MH() {
        return RuntimeHelper.requireNonNull(constants$2703.const$5,"gtk_native_dialog_set_modal");
    }
    /**
     * {@snippet :
     * void gtk_native_dialog_set_modal(struct _GtkNativeDialog* self, int modal);
     * }
     */
    public static void gtk_native_dialog_set_modal(MemorySegment self, int modal) {
        var mh$ = gtk_native_dialog_set_modal$MH();
        try {
            mh$.invokeExact(self, modal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_get_modal$MH() {
        return RuntimeHelper.requireNonNull(constants$2704.const$0,"gtk_native_dialog_get_modal");
    }
    /**
     * {@snippet :
     * int gtk_native_dialog_get_modal(struct _GtkNativeDialog* self);
     * }
     */
    public static int gtk_native_dialog_get_modal(MemorySegment self) {
        var mh$ = gtk_native_dialog_get_modal$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_set_title$MH() {
        return RuntimeHelper.requireNonNull(constants$2704.const$1,"gtk_native_dialog_set_title");
    }
    /**
     * {@snippet :
     * void gtk_native_dialog_set_title(struct _GtkNativeDialog* self, char* title);
     * }
     */
    public static void gtk_native_dialog_set_title(MemorySegment self, MemorySegment title) {
        var mh$ = gtk_native_dialog_set_title$MH();
        try {
            mh$.invokeExact(self, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_get_title$MH() {
        return RuntimeHelper.requireNonNull(constants$2704.const$2,"gtk_native_dialog_get_title");
    }
    /**
     * {@snippet :
     * char* gtk_native_dialog_get_title(struct _GtkNativeDialog* self);
     * }
     */
    public static MemorySegment gtk_native_dialog_get_title(MemorySegment self) {
        var mh$ = gtk_native_dialog_get_title$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_set_transient_for$MH() {
        return RuntimeHelper.requireNonNull(constants$2704.const$3,"gtk_native_dialog_set_transient_for");
    }
    /**
     * {@snippet :
     * void gtk_native_dialog_set_transient_for(struct _GtkNativeDialog* self, struct _GtkWindow* parent);
     * }
     */
    public static void gtk_native_dialog_set_transient_for(MemorySegment self, MemorySegment parent) {
        var mh$ = gtk_native_dialog_set_transient_for$MH();
        try {
            mh$.invokeExact(self, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_get_transient_for$MH() {
        return RuntimeHelper.requireNonNull(constants$2704.const$4,"gtk_native_dialog_get_transient_for");
    }
    /**
     * {@snippet :
     * struct _GtkWindow* gtk_native_dialog_get_transient_for(struct _GtkNativeDialog* self);
     * }
     */
    public static MemorySegment gtk_native_dialog_get_transient_for(MemorySegment self) {
        var mh$ = gtk_native_dialog_get_transient_for$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_native_dialog_run$MH() {
        return RuntimeHelper.requireNonNull(constants$2704.const$5,"gtk_native_dialog_run");
    }
    /**
     * {@snippet :
     * int gtk_native_dialog_run(struct _GtkNativeDialog* self);
     * }
     */
    public static int gtk_native_dialog_run(MemorySegment self) {
        var mh$ = gtk_native_dialog_run$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_native_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2705.const$0,"gtk_file_chooser_native_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_file_chooser_native_get_type();
     * }
     */
    public static long gtk_file_chooser_native_get_type() {
        var mh$ = gtk_file_chooser_native_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkFileChooserNative* GtkFileChooserNative_autoptr;
     * }
     */
    public static final AddressLayout GtkFileChooserNative_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GtkFileChooserNative_listautoptr;
     * }
     */
    public static final AddressLayout GtkFileChooserNative_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkFileChooserNative_slistautoptr;
     * }
     */
    public static final AddressLayout GtkFileChooserNative_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkFileChooserNative_queueautoptr;
     * }
     */
    public static final AddressLayout GtkFileChooserNative_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct GtkFileChooserNativeClass* GtkFileChooserNativeClass_autoptr;
     * }
     */
    public static final AddressLayout GtkFileChooserNativeClass_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GtkFileChooserNativeClass_listautoptr;
     * }
     */
    public static final AddressLayout GtkFileChooserNativeClass_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkFileChooserNativeClass_slistautoptr;
     * }
     */
    public static final AddressLayout GtkFileChooserNativeClass_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkFileChooserNativeClass_queueautoptr;
     * }
     */
    public static final AddressLayout GtkFileChooserNativeClass_queueautoptr = RuntimeHelper.POINTER;
    public static MethodHandle gtk_file_chooser_native_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2705.const$2,"gtk_file_chooser_native_new");
    }
    /**
     * {@snippet :
     * struct _GtkFileChooserNative* gtk_file_chooser_native_new(char* title, struct _GtkWindow* parent, enum GtkFileChooserAction action, char* accept_label, char* cancel_label);
     * }
     */
    public static MemorySegment gtk_file_chooser_native_new(MemorySegment title, MemorySegment parent, int action, MemorySegment accept_label, MemorySegment cancel_label) {
        var mh$ = gtk_file_chooser_native_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(title, parent, action, accept_label, cancel_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_native_get_accept_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2705.const$3,"gtk_file_chooser_native_get_accept_label");
    }
    /**
     * {@snippet :
     * char* gtk_file_chooser_native_get_accept_label(struct _GtkFileChooserNative* self);
     * }
     */
    public static MemorySegment gtk_file_chooser_native_get_accept_label(MemorySegment self) {
        var mh$ = gtk_file_chooser_native_get_accept_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_native_set_accept_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2705.const$4,"gtk_file_chooser_native_set_accept_label");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_native_set_accept_label(struct _GtkFileChooserNative* self, char* accept_label);
     * }
     */
    public static void gtk_file_chooser_native_set_accept_label(MemorySegment self, MemorySegment accept_label) {
        var mh$ = gtk_file_chooser_native_set_accept_label$MH();
        try {
            mh$.invokeExact(self, accept_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_native_get_cancel_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2705.const$5,"gtk_file_chooser_native_get_cancel_label");
    }
    /**
     * {@snippet :
     * char* gtk_file_chooser_native_get_cancel_label(struct _GtkFileChooserNative* self);
     * }
     */
    public static MemorySegment gtk_file_chooser_native_get_cancel_label(MemorySegment self) {
        var mh$ = gtk_file_chooser_native_get_cancel_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_native_set_cancel_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2706.const$0,"gtk_file_chooser_native_set_cancel_label");
    }
    /**
     * {@snippet :
     * void gtk_file_chooser_native_set_cancel_label(struct _GtkFileChooserNative* self, char* cancel_label);
     * }
     */
    public static void gtk_file_chooser_native_set_cancel_label(MemorySegment self, MemorySegment cancel_label) {
        var mh$ = gtk_file_chooser_native_set_cancel_label$MH();
        try {
            mh$.invokeExact(self, cancel_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_widget_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2708.const$0,"gtk_file_chooser_widget_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_file_chooser_widget_get_type();
     * }
     */
    public static long gtk_file_chooser_widget_get_type() {
        var mh$ = gtk_file_chooser_widget_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_file_chooser_widget_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2708.const$1,"gtk_file_chooser_widget_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_file_chooser_widget_new(enum GtkFileChooserAction action);
     * }
     */
    public static MemorySegment gtk_file_chooser_widget_new(int action) {
        var mh$ = gtk_file_chooser_widget_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_child_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2714.const$3,"gtk_flow_box_child_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_flow_box_child_get_type();
     * }
     */
    public static long gtk_flow_box_child_get_type() {
        var mh$ = gtk_flow_box_child_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_child_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2714.const$4,"gtk_flow_box_child_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_flow_box_child_new();
     * }
     */
    public static MemorySegment gtk_flow_box_child_new() {
        var mh$ = gtk_flow_box_child_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_child_get_index$MH() {
        return RuntimeHelper.requireNonNull(constants$2714.const$5,"gtk_flow_box_child_get_index");
    }
    /**
     * {@snippet :
     * int gtk_flow_box_child_get_index(struct _GtkFlowBoxChild* child);
     * }
     */
    public static int gtk_flow_box_child_get_index(MemorySegment child) {
        var mh$ = gtk_flow_box_child_get_index$MH();
        try {
            return (int)mh$.invokeExact(child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_child_is_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$2715.const$0,"gtk_flow_box_child_is_selected");
    }
    /**
     * {@snippet :
     * int gtk_flow_box_child_is_selected(struct _GtkFlowBoxChild* child);
     * }
     */
    public static int gtk_flow_box_child_is_selected(MemorySegment child) {
        var mh$ = gtk_flow_box_child_is_selected$MH();
        try {
            return (int)mh$.invokeExact(child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_child_changed$MH() {
        return RuntimeHelper.requireNonNull(constants$2715.const$1,"gtk_flow_box_child_changed");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_child_changed(struct _GtkFlowBoxChild* child);
     * }
     */
    public static void gtk_flow_box_child_changed(MemorySegment child) {
        var mh$ = gtk_flow_box_child_changed$MH();
        try {
            mh$.invokeExact(child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2715.const$2,"gtk_flow_box_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_flow_box_get_type();
     * }
     */
    public static long gtk_flow_box_get_type() {
        var mh$ = gtk_flow_box_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2715.const$3,"gtk_flow_box_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_flow_box_new();
     * }
     */
    public static MemorySegment gtk_flow_box_new() {
        var mh$ = gtk_flow_box_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_bind_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2716.const$0,"gtk_flow_box_bind_model");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_bind_model(struct _GtkFlowBox* box, struct _GListModel* model, struct _GtkWidget* (*create_widget_func)(void*,void*), void* user_data, void (*user_data_free_func)(void*));
     * }
     */
    public static void gtk_flow_box_bind_model(MemorySegment box, MemorySegment model, MemorySegment create_widget_func, MemorySegment user_data, MemorySegment user_data_free_func) {
        var mh$ = gtk_flow_box_bind_model$MH();
        try {
            mh$.invokeExact(box, model, create_widget_func, user_data, user_data_free_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$2716.const$1,"gtk_flow_box_set_homogeneous");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_set_homogeneous(struct _GtkFlowBox* box, int homogeneous);
     * }
     */
    public static void gtk_flow_box_set_homogeneous(MemorySegment box, int homogeneous) {
        var mh$ = gtk_flow_box_set_homogeneous$MH();
        try {
            mh$.invokeExact(box, homogeneous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$2716.const$2,"gtk_flow_box_get_homogeneous");
    }
    /**
     * {@snippet :
     * int gtk_flow_box_get_homogeneous(struct _GtkFlowBox* box);
     * }
     */
    public static int gtk_flow_box_get_homogeneous(MemorySegment box) {
        var mh$ = gtk_flow_box_get_homogeneous$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_row_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2716.const$3,"gtk_flow_box_set_row_spacing");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_set_row_spacing(struct _GtkFlowBox* box, unsigned int spacing);
     * }
     */
    public static void gtk_flow_box_set_row_spacing(MemorySegment box, int spacing) {
        var mh$ = gtk_flow_box_set_row_spacing$MH();
        try {
            mh$.invokeExact(box, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_row_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2716.const$4,"gtk_flow_box_get_row_spacing");
    }
    /**
     * {@snippet :
     * unsigned int gtk_flow_box_get_row_spacing(struct _GtkFlowBox* box);
     * }
     */
    public static int gtk_flow_box_get_row_spacing(MemorySegment box) {
        var mh$ = gtk_flow_box_get_row_spacing$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_column_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2716.const$5,"gtk_flow_box_set_column_spacing");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_set_column_spacing(struct _GtkFlowBox* box, unsigned int spacing);
     * }
     */
    public static void gtk_flow_box_set_column_spacing(MemorySegment box, int spacing) {
        var mh$ = gtk_flow_box_set_column_spacing$MH();
        try {
            mh$.invokeExact(box, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_column_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2717.const$0,"gtk_flow_box_get_column_spacing");
    }
    /**
     * {@snippet :
     * unsigned int gtk_flow_box_get_column_spacing(struct _GtkFlowBox* box);
     * }
     */
    public static int gtk_flow_box_get_column_spacing(MemorySegment box) {
        var mh$ = gtk_flow_box_get_column_spacing$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_min_children_per_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2717.const$1,"gtk_flow_box_set_min_children_per_line");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_set_min_children_per_line(struct _GtkFlowBox* box, unsigned int n_children);
     * }
     */
    public static void gtk_flow_box_set_min_children_per_line(MemorySegment box, int n_children) {
        var mh$ = gtk_flow_box_set_min_children_per_line$MH();
        try {
            mh$.invokeExact(box, n_children);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_min_children_per_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2717.const$2,"gtk_flow_box_get_min_children_per_line");
    }
    /**
     * {@snippet :
     * unsigned int gtk_flow_box_get_min_children_per_line(struct _GtkFlowBox* box);
     * }
     */
    public static int gtk_flow_box_get_min_children_per_line(MemorySegment box) {
        var mh$ = gtk_flow_box_get_min_children_per_line$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_max_children_per_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2717.const$3,"gtk_flow_box_set_max_children_per_line");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_set_max_children_per_line(struct _GtkFlowBox* box, unsigned int n_children);
     * }
     */
    public static void gtk_flow_box_set_max_children_per_line(MemorySegment box, int n_children) {
        var mh$ = gtk_flow_box_set_max_children_per_line$MH();
        try {
            mh$.invokeExact(box, n_children);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_max_children_per_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2717.const$4,"gtk_flow_box_get_max_children_per_line");
    }
    /**
     * {@snippet :
     * unsigned int gtk_flow_box_get_max_children_per_line(struct _GtkFlowBox* box);
     * }
     */
    public static int gtk_flow_box_get_max_children_per_line(MemorySegment box) {
        var mh$ = gtk_flow_box_get_max_children_per_line$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_activate_on_single_click$MH() {
        return RuntimeHelper.requireNonNull(constants$2717.const$5,"gtk_flow_box_set_activate_on_single_click");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_set_activate_on_single_click(struct _GtkFlowBox* box, int single);
     * }
     */
    public static void gtk_flow_box_set_activate_on_single_click(MemorySegment box, int single) {
        var mh$ = gtk_flow_box_set_activate_on_single_click$MH();
        try {
            mh$.invokeExact(box, single);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_activate_on_single_click$MH() {
        return RuntimeHelper.requireNonNull(constants$2718.const$0,"gtk_flow_box_get_activate_on_single_click");
    }
    /**
     * {@snippet :
     * int gtk_flow_box_get_activate_on_single_click(struct _GtkFlowBox* box);
     * }
     */
    public static int gtk_flow_box_get_activate_on_single_click(MemorySegment box) {
        var mh$ = gtk_flow_box_get_activate_on_single_click$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$2718.const$1,"gtk_flow_box_insert");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_insert(struct _GtkFlowBox* box, struct _GtkWidget* widget, int position);
     * }
     */
    public static void gtk_flow_box_insert(MemorySegment box, MemorySegment widget, int position) {
        var mh$ = gtk_flow_box_insert$MH();
        try {
            mh$.invokeExact(box, widget, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_child_at_index$MH() {
        return RuntimeHelper.requireNonNull(constants$2718.const$2,"gtk_flow_box_get_child_at_index");
    }
    /**
     * {@snippet :
     * struct _GtkFlowBoxChild* gtk_flow_box_get_child_at_index(struct _GtkFlowBox* box, int idx);
     * }
     */
    public static MemorySegment gtk_flow_box_get_child_at_index(MemorySegment box, int idx) {
        var mh$ = gtk_flow_box_get_child_at_index$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(box, idx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_child_at_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$2718.const$3,"gtk_flow_box_get_child_at_pos");
    }
    /**
     * {@snippet :
     * struct _GtkFlowBoxChild* gtk_flow_box_get_child_at_pos(struct _GtkFlowBox* box, int x, int y);
     * }
     */
    public static MemorySegment gtk_flow_box_get_child_at_pos(MemorySegment box, int x, int y) {
        var mh$ = gtk_flow_box_get_child_at_pos$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(box, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_selected_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$2719.const$0,"gtk_flow_box_selected_foreach");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_selected_foreach(struct _GtkFlowBox* box, void (*func)(struct _GtkFlowBox*,struct _GtkFlowBoxChild*,void*), void* data);
     * }
     */
    public static void gtk_flow_box_selected_foreach(MemorySegment box, MemorySegment func, MemorySegment data) {
        var mh$ = gtk_flow_box_selected_foreach$MH();
        try {
            mh$.invokeExact(box, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_selected_children$MH() {
        return RuntimeHelper.requireNonNull(constants$2719.const$1,"gtk_flow_box_get_selected_children");
    }
    /**
     * {@snippet :
     * struct _GList* gtk_flow_box_get_selected_children(struct _GtkFlowBox* box);
     * }
     */
    public static MemorySegment gtk_flow_box_get_selected_children(MemorySegment box) {
        var mh$ = gtk_flow_box_get_selected_children$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_select_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2719.const$2,"gtk_flow_box_select_child");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_select_child(struct _GtkFlowBox* box, struct _GtkFlowBoxChild* child);
     * }
     */
    public static void gtk_flow_box_select_child(MemorySegment box, MemorySegment child) {
        var mh$ = gtk_flow_box_select_child$MH();
        try {
            mh$.invokeExact(box, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_unselect_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2719.const$3,"gtk_flow_box_unselect_child");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_unselect_child(struct _GtkFlowBox* box, struct _GtkFlowBoxChild* child);
     * }
     */
    public static void gtk_flow_box_unselect_child(MemorySegment box, MemorySegment child) {
        var mh$ = gtk_flow_box_unselect_child$MH();
        try {
            mh$.invokeExact(box, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_select_all$MH() {
        return RuntimeHelper.requireNonNull(constants$2719.const$4,"gtk_flow_box_select_all");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_select_all(struct _GtkFlowBox* box);
     * }
     */
    public static void gtk_flow_box_select_all(MemorySegment box) {
        var mh$ = gtk_flow_box_select_all$MH();
        try {
            mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_unselect_all$MH() {
        return RuntimeHelper.requireNonNull(constants$2719.const$5,"gtk_flow_box_unselect_all");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_unselect_all(struct _GtkFlowBox* box);
     * }
     */
    public static void gtk_flow_box_unselect_all(MemorySegment box) {
        var mh$ = gtk_flow_box_unselect_all$MH();
        try {
            mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_selection_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2720.const$0,"gtk_flow_box_set_selection_mode");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_set_selection_mode(struct _GtkFlowBox* box, enum GtkSelectionMode mode);
     * }
     */
    public static void gtk_flow_box_set_selection_mode(MemorySegment box, int mode) {
        var mh$ = gtk_flow_box_set_selection_mode$MH();
        try {
            mh$.invokeExact(box, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_get_selection_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2720.const$1,"gtk_flow_box_get_selection_mode");
    }
    /**
     * {@snippet :
     * enum GtkSelectionMode gtk_flow_box_get_selection_mode(struct _GtkFlowBox* box);
     * }
     */
    public static int gtk_flow_box_get_selection_mode(MemorySegment box) {
        var mh$ = gtk_flow_box_get_selection_mode$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_hadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2720.const$2,"gtk_flow_box_set_hadjustment");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_set_hadjustment(struct _GtkFlowBox* box, struct _GtkAdjustment* adjustment);
     * }
     */
    public static void gtk_flow_box_set_hadjustment(MemorySegment box, MemorySegment adjustment) {
        var mh$ = gtk_flow_box_set_hadjustment$MH();
        try {
            mh$.invokeExact(box, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_vadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2720.const$3,"gtk_flow_box_set_vadjustment");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_set_vadjustment(struct _GtkFlowBox* box, struct _GtkAdjustment* adjustment);
     * }
     */
    public static void gtk_flow_box_set_vadjustment(MemorySegment box, MemorySegment adjustment) {
        var mh$ = gtk_flow_box_set_vadjustment$MH();
        try {
            mh$.invokeExact(box, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_filter_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2721.const$1,"gtk_flow_box_set_filter_func");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_set_filter_func(struct _GtkFlowBox* box, int (*filter_func)(struct _GtkFlowBoxChild*,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void gtk_flow_box_set_filter_func(MemorySegment box, MemorySegment filter_func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = gtk_flow_box_set_filter_func$MH();
        try {
            mh$.invokeExact(box, filter_func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_invalidate_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$2721.const$2,"gtk_flow_box_invalidate_filter");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_invalidate_filter(struct _GtkFlowBox* box);
     * }
     */
    public static void gtk_flow_box_invalidate_filter(MemorySegment box) {
        var mh$ = gtk_flow_box_invalidate_filter$MH();
        try {
            mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_set_sort_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2722.const$0,"gtk_flow_box_set_sort_func");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_set_sort_func(struct _GtkFlowBox* box, int (*sort_func)(struct _GtkFlowBoxChild*,struct _GtkFlowBoxChild*,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void gtk_flow_box_set_sort_func(MemorySegment box, MemorySegment sort_func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = gtk_flow_box_set_sort_func$MH();
        try {
            mh$.invokeExact(box, sort_func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_flow_box_invalidate_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$2722.const$1,"gtk_flow_box_invalidate_sort");
    }
    /**
     * {@snippet :
     * void gtk_flow_box_invalidate_sort(struct _GtkFlowBox* box);
     * }
     */
    public static void gtk_flow_box_invalidate_sort(MemorySegment box) {
        var mh$ = gtk_flow_box_invalidate_sort$MH();
        try {
            mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2724.const$3,"gtk_font_button_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_font_button_get_type();
     * }
     */
    public static long gtk_font_button_get_type() {
        var mh$ = gtk_font_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2724.const$4,"gtk_font_button_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_font_button_new();
     * }
     */
    public static MemorySegment gtk_font_button_new() {
        var mh$ = gtk_font_button_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_new_with_font$MH() {
        return RuntimeHelper.requireNonNull(constants$2724.const$5,"gtk_font_button_new_with_font");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_font_button_new_with_font(char* fontname);
     * }
     */
    public static MemorySegment gtk_font_button_new_with_font(MemorySegment fontname) {
        var mh$ = gtk_font_button_new_with_font$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fontname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_get_title$MH() {
        return RuntimeHelper.requireNonNull(constants$2725.const$0,"gtk_font_button_get_title");
    }
    /**
     * {@snippet :
     * char* gtk_font_button_get_title(struct _GtkFontButton* font_button);
     * }
     */
    public static MemorySegment gtk_font_button_get_title(MemorySegment font_button) {
        var mh$ = gtk_font_button_get_title$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(font_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_set_title$MH() {
        return RuntimeHelper.requireNonNull(constants$2725.const$1,"gtk_font_button_set_title");
    }
    /**
     * {@snippet :
     * void gtk_font_button_set_title(struct _GtkFontButton* font_button, char* title);
     * }
     */
    public static void gtk_font_button_set_title(MemorySegment font_button, MemorySegment title) {
        var mh$ = gtk_font_button_set_title$MH();
        try {
            mh$.invokeExact(font_button, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_get_use_font$MH() {
        return RuntimeHelper.requireNonNull(constants$2725.const$2,"gtk_font_button_get_use_font");
    }
    /**
     * {@snippet :
     * int gtk_font_button_get_use_font(struct _GtkFontButton* font_button);
     * }
     */
    public static int gtk_font_button_get_use_font(MemorySegment font_button) {
        var mh$ = gtk_font_button_get_use_font$MH();
        try {
            return (int)mh$.invokeExact(font_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_set_use_font$MH() {
        return RuntimeHelper.requireNonNull(constants$2725.const$3,"gtk_font_button_set_use_font");
    }
    /**
     * {@snippet :
     * void gtk_font_button_set_use_font(struct _GtkFontButton* font_button, int use_font);
     * }
     */
    public static void gtk_font_button_set_use_font(MemorySegment font_button, int use_font) {
        var mh$ = gtk_font_button_set_use_font$MH();
        try {
            mh$.invokeExact(font_button, use_font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_get_use_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2725.const$4,"gtk_font_button_get_use_size");
    }
    /**
     * {@snippet :
     * int gtk_font_button_get_use_size(struct _GtkFontButton* font_button);
     * }
     */
    public static int gtk_font_button_get_use_size(MemorySegment font_button) {
        var mh$ = gtk_font_button_get_use_size$MH();
        try {
            return (int)mh$.invokeExact(font_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_set_use_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2725.const$5,"gtk_font_button_set_use_size");
    }
    /**
     * {@snippet :
     * void gtk_font_button_set_use_size(struct _GtkFontButton* font_button, int use_size);
     * }
     */
    public static void gtk_font_button_set_use_size(MemorySegment font_button, int use_size) {
        var mh$ = gtk_font_button_set_use_size$MH();
        try {
            mh$.invokeExact(font_button, use_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_get_font_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2726.const$0,"gtk_font_button_get_font_name");
    }
    /**
     * {@snippet :
     * char* gtk_font_button_get_font_name(struct _GtkFontButton* font_button);
     * }
     */
    public static MemorySegment gtk_font_button_get_font_name(MemorySegment font_button) {
        var mh$ = gtk_font_button_get_font_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(font_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_set_font_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2726.const$1,"gtk_font_button_set_font_name");
    }
    /**
     * {@snippet :
     * int gtk_font_button_set_font_name(struct _GtkFontButton* font_button, char* fontname);
     * }
     */
    public static int gtk_font_button_set_font_name(MemorySegment font_button, MemorySegment fontname) {
        var mh$ = gtk_font_button_set_font_name$MH();
        try {
            return (int)mh$.invokeExact(font_button, fontname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_get_show_style$MH() {
        return RuntimeHelper.requireNonNull(constants$2726.const$2,"gtk_font_button_get_show_style");
    }
    /**
     * {@snippet :
     * int gtk_font_button_get_show_style(struct _GtkFontButton* font_button);
     * }
     */
    public static int gtk_font_button_get_show_style(MemorySegment font_button) {
        var mh$ = gtk_font_button_get_show_style$MH();
        try {
            return (int)mh$.invokeExact(font_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_set_show_style$MH() {
        return RuntimeHelper.requireNonNull(constants$2726.const$3,"gtk_font_button_set_show_style");
    }
    /**
     * {@snippet :
     * void gtk_font_button_set_show_style(struct _GtkFontButton* font_button, int show_style);
     * }
     */
    public static void gtk_font_button_set_show_style(MemorySegment font_button, int show_style) {
        var mh$ = gtk_font_button_set_show_style$MH();
        try {
            mh$.invokeExact(font_button, show_style);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_get_show_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2726.const$4,"gtk_font_button_get_show_size");
    }
    /**
     * {@snippet :
     * int gtk_font_button_get_show_size(struct _GtkFontButton* font_button);
     * }
     */
    public static int gtk_font_button_get_show_size(MemorySegment font_button) {
        var mh$ = gtk_font_button_get_show_size$MH();
        try {
            return (int)mh$.invokeExact(font_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_button_set_show_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2726.const$5,"gtk_font_button_set_show_size");
    }
    /**
     * {@snippet :
     * void gtk_font_button_set_show_size(struct _GtkFontButton* font_button, int show_size);
     * }
     */
    public static void gtk_font_button_set_show_size(MemorySegment font_button, int show_size) {
        var mh$ = gtk_font_button_set_show_size$MH();
        try {
            mh$.invokeExact(font_button, show_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkFontChooserLevel.GTK_FONT_CHOOSER_LEVEL_FAMILY = 0;
     * }
     */
    public static int GTK_FONT_CHOOSER_LEVEL_FAMILY() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkFontChooserLevel.GTK_FONT_CHOOSER_LEVEL_STYLE = 1;
     * }
     */
    public static int GTK_FONT_CHOOSER_LEVEL_STYLE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkFontChooserLevel.GTK_FONT_CHOOSER_LEVEL_SIZE = 2;
     * }
     */
    public static int GTK_FONT_CHOOSER_LEVEL_SIZE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkFontChooserLevel.GTK_FONT_CHOOSER_LEVEL_VARIATIONS = 4;
     * }
     */
    public static int GTK_FONT_CHOOSER_LEVEL_VARIATIONS() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkFontChooserLevel.GTK_FONT_CHOOSER_LEVEL_FEATURES = 8;
     * }
     */
    public static int GTK_FONT_CHOOSER_LEVEL_FEATURES() {
        return (int)8L;
    }
    public static MethodHandle gtk_font_chooser_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2729.const$4,"gtk_font_chooser_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_font_chooser_get_type();
     * }
     */
    public static long gtk_font_chooser_get_type() {
        var mh$ = gtk_font_chooser_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font_family$MH() {
        return RuntimeHelper.requireNonNull(constants$2729.const$5,"gtk_font_chooser_get_font_family");
    }
    /**
     * {@snippet :
     * struct _PangoFontFamily* gtk_font_chooser_get_font_family(struct _GtkFontChooser* fontchooser);
     * }
     */
    public static MemorySegment gtk_font_chooser_get_font_family(MemorySegment fontchooser) {
        var mh$ = gtk_font_chooser_get_font_family$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font_face$MH() {
        return RuntimeHelper.requireNonNull(constants$2730.const$0,"gtk_font_chooser_get_font_face");
    }
    /**
     * {@snippet :
     * struct _PangoFontFace* gtk_font_chooser_get_font_face(struct _GtkFontChooser* fontchooser);
     * }
     */
    public static MemorySegment gtk_font_chooser_get_font_face(MemorySegment fontchooser) {
        var mh$ = gtk_font_chooser_get_font_face$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2730.const$1,"gtk_font_chooser_get_font_size");
    }
    /**
     * {@snippet :
     * int gtk_font_chooser_get_font_size(struct _GtkFontChooser* fontchooser);
     * }
     */
    public static int gtk_font_chooser_get_font_size(MemorySegment fontchooser) {
        var mh$ = gtk_font_chooser_get_font_size$MH();
        try {
            return (int)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font_desc$MH() {
        return RuntimeHelper.requireNonNull(constants$2730.const$2,"gtk_font_chooser_get_font_desc");
    }
    /**
     * {@snippet :
     * struct _PangoFontDescription* gtk_font_chooser_get_font_desc(struct _GtkFontChooser* fontchooser);
     * }
     */
    public static MemorySegment gtk_font_chooser_get_font_desc(MemorySegment fontchooser) {
        var mh$ = gtk_font_chooser_get_font_desc$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_font_desc$MH() {
        return RuntimeHelper.requireNonNull(constants$2730.const$3,"gtk_font_chooser_set_font_desc");
    }
    /**
     * {@snippet :
     * void gtk_font_chooser_set_font_desc(struct _GtkFontChooser* fontchooser, struct _PangoFontDescription* font_desc);
     * }
     */
    public static void gtk_font_chooser_set_font_desc(MemorySegment fontchooser, MemorySegment font_desc) {
        var mh$ = gtk_font_chooser_set_font_desc$MH();
        try {
            mh$.invokeExact(fontchooser, font_desc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font$MH() {
        return RuntimeHelper.requireNonNull(constants$2730.const$4,"gtk_font_chooser_get_font");
    }
    /**
     * {@snippet :
     * char* gtk_font_chooser_get_font(struct _GtkFontChooser* fontchooser);
     * }
     */
    public static MemorySegment gtk_font_chooser_get_font(MemorySegment fontchooser) {
        var mh$ = gtk_font_chooser_get_font$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_font$MH() {
        return RuntimeHelper.requireNonNull(constants$2730.const$5,"gtk_font_chooser_set_font");
    }
    /**
     * {@snippet :
     * void gtk_font_chooser_set_font(struct _GtkFontChooser* fontchooser, char* fontname);
     * }
     */
    public static void gtk_font_chooser_set_font(MemorySegment fontchooser, MemorySegment fontname) {
        var mh$ = gtk_font_chooser_set_font$MH();
        try {
            mh$.invokeExact(fontchooser, fontname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_preview_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2731.const$0,"gtk_font_chooser_get_preview_text");
    }
    /**
     * {@snippet :
     * char* gtk_font_chooser_get_preview_text(struct _GtkFontChooser* fontchooser);
     * }
     */
    public static MemorySegment gtk_font_chooser_get_preview_text(MemorySegment fontchooser) {
        var mh$ = gtk_font_chooser_get_preview_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_preview_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2731.const$1,"gtk_font_chooser_set_preview_text");
    }
    /**
     * {@snippet :
     * void gtk_font_chooser_set_preview_text(struct _GtkFontChooser* fontchooser, char* text);
     * }
     */
    public static void gtk_font_chooser_set_preview_text(MemorySegment fontchooser, MemorySegment text) {
        var mh$ = gtk_font_chooser_set_preview_text$MH();
        try {
            mh$.invokeExact(fontchooser, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_show_preview_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$2731.const$2,"gtk_font_chooser_get_show_preview_entry");
    }
    /**
     * {@snippet :
     * int gtk_font_chooser_get_show_preview_entry(struct _GtkFontChooser* fontchooser);
     * }
     */
    public static int gtk_font_chooser_get_show_preview_entry(MemorySegment fontchooser) {
        var mh$ = gtk_font_chooser_get_show_preview_entry$MH();
        try {
            return (int)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_show_preview_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$2731.const$3,"gtk_font_chooser_set_show_preview_entry");
    }
    /**
     * {@snippet :
     * void gtk_font_chooser_set_show_preview_entry(struct _GtkFontChooser* fontchooser, int show_preview_entry);
     * }
     */
    public static void gtk_font_chooser_set_show_preview_entry(MemorySegment fontchooser, int show_preview_entry) {
        var mh$ = gtk_font_chooser_set_show_preview_entry$MH();
        try {
            mh$.invokeExact(fontchooser, show_preview_entry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_filter_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2732.const$0,"gtk_font_chooser_set_filter_func");
    }
    /**
     * {@snippet :
     * void gtk_font_chooser_set_filter_func(struct _GtkFontChooser* fontchooser, int (*filter)(struct _PangoFontFamily*,struct _PangoFontFace*,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void gtk_font_chooser_set_filter_func(MemorySegment fontchooser, MemorySegment filter, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = gtk_font_chooser_set_filter_func$MH();
        try {
            mh$.invokeExact(fontchooser, filter, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_font_map$MH() {
        return RuntimeHelper.requireNonNull(constants$2732.const$1,"gtk_font_chooser_set_font_map");
    }
    /**
     * {@snippet :
     * void gtk_font_chooser_set_font_map(struct _GtkFontChooser* fontchooser, struct _PangoFontMap* fontmap);
     * }
     */
    public static void gtk_font_chooser_set_font_map(MemorySegment fontchooser, MemorySegment fontmap) {
        var mh$ = gtk_font_chooser_set_font_map$MH();
        try {
            mh$.invokeExact(fontchooser, fontmap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font_map$MH() {
        return RuntimeHelper.requireNonNull(constants$2732.const$2,"gtk_font_chooser_get_font_map");
    }
    /**
     * {@snippet :
     * struct _PangoFontMap* gtk_font_chooser_get_font_map(struct _GtkFontChooser* fontchooser);
     * }
     */
    public static MemorySegment gtk_font_chooser_get_font_map(MemorySegment fontchooser) {
        var mh$ = gtk_font_chooser_get_font_map$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_level$MH() {
        return RuntimeHelper.requireNonNull(constants$2732.const$3,"gtk_font_chooser_set_level");
    }
    /**
     * {@snippet :
     * void gtk_font_chooser_set_level(struct _GtkFontChooser* fontchooser, enum GtkFontChooserLevel level);
     * }
     */
    public static void gtk_font_chooser_set_level(MemorySegment fontchooser, int level) {
        var mh$ = gtk_font_chooser_set_level$MH();
        try {
            mh$.invokeExact(fontchooser, level);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_level$MH() {
        return RuntimeHelper.requireNonNull(constants$2732.const$4,"gtk_font_chooser_get_level");
    }
    /**
     * {@snippet :
     * enum GtkFontChooserLevel gtk_font_chooser_get_level(struct _GtkFontChooser* fontchooser);
     * }
     */
    public static int gtk_font_chooser_get_level(MemorySegment fontchooser) {
        var mh$ = gtk_font_chooser_get_level$MH();
        try {
            return (int)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_font_features$MH() {
        return RuntimeHelper.requireNonNull(constants$2732.const$5,"gtk_font_chooser_get_font_features");
    }
    /**
     * {@snippet :
     * char* gtk_font_chooser_get_font_features(struct _GtkFontChooser* fontchooser);
     * }
     */
    public static MemorySegment gtk_font_chooser_get_font_features(MemorySegment fontchooser) {
        var mh$ = gtk_font_chooser_get_font_features$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_get_language$MH() {
        return RuntimeHelper.requireNonNull(constants$2733.const$0,"gtk_font_chooser_get_language");
    }
    /**
     * {@snippet :
     * char* gtk_font_chooser_get_language(struct _GtkFontChooser* fontchooser);
     * }
     */
    public static MemorySegment gtk_font_chooser_get_language(MemorySegment fontchooser) {
        var mh$ = gtk_font_chooser_get_language$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fontchooser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_set_language$MH() {
        return RuntimeHelper.requireNonNull(constants$2733.const$1,"gtk_font_chooser_set_language");
    }
    /**
     * {@snippet :
     * void gtk_font_chooser_set_language(struct _GtkFontChooser* fontchooser, char* language);
     * }
     */
    public static void gtk_font_chooser_set_language(MemorySegment fontchooser, MemorySegment language) {
        var mh$ = gtk_font_chooser_set_language$MH();
        try {
            mh$.invokeExact(fontchooser, language);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_dialog_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2735.const$1,"gtk_font_chooser_dialog_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_font_chooser_dialog_get_type();
     * }
     */
    public static long gtk_font_chooser_dialog_get_type() {
        var mh$ = gtk_font_chooser_dialog_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_dialog_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2735.const$2,"gtk_font_chooser_dialog_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_font_chooser_dialog_new(char* title, struct _GtkWindow* parent);
     * }
     */
    public static MemorySegment gtk_font_chooser_dialog_new(MemorySegment title, MemorySegment parent) {
        var mh$ = gtk_font_chooser_dialog_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(title, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_widget_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2738.const$4,"gtk_font_chooser_widget_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_font_chooser_widget_get_type();
     * }
     */
    public static long gtk_font_chooser_widget_get_type() {
        var mh$ = gtk_font_chooser_widget_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_font_chooser_widget_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2738.const$5,"gtk_font_chooser_widget_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_font_chooser_widget_new();
     * }
     */
    public static MemorySegment gtk_font_chooser_widget_new() {
        var mh$ = gtk_font_chooser_widget_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2739.const$0,"gtk_gesture_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_gesture_get_type();
     * }
     */
    public static long gtk_gesture_get_type() {
        var mh$ = gtk_gesture_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_device$MH() {
        return RuntimeHelper.requireNonNull(constants$2739.const$1,"gtk_gesture_get_device");
    }
    /**
     * {@snippet :
     * struct _GdkDevice* gtk_gesture_get_device(struct _GtkGesture* gesture);
     * }
     */
    public static MemorySegment gtk_gesture_get_device(MemorySegment gesture) {
        var mh$ = gtk_gesture_get_device$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_set_state$MH() {
        return RuntimeHelper.requireNonNull(constants$2739.const$2,"gtk_gesture_set_state");
    }
    /**
     * {@snippet :
     * int gtk_gesture_set_state(struct _GtkGesture* gesture, enum GtkEventSequenceState state);
     * }
     */
    public static int gtk_gesture_set_state(MemorySegment gesture, int state) {
        var mh$ = gtk_gesture_set_state$MH();
        try {
            return (int)mh$.invokeExact(gesture, state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_sequence_state$MH() {
        return RuntimeHelper.requireNonNull(constants$2739.const$3,"gtk_gesture_get_sequence_state");
    }
    /**
     * {@snippet :
     * enum GtkEventSequenceState gtk_gesture_get_sequence_state(struct _GtkGesture* gesture, struct _GdkEventSequence* sequence);
     * }
     */
    public static int gtk_gesture_get_sequence_state(MemorySegment gesture, MemorySegment sequence) {
        var mh$ = gtk_gesture_get_sequence_state$MH();
        try {
            return (int)mh$.invokeExact(gesture, sequence);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_set_sequence_state$MH() {
        return RuntimeHelper.requireNonNull(constants$2739.const$4,"gtk_gesture_set_sequence_state");
    }
    /**
     * {@snippet :
     * int gtk_gesture_set_sequence_state(struct _GtkGesture* gesture, struct _GdkEventSequence* sequence, enum GtkEventSequenceState state);
     * }
     */
    public static int gtk_gesture_set_sequence_state(MemorySegment gesture, MemorySegment sequence, int state) {
        var mh$ = gtk_gesture_set_sequence_state$MH();
        try {
            return (int)mh$.invokeExact(gesture, sequence, state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_sequences$MH() {
        return RuntimeHelper.requireNonNull(constants$2739.const$5,"gtk_gesture_get_sequences");
    }
    /**
     * {@snippet :
     * struct _GList* gtk_gesture_get_sequences(struct _GtkGesture* gesture);
     * }
     */
    public static MemorySegment gtk_gesture_get_sequences(MemorySegment gesture) {
        var mh$ = gtk_gesture_get_sequences$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_last_updated_sequence$MH() {
        return RuntimeHelper.requireNonNull(constants$2740.const$0,"gtk_gesture_get_last_updated_sequence");
    }
    /**
     * {@snippet :
     * struct _GdkEventSequence* gtk_gesture_get_last_updated_sequence(struct _GtkGesture* gesture);
     * }
     */
    public static MemorySegment gtk_gesture_get_last_updated_sequence(MemorySegment gesture) {
        var mh$ = gtk_gesture_get_last_updated_sequence$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_handles_sequence$MH() {
        return RuntimeHelper.requireNonNull(constants$2740.const$1,"gtk_gesture_handles_sequence");
    }
    /**
     * {@snippet :
     * int gtk_gesture_handles_sequence(struct _GtkGesture* gesture, struct _GdkEventSequence* sequence);
     * }
     */
    public static int gtk_gesture_handles_sequence(MemorySegment gesture, MemorySegment sequence) {
        var mh$ = gtk_gesture_handles_sequence$MH();
        try {
            return (int)mh$.invokeExact(gesture, sequence);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_last_event$MH() {
        return RuntimeHelper.requireNonNull(constants$2740.const$2,"gtk_gesture_get_last_event");
    }
    /**
     * {@snippet :
     * union _GdkEvent* gtk_gesture_get_last_event(struct _GtkGesture* gesture, struct _GdkEventSequence* sequence);
     * }
     */
    public static MemorySegment gtk_gesture_get_last_event(MemorySegment gesture, MemorySegment sequence) {
        var mh$ = gtk_gesture_get_last_event$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(gesture, sequence);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_point$MH() {
        return RuntimeHelper.requireNonNull(constants$2740.const$3,"gtk_gesture_get_point");
    }
    /**
     * {@snippet :
     * int gtk_gesture_get_point(struct _GtkGesture* gesture, struct _GdkEventSequence* sequence, double* x, double* y);
     * }
     */
    public static int gtk_gesture_get_point(MemorySegment gesture, MemorySegment sequence, MemorySegment x, MemorySegment y) {
        var mh$ = gtk_gesture_get_point$MH();
        try {
            return (int)mh$.invokeExact(gesture, sequence, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_bounding_box$MH() {
        return RuntimeHelper.requireNonNull(constants$2740.const$4,"gtk_gesture_get_bounding_box");
    }
    /**
     * {@snippet :
     * int gtk_gesture_get_bounding_box(struct _GtkGesture* gesture, struct _cairo_rectangle_int* rect);
     * }
     */
    public static int gtk_gesture_get_bounding_box(MemorySegment gesture, MemorySegment rect) {
        var mh$ = gtk_gesture_get_bounding_box$MH();
        try {
            return (int)mh$.invokeExact(gesture, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_bounding_box_center$MH() {
        return RuntimeHelper.requireNonNull(constants$2740.const$5,"gtk_gesture_get_bounding_box_center");
    }
    /**
     * {@snippet :
     * int gtk_gesture_get_bounding_box_center(struct _GtkGesture* gesture, double* x, double* y);
     * }
     */
    public static int gtk_gesture_get_bounding_box_center(MemorySegment gesture, MemorySegment x, MemorySegment y) {
        var mh$ = gtk_gesture_get_bounding_box_center$MH();
        try {
            return (int)mh$.invokeExact(gesture, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_is_active$MH() {
        return RuntimeHelper.requireNonNull(constants$2741.const$0,"gtk_gesture_is_active");
    }
    /**
     * {@snippet :
     * int gtk_gesture_is_active(struct _GtkGesture* gesture);
     * }
     */
    public static int gtk_gesture_is_active(MemorySegment gesture) {
        var mh$ = gtk_gesture_is_active$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_is_recognized$MH() {
        return RuntimeHelper.requireNonNull(constants$2741.const$1,"gtk_gesture_is_recognized");
    }
    /**
     * {@snippet :
     * int gtk_gesture_is_recognized(struct _GtkGesture* gesture);
     * }
     */
    public static int gtk_gesture_is_recognized(MemorySegment gesture) {
        var mh$ = gtk_gesture_is_recognized$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_window$MH() {
        return RuntimeHelper.requireNonNull(constants$2741.const$2,"gtk_gesture_get_window");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gtk_gesture_get_window(struct _GtkGesture* gesture);
     * }
     */
    public static MemorySegment gtk_gesture_get_window(MemorySegment gesture) {
        var mh$ = gtk_gesture_get_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_set_window$MH() {
        return RuntimeHelper.requireNonNull(constants$2741.const$3,"gtk_gesture_set_window");
    }
    /**
     * {@snippet :
     * void gtk_gesture_set_window(struct _GtkGesture* gesture, struct _GdkWindow* window);
     * }
     */
    public static void gtk_gesture_set_window(MemorySegment gesture, MemorySegment window) {
        var mh$ = gtk_gesture_set_window$MH();
        try {
            mh$.invokeExact(gesture, window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_group$MH() {
        return RuntimeHelper.requireNonNull(constants$2741.const$4,"gtk_gesture_group");
    }
    /**
     * {@snippet :
     * void gtk_gesture_group(struct _GtkGesture* group_gesture, struct _GtkGesture* gesture);
     * }
     */
    public static void gtk_gesture_group(MemorySegment group_gesture, MemorySegment gesture) {
        var mh$ = gtk_gesture_group$MH();
        try {
            mh$.invokeExact(group_gesture, gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_ungroup$MH() {
        return RuntimeHelper.requireNonNull(constants$2741.const$5,"gtk_gesture_ungroup");
    }
    /**
     * {@snippet :
     * void gtk_gesture_ungroup(struct _GtkGesture* gesture);
     * }
     */
    public static void gtk_gesture_ungroup(MemorySegment gesture) {
        var mh$ = gtk_gesture_ungroup$MH();
        try {
            mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_get_group$MH() {
        return RuntimeHelper.requireNonNull(constants$2742.const$0,"gtk_gesture_get_group");
    }
    /**
     * {@snippet :
     * struct _GList* gtk_gesture_get_group(struct _GtkGesture* gesture);
     * }
     */
    public static MemorySegment gtk_gesture_get_group(MemorySegment gesture) {
        var mh$ = gtk_gesture_get_group$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_is_grouped_with$MH() {
        return RuntimeHelper.requireNonNull(constants$2742.const$1,"gtk_gesture_is_grouped_with");
    }
    /**
     * {@snippet :
     * int gtk_gesture_is_grouped_with(struct _GtkGesture* gesture, struct _GtkGesture* other);
     * }
     */
    public static int gtk_gesture_is_grouped_with(MemorySegment gesture, MemorySegment other) {
        var mh$ = gtk_gesture_is_grouped_with$MH();
        try {
            return (int)mh$.invokeExact(gesture, other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2742.const$2,"gtk_gesture_single_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_gesture_single_get_type();
     * }
     */
    public static long gtk_gesture_single_get_type() {
        var mh$ = gtk_gesture_single_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_get_touch_only$MH() {
        return RuntimeHelper.requireNonNull(constants$2742.const$3,"gtk_gesture_single_get_touch_only");
    }
    /**
     * {@snippet :
     * int gtk_gesture_single_get_touch_only(struct _GtkGestureSingle* gesture);
     * }
     */
    public static int gtk_gesture_single_get_touch_only(MemorySegment gesture) {
        var mh$ = gtk_gesture_single_get_touch_only$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_set_touch_only$MH() {
        return RuntimeHelper.requireNonNull(constants$2742.const$4,"gtk_gesture_single_set_touch_only");
    }
    /**
     * {@snippet :
     * void gtk_gesture_single_set_touch_only(struct _GtkGestureSingle* gesture, int touch_only);
     * }
     */
    public static void gtk_gesture_single_set_touch_only(MemorySegment gesture, int touch_only) {
        var mh$ = gtk_gesture_single_set_touch_only$MH();
        try {
            mh$.invokeExact(gesture, touch_only);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_get_exclusive$MH() {
        return RuntimeHelper.requireNonNull(constants$2742.const$5,"gtk_gesture_single_get_exclusive");
    }
    /**
     * {@snippet :
     * int gtk_gesture_single_get_exclusive(struct _GtkGestureSingle* gesture);
     * }
     */
    public static int gtk_gesture_single_get_exclusive(MemorySegment gesture) {
        var mh$ = gtk_gesture_single_get_exclusive$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_set_exclusive$MH() {
        return RuntimeHelper.requireNonNull(constants$2743.const$0,"gtk_gesture_single_set_exclusive");
    }
    /**
     * {@snippet :
     * void gtk_gesture_single_set_exclusive(struct _GtkGestureSingle* gesture, int exclusive);
     * }
     */
    public static void gtk_gesture_single_set_exclusive(MemorySegment gesture, int exclusive) {
        var mh$ = gtk_gesture_single_set_exclusive$MH();
        try {
            mh$.invokeExact(gesture, exclusive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_get_button$MH() {
        return RuntimeHelper.requireNonNull(constants$2743.const$1,"gtk_gesture_single_get_button");
    }
    /**
     * {@snippet :
     * unsigned int gtk_gesture_single_get_button(struct _GtkGestureSingle* gesture);
     * }
     */
    public static int gtk_gesture_single_get_button(MemorySegment gesture) {
        var mh$ = gtk_gesture_single_get_button$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_set_button$MH() {
        return RuntimeHelper.requireNonNull(constants$2743.const$2,"gtk_gesture_single_set_button");
    }
    /**
     * {@snippet :
     * void gtk_gesture_single_set_button(struct _GtkGestureSingle* gesture, unsigned int button);
     * }
     */
    public static void gtk_gesture_single_set_button(MemorySegment gesture, int button) {
        var mh$ = gtk_gesture_single_set_button$MH();
        try {
            mh$.invokeExact(gesture, button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_get_current_button$MH() {
        return RuntimeHelper.requireNonNull(constants$2743.const$3,"gtk_gesture_single_get_current_button");
    }
    /**
     * {@snippet :
     * unsigned int gtk_gesture_single_get_current_button(struct _GtkGestureSingle* gesture);
     * }
     */
    public static int gtk_gesture_single_get_current_button(MemorySegment gesture) {
        var mh$ = gtk_gesture_single_get_current_button$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_single_get_current_sequence$MH() {
        return RuntimeHelper.requireNonNull(constants$2743.const$4,"gtk_gesture_single_get_current_sequence");
    }
    /**
     * {@snippet :
     * struct _GdkEventSequence* gtk_gesture_single_get_current_sequence(struct _GtkGestureSingle* gesture);
     * }
     */
    public static MemorySegment gtk_gesture_single_get_current_sequence(MemorySegment gesture) {
        var mh$ = gtk_gesture_single_get_current_sequence$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_drag_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2743.const$5,"gtk_gesture_drag_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_gesture_drag_get_type();
     * }
     */
    public static long gtk_gesture_drag_get_type() {
        var mh$ = gtk_gesture_drag_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_drag_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2744.const$0,"gtk_gesture_drag_new");
    }
    /**
     * {@snippet :
     * struct _GtkGesture* gtk_gesture_drag_new(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_gesture_drag_new(MemorySegment widget) {
        var mh$ = gtk_gesture_drag_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_drag_get_start_point$MH() {
        return RuntimeHelper.requireNonNull(constants$2744.const$1,"gtk_gesture_drag_get_start_point");
    }
    /**
     * {@snippet :
     * int gtk_gesture_drag_get_start_point(struct _GtkGestureDrag* gesture, double* x, double* y);
     * }
     */
    public static int gtk_gesture_drag_get_start_point(MemorySegment gesture, MemorySegment x, MemorySegment y) {
        var mh$ = gtk_gesture_drag_get_start_point$MH();
        try {
            return (int)mh$.invokeExact(gesture, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_drag_get_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$2744.const$2,"gtk_gesture_drag_get_offset");
    }
    /**
     * {@snippet :
     * int gtk_gesture_drag_get_offset(struct _GtkGestureDrag* gesture, double* x, double* y);
     * }
     */
    public static int gtk_gesture_drag_get_offset(MemorySegment gesture, MemorySegment x, MemorySegment y) {
        var mh$ = gtk_gesture_drag_get_offset$MH();
        try {
            return (int)mh$.invokeExact(gesture, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_long_press_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2744.const$3,"gtk_gesture_long_press_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_gesture_long_press_get_type();
     * }
     */
    public static long gtk_gesture_long_press_get_type() {
        var mh$ = gtk_gesture_long_press_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_long_press_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2744.const$4,"gtk_gesture_long_press_new");
    }
    /**
     * {@snippet :
     * struct _GtkGesture* gtk_gesture_long_press_new(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_gesture_long_press_new(MemorySegment widget) {
        var mh$ = gtk_gesture_long_press_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_multi_press_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2744.const$5,"gtk_gesture_multi_press_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_gesture_multi_press_get_type();
     * }
     */
    public static long gtk_gesture_multi_press_get_type() {
        var mh$ = gtk_gesture_multi_press_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_multi_press_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2745.const$0,"gtk_gesture_multi_press_new");
    }
    /**
     * {@snippet :
     * struct _GtkGesture* gtk_gesture_multi_press_new(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_gesture_multi_press_new(MemorySegment widget) {
        var mh$ = gtk_gesture_multi_press_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_multi_press_set_area$MH() {
        return RuntimeHelper.requireNonNull(constants$2745.const$1,"gtk_gesture_multi_press_set_area");
    }
    /**
     * {@snippet :
     * void gtk_gesture_multi_press_set_area(struct _GtkGestureMultiPress* gesture, struct _cairo_rectangle_int* rect);
     * }
     */
    public static void gtk_gesture_multi_press_set_area(MemorySegment gesture, MemorySegment rect) {
        var mh$ = gtk_gesture_multi_press_set_area$MH();
        try {
            mh$.invokeExact(gesture, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_multi_press_get_area$MH() {
        return RuntimeHelper.requireNonNull(constants$2745.const$2,"gtk_gesture_multi_press_get_area");
    }
    /**
     * {@snippet :
     * int gtk_gesture_multi_press_get_area(struct _GtkGestureMultiPress* gesture, struct _cairo_rectangle_int* rect);
     * }
     */
    public static int gtk_gesture_multi_press_get_area(MemorySegment gesture, MemorySegment rect) {
        var mh$ = gtk_gesture_multi_press_get_area$MH();
        try {
            return (int)mh$.invokeExact(gesture, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_pan_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2745.const$3,"gtk_gesture_pan_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_gesture_pan_get_type();
     * }
     */
    public static long gtk_gesture_pan_get_type() {
        var mh$ = gtk_gesture_pan_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_pan_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2745.const$4,"gtk_gesture_pan_new");
    }
    /**
     * {@snippet :
     * struct _GtkGesture* gtk_gesture_pan_new(struct _GtkWidget* widget, enum GtkOrientation orientation);
     * }
     */
    public static MemorySegment gtk_gesture_pan_new(MemorySegment widget, int orientation) {
        var mh$ = gtk_gesture_pan_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget, orientation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_pan_get_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$2745.const$5,"gtk_gesture_pan_get_orientation");
    }
    /**
     * {@snippet :
     * enum GtkOrientation gtk_gesture_pan_get_orientation(struct _GtkGesturePan* gesture);
     * }
     */
    public static int gtk_gesture_pan_get_orientation(MemorySegment gesture) {
        var mh$ = gtk_gesture_pan_get_orientation$MH();
        try {
            return (int)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_pan_set_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$2746.const$0,"gtk_gesture_pan_set_orientation");
    }
    /**
     * {@snippet :
     * void gtk_gesture_pan_set_orientation(struct _GtkGesturePan* gesture, enum GtkOrientation orientation);
     * }
     */
    public static void gtk_gesture_pan_set_orientation(MemorySegment gesture, int orientation) {
        var mh$ = gtk_gesture_pan_set_orientation$MH();
        try {
            mh$.invokeExact(gesture, orientation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_rotate_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2746.const$1,"gtk_gesture_rotate_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_gesture_rotate_get_type();
     * }
     */
    public static long gtk_gesture_rotate_get_type() {
        var mh$ = gtk_gesture_rotate_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_rotate_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2746.const$2,"gtk_gesture_rotate_new");
    }
    /**
     * {@snippet :
     * struct _GtkGesture* gtk_gesture_rotate_new(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_gesture_rotate_new(MemorySegment widget) {
        var mh$ = gtk_gesture_rotate_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_rotate_get_angle_delta$MH() {
        return RuntimeHelper.requireNonNull(constants$2746.const$3,"gtk_gesture_rotate_get_angle_delta");
    }
    /**
     * {@snippet :
     * double gtk_gesture_rotate_get_angle_delta(struct _GtkGestureRotate* gesture);
     * }
     */
    public static double gtk_gesture_rotate_get_angle_delta(MemorySegment gesture) {
        var mh$ = gtk_gesture_rotate_get_angle_delta$MH();
        try {
            return (double)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_stylus_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2746.const$4,"gtk_gesture_stylus_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_gesture_stylus_get_type();
     * }
     */
    public static long gtk_gesture_stylus_get_type() {
        var mh$ = gtk_gesture_stylus_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_stylus_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2746.const$5,"gtk_gesture_stylus_new");
    }
    /**
     * {@snippet :
     * struct _GtkGesture* gtk_gesture_stylus_new(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_gesture_stylus_new(MemorySegment widget) {
        var mh$ = gtk_gesture_stylus_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_stylus_get_axis$MH() {
        return RuntimeHelper.requireNonNull(constants$2747.const$0,"gtk_gesture_stylus_get_axis");
    }
    /**
     * {@snippet :
     * int gtk_gesture_stylus_get_axis(struct _GtkGestureStylus* gesture, enum GdkAxisUse axis, double* value);
     * }
     */
    public static int gtk_gesture_stylus_get_axis(MemorySegment gesture, int axis, MemorySegment value) {
        var mh$ = gtk_gesture_stylus_get_axis$MH();
        try {
            return (int)mh$.invokeExact(gesture, axis, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_stylus_get_axes$MH() {
        return RuntimeHelper.requireNonNull(constants$2747.const$1,"gtk_gesture_stylus_get_axes");
    }
    /**
     * {@snippet :
     * int gtk_gesture_stylus_get_axes(struct _GtkGestureStylus* gesture, enum GdkAxisUse axes[], double** values);
     * }
     */
    public static int gtk_gesture_stylus_get_axes(MemorySegment gesture, MemorySegment axes, MemorySegment values) {
        var mh$ = gtk_gesture_stylus_get_axes$MH();
        try {
            return (int)mh$.invokeExact(gesture, axes, values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_stylus_get_device_tool$MH() {
        return RuntimeHelper.requireNonNull(constants$2747.const$2,"gtk_gesture_stylus_get_device_tool");
    }
    /**
     * {@snippet :
     * struct _GdkDeviceTool* gtk_gesture_stylus_get_device_tool(struct _GtkGestureStylus* gesture);
     * }
     */
    public static MemorySegment gtk_gesture_stylus_get_device_tool(MemorySegment gesture) {
        var mh$ = gtk_gesture_stylus_get_device_tool$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_swipe_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2747.const$3,"gtk_gesture_swipe_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_gesture_swipe_get_type();
     * }
     */
    public static long gtk_gesture_swipe_get_type() {
        var mh$ = gtk_gesture_swipe_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_swipe_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2747.const$4,"gtk_gesture_swipe_new");
    }
    /**
     * {@snippet :
     * struct _GtkGesture* gtk_gesture_swipe_new(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_gesture_swipe_new(MemorySegment widget) {
        var mh$ = gtk_gesture_swipe_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_swipe_get_velocity$MH() {
        return RuntimeHelper.requireNonNull(constants$2747.const$5,"gtk_gesture_swipe_get_velocity");
    }
    /**
     * {@snippet :
     * int gtk_gesture_swipe_get_velocity(struct _GtkGestureSwipe* gesture, double* velocity_x, double* velocity_y);
     * }
     */
    public static int gtk_gesture_swipe_get_velocity(MemorySegment gesture, MemorySegment velocity_x, MemorySegment velocity_y) {
        var mh$ = gtk_gesture_swipe_get_velocity$MH();
        try {
            return (int)mh$.invokeExact(gesture, velocity_x, velocity_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_zoom_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2748.const$0,"gtk_gesture_zoom_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_gesture_zoom_get_type();
     * }
     */
    public static long gtk_gesture_zoom_get_type() {
        var mh$ = gtk_gesture_zoom_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_zoom_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2748.const$1,"gtk_gesture_zoom_new");
    }
    /**
     * {@snippet :
     * struct _GtkGesture* gtk_gesture_zoom_new(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_gesture_zoom_new(MemorySegment widget) {
        var mh$ = gtk_gesture_zoom_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gesture_zoom_get_scale_delta$MH() {
        return RuntimeHelper.requireNonNull(constants$2748.const$2,"gtk_gesture_zoom_get_scale_delta");
    }
    /**
     * {@snippet :
     * double gtk_gesture_zoom_get_scale_delta(struct _GtkGestureZoom* gesture);
     * }
     */
    public static double gtk_gesture_zoom_get_scale_delta(MemorySegment gesture) {
        var mh$ = gtk_gesture_zoom_get_scale_delta$MH();
        try {
            return (double)mh$.invokeExact(gesture);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2749.const$5,"gtk_gl_area_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_gl_area_get_type();
     * }
     */
    public static long gtk_gl_area_get_type() {
        var mh$ = gtk_gl_area_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2750.const$0,"gtk_gl_area_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_gl_area_new();
     * }
     */
    public static MemorySegment gtk_gl_area_new() {
        var mh$ = gtk_gl_area_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_set_use_es$MH() {
        return RuntimeHelper.requireNonNull(constants$2750.const$1,"gtk_gl_area_set_use_es");
    }
    /**
     * {@snippet :
     * void gtk_gl_area_set_use_es(struct _GtkGLArea* area, int use_es);
     * }
     */
    public static void gtk_gl_area_set_use_es(MemorySegment area, int use_es) {
        var mh$ = gtk_gl_area_set_use_es$MH();
        try {
            mh$.invokeExact(area, use_es);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_use_es$MH() {
        return RuntimeHelper.requireNonNull(constants$2750.const$2,"gtk_gl_area_get_use_es");
    }
    /**
     * {@snippet :
     * int gtk_gl_area_get_use_es(struct _GtkGLArea* area);
     * }
     */
    public static int gtk_gl_area_get_use_es(MemorySegment area) {
        var mh$ = gtk_gl_area_get_use_es$MH();
        try {
            return (int)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_set_required_version$MH() {
        return RuntimeHelper.requireNonNull(constants$2750.const$3,"gtk_gl_area_set_required_version");
    }
    /**
     * {@snippet :
     * void gtk_gl_area_set_required_version(struct _GtkGLArea* area, int major, int minor);
     * }
     */
    public static void gtk_gl_area_set_required_version(MemorySegment area, int major, int minor) {
        var mh$ = gtk_gl_area_set_required_version$MH();
        try {
            mh$.invokeExact(area, major, minor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_required_version$MH() {
        return RuntimeHelper.requireNonNull(constants$2750.const$4,"gtk_gl_area_get_required_version");
    }
    /**
     * {@snippet :
     * void gtk_gl_area_get_required_version(struct _GtkGLArea* area, int* major, int* minor);
     * }
     */
    public static void gtk_gl_area_get_required_version(MemorySegment area, MemorySegment major, MemorySegment minor) {
        var mh$ = gtk_gl_area_get_required_version$MH();
        try {
            mh$.invokeExact(area, major, minor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_has_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$2750.const$5,"gtk_gl_area_get_has_alpha");
    }
    /**
     * {@snippet :
     * int gtk_gl_area_get_has_alpha(struct _GtkGLArea* area);
     * }
     */
    public static int gtk_gl_area_get_has_alpha(MemorySegment area) {
        var mh$ = gtk_gl_area_get_has_alpha$MH();
        try {
            return (int)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_set_has_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$2751.const$0,"gtk_gl_area_set_has_alpha");
    }
    /**
     * {@snippet :
     * void gtk_gl_area_set_has_alpha(struct _GtkGLArea* area, int has_alpha);
     * }
     */
    public static void gtk_gl_area_set_has_alpha(MemorySegment area, int has_alpha) {
        var mh$ = gtk_gl_area_set_has_alpha$MH();
        try {
            mh$.invokeExact(area, has_alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_has_depth_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2751.const$1,"gtk_gl_area_get_has_depth_buffer");
    }
    /**
     * {@snippet :
     * int gtk_gl_area_get_has_depth_buffer(struct _GtkGLArea* area);
     * }
     */
    public static int gtk_gl_area_get_has_depth_buffer(MemorySegment area) {
        var mh$ = gtk_gl_area_get_has_depth_buffer$MH();
        try {
            return (int)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_set_has_depth_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2751.const$2,"gtk_gl_area_set_has_depth_buffer");
    }
    /**
     * {@snippet :
     * void gtk_gl_area_set_has_depth_buffer(struct _GtkGLArea* area, int has_depth_buffer);
     * }
     */
    public static void gtk_gl_area_set_has_depth_buffer(MemorySegment area, int has_depth_buffer) {
        var mh$ = gtk_gl_area_set_has_depth_buffer$MH();
        try {
            mh$.invokeExact(area, has_depth_buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_has_stencil_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2751.const$3,"gtk_gl_area_get_has_stencil_buffer");
    }
    /**
     * {@snippet :
     * int gtk_gl_area_get_has_stencil_buffer(struct _GtkGLArea* area);
     * }
     */
    public static int gtk_gl_area_get_has_stencil_buffer(MemorySegment area) {
        var mh$ = gtk_gl_area_get_has_stencil_buffer$MH();
        try {
            return (int)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_set_has_stencil_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2751.const$4,"gtk_gl_area_set_has_stencil_buffer");
    }
    /**
     * {@snippet :
     * void gtk_gl_area_set_has_stencil_buffer(struct _GtkGLArea* area, int has_stencil_buffer);
     * }
     */
    public static void gtk_gl_area_set_has_stencil_buffer(MemorySegment area, int has_stencil_buffer) {
        var mh$ = gtk_gl_area_set_has_stencil_buffer$MH();
        try {
            mh$.invokeExact(area, has_stencil_buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_auto_render$MH() {
        return RuntimeHelper.requireNonNull(constants$2751.const$5,"gtk_gl_area_get_auto_render");
    }
    /**
     * {@snippet :
     * int gtk_gl_area_get_auto_render(struct _GtkGLArea* area);
     * }
     */
    public static int gtk_gl_area_get_auto_render(MemorySegment area) {
        var mh$ = gtk_gl_area_get_auto_render$MH();
        try {
            return (int)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_set_auto_render$MH() {
        return RuntimeHelper.requireNonNull(constants$2752.const$0,"gtk_gl_area_set_auto_render");
    }
    /**
     * {@snippet :
     * void gtk_gl_area_set_auto_render(struct _GtkGLArea* area, int auto_render);
     * }
     */
    public static void gtk_gl_area_set_auto_render(MemorySegment area, int auto_render) {
        var mh$ = gtk_gl_area_set_auto_render$MH();
        try {
            mh$.invokeExact(area, auto_render);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_queue_render$MH() {
        return RuntimeHelper.requireNonNull(constants$2752.const$1,"gtk_gl_area_queue_render");
    }
    /**
     * {@snippet :
     * void gtk_gl_area_queue_render(struct _GtkGLArea* area);
     * }
     */
    public static void gtk_gl_area_queue_render(MemorySegment area) {
        var mh$ = gtk_gl_area_queue_render$MH();
        try {
            mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_context$MH() {
        return RuntimeHelper.requireNonNull(constants$2752.const$2,"gtk_gl_area_get_context");
    }
    /**
     * {@snippet :
     * struct _GdkGLContext* gtk_gl_area_get_context(struct _GtkGLArea* area);
     * }
     */
    public static MemorySegment gtk_gl_area_get_context(MemorySegment area) {
        var mh$ = gtk_gl_area_get_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_make_current$MH() {
        return RuntimeHelper.requireNonNull(constants$2752.const$3,"gtk_gl_area_make_current");
    }
    /**
     * {@snippet :
     * void gtk_gl_area_make_current(struct _GtkGLArea* area);
     * }
     */
    public static void gtk_gl_area_make_current(MemorySegment area) {
        var mh$ = gtk_gl_area_make_current$MH();
        try {
            mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_attach_buffers$MH() {
        return RuntimeHelper.requireNonNull(constants$2752.const$4,"gtk_gl_area_attach_buffers");
    }
    /**
     * {@snippet :
     * void gtk_gl_area_attach_buffers(struct _GtkGLArea* area);
     * }
     */
    public static void gtk_gl_area_attach_buffers(MemorySegment area) {
        var mh$ = gtk_gl_area_attach_buffers$MH();
        try {
            mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_set_error$MH() {
        return RuntimeHelper.requireNonNull(constants$2752.const$5,"gtk_gl_area_set_error");
    }
    /**
     * {@snippet :
     * void gtk_gl_area_set_error(struct _GtkGLArea* area, struct _GError* error);
     * }
     */
    public static void gtk_gl_area_set_error(MemorySegment area, MemorySegment error) {
        var mh$ = gtk_gl_area_set_error$MH();
        try {
            mh$.invokeExact(area, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_gl_area_get_error$MH() {
        return RuntimeHelper.requireNonNull(constants$2753.const$0,"gtk_gl_area_get_error");
    }
    /**
     * {@snippet :
     * struct _GError* gtk_gl_area_get_error(struct _GtkGLArea* area);
     * }
     */
    public static MemorySegment gtk_gl_area_get_error(MemorySegment area) {
        var mh$ = gtk_gl_area_get_error$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2756.const$2,"gtk_grid_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_grid_get_type();
     * }
     */
    public static long gtk_grid_get_type() {
        var mh$ = gtk_grid_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2756.const$3,"gtk_grid_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_grid_new();
     * }
     */
    public static MemorySegment gtk_grid_new() {
        var mh$ = gtk_grid_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_attach$MH() {
        return RuntimeHelper.requireNonNull(constants$2756.const$4,"gtk_grid_attach");
    }
    /**
     * {@snippet :
     * void gtk_grid_attach(struct _GtkGrid* grid, struct _GtkWidget* child, int left, int top, int width, int height);
     * }
     */
    public static void gtk_grid_attach(MemorySegment grid, MemorySegment child, int left, int top, int width, int height) {
        var mh$ = gtk_grid_attach$MH();
        try {
            mh$.invokeExact(grid, child, left, top, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_attach_next_to$MH() {
        return RuntimeHelper.requireNonNull(constants$2756.const$5,"gtk_grid_attach_next_to");
    }
    /**
     * {@snippet :
     * void gtk_grid_attach_next_to(struct _GtkGrid* grid, struct _GtkWidget* child, struct _GtkWidget* sibling, enum GtkPositionType side, int width, int height);
     * }
     */
    public static void gtk_grid_attach_next_to(MemorySegment grid, MemorySegment child, MemorySegment sibling, int side, int width, int height) {
        var mh$ = gtk_grid_attach_next_to$MH();
        try {
            mh$.invokeExact(grid, child, sibling, side, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_child_at$MH() {
        return RuntimeHelper.requireNonNull(constants$2757.const$0,"gtk_grid_get_child_at");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_grid_get_child_at(struct _GtkGrid* grid, int left, int top);
     * }
     */
    public static MemorySegment gtk_grid_get_child_at(MemorySegment grid, int left, int top) {
        var mh$ = gtk_grid_get_child_at$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(grid, left, top);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_insert_row$MH() {
        return RuntimeHelper.requireNonNull(constants$2757.const$1,"gtk_grid_insert_row");
    }
    /**
     * {@snippet :
     * void gtk_grid_insert_row(struct _GtkGrid* grid, int position);
     * }
     */
    public static void gtk_grid_insert_row(MemorySegment grid, int position) {
        var mh$ = gtk_grid_insert_row$MH();
        try {
            mh$.invokeExact(grid, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_insert_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2757.const$2,"gtk_grid_insert_column");
    }
    /**
     * {@snippet :
     * void gtk_grid_insert_column(struct _GtkGrid* grid, int position);
     * }
     */
    public static void gtk_grid_insert_column(MemorySegment grid, int position) {
        var mh$ = gtk_grid_insert_column$MH();
        try {
            mh$.invokeExact(grid, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_remove_row$MH() {
        return RuntimeHelper.requireNonNull(constants$2757.const$3,"gtk_grid_remove_row");
    }
    /**
     * {@snippet :
     * void gtk_grid_remove_row(struct _GtkGrid* grid, int position);
     * }
     */
    public static void gtk_grid_remove_row(MemorySegment grid, int position) {
        var mh$ = gtk_grid_remove_row$MH();
        try {
            mh$.invokeExact(grid, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_remove_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2757.const$4,"gtk_grid_remove_column");
    }
    /**
     * {@snippet :
     * void gtk_grid_remove_column(struct _GtkGrid* grid, int position);
     * }
     */
    public static void gtk_grid_remove_column(MemorySegment grid, int position) {
        var mh$ = gtk_grid_remove_column$MH();
        try {
            mh$.invokeExact(grid, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_insert_next_to$MH() {
        return RuntimeHelper.requireNonNull(constants$2757.const$5,"gtk_grid_insert_next_to");
    }
    /**
     * {@snippet :
     * void gtk_grid_insert_next_to(struct _GtkGrid* grid, struct _GtkWidget* sibling, enum GtkPositionType side);
     * }
     */
    public static void gtk_grid_insert_next_to(MemorySegment grid, MemorySegment sibling, int side) {
        var mh$ = gtk_grid_insert_next_to$MH();
        try {
            mh$.invokeExact(grid, sibling, side);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_set_row_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$2758.const$0,"gtk_grid_set_row_homogeneous");
    }
    /**
     * {@snippet :
     * void gtk_grid_set_row_homogeneous(struct _GtkGrid* grid, int homogeneous);
     * }
     */
    public static void gtk_grid_set_row_homogeneous(MemorySegment grid, int homogeneous) {
        var mh$ = gtk_grid_set_row_homogeneous$MH();
        try {
            mh$.invokeExact(grid, homogeneous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_row_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$2758.const$1,"gtk_grid_get_row_homogeneous");
    }
    /**
     * {@snippet :
     * int gtk_grid_get_row_homogeneous(struct _GtkGrid* grid);
     * }
     */
    public static int gtk_grid_get_row_homogeneous(MemorySegment grid) {
        var mh$ = gtk_grid_get_row_homogeneous$MH();
        try {
            return (int)mh$.invokeExact(grid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_set_row_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2758.const$2,"gtk_grid_set_row_spacing");
    }
    /**
     * {@snippet :
     * void gtk_grid_set_row_spacing(struct _GtkGrid* grid, unsigned int spacing);
     * }
     */
    public static void gtk_grid_set_row_spacing(MemorySegment grid, int spacing) {
        var mh$ = gtk_grid_set_row_spacing$MH();
        try {
            mh$.invokeExact(grid, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_row_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2758.const$3,"gtk_grid_get_row_spacing");
    }
    /**
     * {@snippet :
     * unsigned int gtk_grid_get_row_spacing(struct _GtkGrid* grid);
     * }
     */
    public static int gtk_grid_get_row_spacing(MemorySegment grid) {
        var mh$ = gtk_grid_get_row_spacing$MH();
        try {
            return (int)mh$.invokeExact(grid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_set_column_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$2758.const$4,"gtk_grid_set_column_homogeneous");
    }
    /**
     * {@snippet :
     * void gtk_grid_set_column_homogeneous(struct _GtkGrid* grid, int homogeneous);
     * }
     */
    public static void gtk_grid_set_column_homogeneous(MemorySegment grid, int homogeneous) {
        var mh$ = gtk_grid_set_column_homogeneous$MH();
        try {
            mh$.invokeExact(grid, homogeneous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_column_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$2758.const$5,"gtk_grid_get_column_homogeneous");
    }
    /**
     * {@snippet :
     * int gtk_grid_get_column_homogeneous(struct _GtkGrid* grid);
     * }
     */
    public static int gtk_grid_get_column_homogeneous(MemorySegment grid) {
        var mh$ = gtk_grid_get_column_homogeneous$MH();
        try {
            return (int)mh$.invokeExact(grid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_set_column_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2759.const$0,"gtk_grid_set_column_spacing");
    }
    /**
     * {@snippet :
     * void gtk_grid_set_column_spacing(struct _GtkGrid* grid, unsigned int spacing);
     * }
     */
    public static void gtk_grid_set_column_spacing(MemorySegment grid, int spacing) {
        var mh$ = gtk_grid_set_column_spacing$MH();
        try {
            mh$.invokeExact(grid, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_column_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2759.const$1,"gtk_grid_get_column_spacing");
    }
    /**
     * {@snippet :
     * unsigned int gtk_grid_get_column_spacing(struct _GtkGrid* grid);
     * }
     */
    public static int gtk_grid_get_column_spacing(MemorySegment grid) {
        var mh$ = gtk_grid_get_column_spacing$MH();
        try {
            return (int)mh$.invokeExact(grid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_set_row_baseline_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2759.const$2,"gtk_grid_set_row_baseline_position");
    }
    /**
     * {@snippet :
     * void gtk_grid_set_row_baseline_position(struct _GtkGrid* grid, int row, enum GtkBaselinePosition pos);
     * }
     */
    public static void gtk_grid_set_row_baseline_position(MemorySegment grid, int row, int pos) {
        var mh$ = gtk_grid_set_row_baseline_position$MH();
        try {
            mh$.invokeExact(grid, row, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_row_baseline_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2759.const$3,"gtk_grid_get_row_baseline_position");
    }
    /**
     * {@snippet :
     * enum GtkBaselinePosition gtk_grid_get_row_baseline_position(struct _GtkGrid* grid, int row);
     * }
     */
    public static int gtk_grid_get_row_baseline_position(MemorySegment grid, int row) {
        var mh$ = gtk_grid_get_row_baseline_position$MH();
        try {
            return (int)mh$.invokeExact(grid, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_set_baseline_row$MH() {
        return RuntimeHelper.requireNonNull(constants$2759.const$4,"gtk_grid_set_baseline_row");
    }
    /**
     * {@snippet :
     * void gtk_grid_set_baseline_row(struct _GtkGrid* grid, int row);
     * }
     */
    public static void gtk_grid_set_baseline_row(MemorySegment grid, int row) {
        var mh$ = gtk_grid_set_baseline_row$MH();
        try {
            mh$.invokeExact(grid, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grid_get_baseline_row$MH() {
        return RuntimeHelper.requireNonNull(constants$2759.const$5,"gtk_grid_get_baseline_row");
    }
    /**
     * {@snippet :
     * int gtk_grid_get_baseline_row(struct _GtkGrid* grid);
     * }
     */
    public static int gtk_grid_get_baseline_row(MemorySegment grid) {
        var mh$ = gtk_grid_get_baseline_row$MH();
        try {
            return (int)mh$.invokeExact(grid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2761.const$4,"gtk_header_bar_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_header_bar_get_type();
     * }
     */
    public static long gtk_header_bar_get_type() {
        var mh$ = gtk_header_bar_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2761.const$5,"gtk_header_bar_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_header_bar_new();
     * }
     */
    public static MemorySegment gtk_header_bar_new() {
        var mh$ = gtk_header_bar_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_set_title$MH() {
        return RuntimeHelper.requireNonNull(constants$2762.const$0,"gtk_header_bar_set_title");
    }
    /**
     * {@snippet :
     * void gtk_header_bar_set_title(struct _GtkHeaderBar* bar, char* title);
     * }
     */
    public static void gtk_header_bar_set_title(MemorySegment bar, MemorySegment title) {
        var mh$ = gtk_header_bar_set_title$MH();
        try {
            mh$.invokeExact(bar, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_get_title$MH() {
        return RuntimeHelper.requireNonNull(constants$2762.const$1,"gtk_header_bar_get_title");
    }
    /**
     * {@snippet :
     * char* gtk_header_bar_get_title(struct _GtkHeaderBar* bar);
     * }
     */
    public static MemorySegment gtk_header_bar_get_title(MemorySegment bar) {
        var mh$ = gtk_header_bar_get_title$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_set_subtitle$MH() {
        return RuntimeHelper.requireNonNull(constants$2762.const$2,"gtk_header_bar_set_subtitle");
    }
    /**
     * {@snippet :
     * void gtk_header_bar_set_subtitle(struct _GtkHeaderBar* bar, char* subtitle);
     * }
     */
    public static void gtk_header_bar_set_subtitle(MemorySegment bar, MemorySegment subtitle) {
        var mh$ = gtk_header_bar_set_subtitle$MH();
        try {
            mh$.invokeExact(bar, subtitle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_get_subtitle$MH() {
        return RuntimeHelper.requireNonNull(constants$2762.const$3,"gtk_header_bar_get_subtitle");
    }
    /**
     * {@snippet :
     * char* gtk_header_bar_get_subtitle(struct _GtkHeaderBar* bar);
     * }
     */
    public static MemorySegment gtk_header_bar_get_subtitle(MemorySegment bar) {
        var mh$ = gtk_header_bar_get_subtitle$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_set_custom_title$MH() {
        return RuntimeHelper.requireNonNull(constants$2762.const$4,"gtk_header_bar_set_custom_title");
    }
    /**
     * {@snippet :
     * void gtk_header_bar_set_custom_title(struct _GtkHeaderBar* bar, struct _GtkWidget* title_widget);
     * }
     */
    public static void gtk_header_bar_set_custom_title(MemorySegment bar, MemorySegment title_widget) {
        var mh$ = gtk_header_bar_set_custom_title$MH();
        try {
            mh$.invokeExact(bar, title_widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_get_custom_title$MH() {
        return RuntimeHelper.requireNonNull(constants$2762.const$5,"gtk_header_bar_get_custom_title");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_header_bar_get_custom_title(struct _GtkHeaderBar* bar);
     * }
     */
    public static MemorySegment gtk_header_bar_get_custom_title(MemorySegment bar) {
        var mh$ = gtk_header_bar_get_custom_title$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_pack_start$MH() {
        return RuntimeHelper.requireNonNull(constants$2763.const$0,"gtk_header_bar_pack_start");
    }
    /**
     * {@snippet :
     * void gtk_header_bar_pack_start(struct _GtkHeaderBar* bar, struct _GtkWidget* child);
     * }
     */
    public static void gtk_header_bar_pack_start(MemorySegment bar, MemorySegment child) {
        var mh$ = gtk_header_bar_pack_start$MH();
        try {
            mh$.invokeExact(bar, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_pack_end$MH() {
        return RuntimeHelper.requireNonNull(constants$2763.const$1,"gtk_header_bar_pack_end");
    }
    /**
     * {@snippet :
     * void gtk_header_bar_pack_end(struct _GtkHeaderBar* bar, struct _GtkWidget* child);
     * }
     */
    public static void gtk_header_bar_pack_end(MemorySegment bar, MemorySegment child) {
        var mh$ = gtk_header_bar_pack_end$MH();
        try {
            mh$.invokeExact(bar, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_get_show_close_button$MH() {
        return RuntimeHelper.requireNonNull(constants$2763.const$2,"gtk_header_bar_get_show_close_button");
    }
    /**
     * {@snippet :
     * int gtk_header_bar_get_show_close_button(struct _GtkHeaderBar* bar);
     * }
     */
    public static int gtk_header_bar_get_show_close_button(MemorySegment bar) {
        var mh$ = gtk_header_bar_get_show_close_button$MH();
        try {
            return (int)mh$.invokeExact(bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_set_show_close_button$MH() {
        return RuntimeHelper.requireNonNull(constants$2763.const$3,"gtk_header_bar_set_show_close_button");
    }
    /**
     * {@snippet :
     * void gtk_header_bar_set_show_close_button(struct _GtkHeaderBar* bar, int setting);
     * }
     */
    public static void gtk_header_bar_set_show_close_button(MemorySegment bar, int setting) {
        var mh$ = gtk_header_bar_set_show_close_button$MH();
        try {
            mh$.invokeExact(bar, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_set_has_subtitle$MH() {
        return RuntimeHelper.requireNonNull(constants$2763.const$4,"gtk_header_bar_set_has_subtitle");
    }
    /**
     * {@snippet :
     * void gtk_header_bar_set_has_subtitle(struct _GtkHeaderBar* bar, int setting);
     * }
     */
    public static void gtk_header_bar_set_has_subtitle(MemorySegment bar, int setting) {
        var mh$ = gtk_header_bar_set_has_subtitle$MH();
        try {
            mh$.invokeExact(bar, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_get_has_subtitle$MH() {
        return RuntimeHelper.requireNonNull(constants$2763.const$5,"gtk_header_bar_get_has_subtitle");
    }
    /**
     * {@snippet :
     * int gtk_header_bar_get_has_subtitle(struct _GtkHeaderBar* bar);
     * }
     */
    public static int gtk_header_bar_get_has_subtitle(MemorySegment bar) {
        var mh$ = gtk_header_bar_get_has_subtitle$MH();
        try {
            return (int)mh$.invokeExact(bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_set_decoration_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$2764.const$0,"gtk_header_bar_set_decoration_layout");
    }
    /**
     * {@snippet :
     * void gtk_header_bar_set_decoration_layout(struct _GtkHeaderBar* bar, char* layout);
     * }
     */
    public static void gtk_header_bar_set_decoration_layout(MemorySegment bar, MemorySegment layout) {
        var mh$ = gtk_header_bar_set_decoration_layout$MH();
        try {
            mh$.invokeExact(bar, layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_header_bar_get_decoration_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$2764.const$1,"gtk_header_bar_get_decoration_layout");
    }
    /**
     * {@snippet :
     * char* gtk_header_bar_get_decoration_layout(struct _GtkHeaderBar* bar);
     * }
     */
    public static MemorySegment gtk_header_bar_get_decoration_layout(MemorySegment bar) {
        var mh$ = gtk_header_bar_get_decoration_layout$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_factory_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2766.const$1,"gtk_icon_factory_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_icon_factory_get_type();
     * }
     */
    public static long gtk_icon_factory_get_type() {
        var mh$ = gtk_icon_factory_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_factory_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2766.const$2,"gtk_icon_factory_new");
    }
    /**
     * {@snippet :
     * struct _GtkIconFactory* gtk_icon_factory_new();
     * }
     */
    public static MemorySegment gtk_icon_factory_new() {
        var mh$ = gtk_icon_factory_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_factory_add$MH() {
        return RuntimeHelper.requireNonNull(constants$2766.const$3,"gtk_icon_factory_add");
    }
    /**
     * {@snippet :
     * void gtk_icon_factory_add(struct _GtkIconFactory* factory, char* stock_id, struct _GtkIconSet* icon_set);
     * }
     */
    public static void gtk_icon_factory_add(MemorySegment factory, MemorySegment stock_id, MemorySegment icon_set) {
        var mh$ = gtk_icon_factory_add$MH();
        try {
            mh$.invokeExact(factory, stock_id, icon_set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_factory_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$2766.const$4,"gtk_icon_factory_lookup");
    }
    /**
     * {@snippet :
     * struct _GtkIconSet* gtk_icon_factory_lookup(struct _GtkIconFactory* factory, char* stock_id);
     * }
     */
    public static MemorySegment gtk_icon_factory_lookup(MemorySegment factory, MemorySegment stock_id) {
        var mh$ = gtk_icon_factory_lookup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(factory, stock_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_factory_add_default$MH() {
        return RuntimeHelper.requireNonNull(constants$2766.const$5,"gtk_icon_factory_add_default");
    }
    /**
     * {@snippet :
     * void gtk_icon_factory_add_default(struct _GtkIconFactory* factory);
     * }
     */
    public static void gtk_icon_factory_add_default(MemorySegment factory) {
        var mh$ = gtk_icon_factory_add_default$MH();
        try {
            mh$.invokeExact(factory);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_factory_remove_default$MH() {
        return RuntimeHelper.requireNonNull(constants$2767.const$0,"gtk_icon_factory_remove_default");
    }
    /**
     * {@snippet :
     * void gtk_icon_factory_remove_default(struct _GtkIconFactory* factory);
     * }
     */
    public static void gtk_icon_factory_remove_default(MemorySegment factory) {
        var mh$ = gtk_icon_factory_remove_default$MH();
        try {
            mh$.invokeExact(factory);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_factory_lookup_default$MH() {
        return RuntimeHelper.requireNonNull(constants$2767.const$1,"gtk_icon_factory_lookup_default");
    }
    /**
     * {@snippet :
     * struct _GtkIconSet* gtk_icon_factory_lookup_default(char* stock_id);
     * }
     */
    public static MemorySegment gtk_icon_factory_lookup_default(MemorySegment stock_id) {
        var mh$ = gtk_icon_factory_lookup_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stock_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_size_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$2767.const$2,"gtk_icon_size_lookup");
    }
    /**
     * {@snippet :
     * int gtk_icon_size_lookup(enum GtkIconSize size, int* width, int* height);
     * }
     */
    public static int gtk_icon_size_lookup(int size, MemorySegment width, MemorySegment height) {
        var mh$ = gtk_icon_size_lookup$MH();
        try {
            return (int)mh$.invokeExact(size, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_size_lookup_for_settings$MH() {
        return RuntimeHelper.requireNonNull(constants$2767.const$3,"gtk_icon_size_lookup_for_settings");
    }
    /**
     * {@snippet :
     * int gtk_icon_size_lookup_for_settings(struct _GtkSettings* settings, enum GtkIconSize size, int* width, int* height);
     * }
     */
    public static int gtk_icon_size_lookup_for_settings(MemorySegment settings, int size, MemorySegment width, MemorySegment height) {
        var mh$ = gtk_icon_size_lookup_for_settings$MH();
        try {
            return (int)mh$.invokeExact(settings, size, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_size_register$MH() {
        return RuntimeHelper.requireNonNull(constants$2767.const$4,"gtk_icon_size_register");
    }
    /**
     * {@snippet :
     * enum GtkIconSize gtk_icon_size_register(char* name, int width, int height);
     * }
     */
    public static int gtk_icon_size_register(MemorySegment name, int width, int height) {
        var mh$ = gtk_icon_size_register$MH();
        try {
            return (int)mh$.invokeExact(name, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_size_register_alias$MH() {
        return RuntimeHelper.requireNonNull(constants$2767.const$5,"gtk_icon_size_register_alias");
    }
    /**
     * {@snippet :
     * void gtk_icon_size_register_alias(char* alias, enum GtkIconSize target);
     * }
     */
    public static void gtk_icon_size_register_alias(MemorySegment alias, int target) {
        var mh$ = gtk_icon_size_register_alias$MH();
        try {
            mh$.invokeExact(alias, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_size_from_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2768.const$0,"gtk_icon_size_from_name");
    }
    /**
     * {@snippet :
     * enum GtkIconSize gtk_icon_size_from_name(char* name);
     * }
     */
    public static int gtk_icon_size_from_name(MemorySegment name) {
        var mh$ = gtk_icon_size_from_name$MH();
        try {
            return (int)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_size_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2768.const$1,"gtk_icon_size_get_name");
    }
    /**
     * {@snippet :
     * char* gtk_icon_size_get_name(enum GtkIconSize size);
     * }
     */
    public static MemorySegment gtk_icon_size_get_name(int size) {
        var mh$ = gtk_icon_size_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_set_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2768.const$2,"gtk_icon_set_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_icon_set_get_type();
     * }
     */
    public static long gtk_icon_set_get_type() {
        var mh$ = gtk_icon_set_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_set_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2768.const$3,"gtk_icon_set_new");
    }
    /**
     * {@snippet :
     * struct _GtkIconSet* gtk_icon_set_new();
     * }
     */
    public static MemorySegment gtk_icon_set_new() {
        var mh$ = gtk_icon_set_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_set_new_from_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$2768.const$4,"gtk_icon_set_new_from_pixbuf");
    }
    /**
     * {@snippet :
     * struct _GtkIconSet* gtk_icon_set_new_from_pixbuf(struct _GdkPixbuf* pixbuf);
     * }
     */
    public static MemorySegment gtk_icon_set_new_from_pixbuf(MemorySegment pixbuf) {
        var mh$ = gtk_icon_set_new_from_pixbuf$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_set_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$2768.const$5,"gtk_icon_set_ref");
    }
    /**
     * {@snippet :
     * struct _GtkIconSet* gtk_icon_set_ref(struct _GtkIconSet* icon_set);
     * }
     */
    public static MemorySegment gtk_icon_set_ref(MemorySegment icon_set) {
        var mh$ = gtk_icon_set_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_set_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$2769.const$0,"gtk_icon_set_unref");
    }
    /**
     * {@snippet :
     * void gtk_icon_set_unref(struct _GtkIconSet* icon_set);
     * }
     */
    public static void gtk_icon_set_unref(MemorySegment icon_set) {
        var mh$ = gtk_icon_set_unref$MH();
        try {
            mh$.invokeExact(icon_set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_set_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$2769.const$1,"gtk_icon_set_copy");
    }
    /**
     * {@snippet :
     * struct _GtkIconSet* gtk_icon_set_copy(struct _GtkIconSet* icon_set);
     * }
     */
    public static MemorySegment gtk_icon_set_copy(MemorySegment icon_set) {
        var mh$ = gtk_icon_set_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_set_render_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$2769.const$3,"gtk_icon_set_render_icon");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gtk_icon_set_render_icon(struct _GtkIconSet* icon_set, struct _GtkStyle* style, enum GtkTextDirection direction, enum GtkStateType state, enum GtkIconSize size, struct _GtkWidget* widget, char* detail);
     * }
     */
    public static MemorySegment gtk_icon_set_render_icon(MemorySegment icon_set, MemorySegment style, int direction, int state, int size, MemorySegment widget, MemorySegment detail) {
        var mh$ = gtk_icon_set_render_icon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_set, style, direction, state, size, widget, detail);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_set_add_source$MH() {
        return RuntimeHelper.requireNonNull(constants$2769.const$4,"gtk_icon_set_add_source");
    }
    /**
     * {@snippet :
     * void gtk_icon_set_add_source(struct _GtkIconSet* icon_set, struct _GtkIconSource* source);
     * }
     */
    public static void gtk_icon_set_add_source(MemorySegment icon_set, MemorySegment source) {
        var mh$ = gtk_icon_set_add_source$MH();
        try {
            mh$.invokeExact(icon_set, source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_set_get_sizes$MH() {
        return RuntimeHelper.requireNonNull(constants$2769.const$5,"gtk_icon_set_get_sizes");
    }
    /**
     * {@snippet :
     * void gtk_icon_set_get_sizes(struct _GtkIconSet* icon_set, enum GtkIconSize** sizes, int* n_sizes);
     * }
     */
    public static void gtk_icon_set_get_sizes(MemorySegment icon_set, MemorySegment sizes, MemorySegment n_sizes) {
        var mh$ = gtk_icon_set_get_sizes$MH();
        try {
            mh$.invokeExact(icon_set, sizes, n_sizes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2770.const$0,"gtk_icon_source_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_icon_source_get_type();
     * }
     */
    public static long gtk_icon_source_get_type() {
        var mh$ = gtk_icon_source_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2770.const$1,"gtk_icon_source_new");
    }
    /**
     * {@snippet :
     * struct _GtkIconSource* gtk_icon_source_new();
     * }
     */
    public static MemorySegment gtk_icon_source_new() {
        var mh$ = gtk_icon_source_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$2770.const$2,"gtk_icon_source_copy");
    }
    /**
     * {@snippet :
     * struct _GtkIconSource* gtk_icon_source_copy(struct _GtkIconSource* source);
     * }
     */
    public static MemorySegment gtk_icon_source_copy(MemorySegment source) {
        var mh$ = gtk_icon_source_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_free$MH() {
        return RuntimeHelper.requireNonNull(constants$2770.const$3,"gtk_icon_source_free");
    }
    /**
     * {@snippet :
     * void gtk_icon_source_free(struct _GtkIconSource* source);
     * }
     */
    public static void gtk_icon_source_free(MemorySegment source) {
        var mh$ = gtk_icon_source_free$MH();
        try {
            mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_set_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$2770.const$4,"gtk_icon_source_set_filename");
    }
    /**
     * {@snippet :
     * void gtk_icon_source_set_filename(struct _GtkIconSource* source, char* filename);
     * }
     */
    public static void gtk_icon_source_set_filename(MemorySegment source, MemorySegment filename) {
        var mh$ = gtk_icon_source_set_filename$MH();
        try {
            mh$.invokeExact(source, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_set_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2770.const$5,"gtk_icon_source_set_icon_name");
    }
    /**
     * {@snippet :
     * void gtk_icon_source_set_icon_name(struct _GtkIconSource* source, char* icon_name);
     * }
     */
    public static void gtk_icon_source_set_icon_name(MemorySegment source, MemorySegment icon_name) {
        var mh$ = gtk_icon_source_set_icon_name$MH();
        try {
            mh$.invokeExact(source, icon_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_set_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$2771.const$0,"gtk_icon_source_set_pixbuf");
    }
    /**
     * {@snippet :
     * void gtk_icon_source_set_pixbuf(struct _GtkIconSource* source, struct _GdkPixbuf* pixbuf);
     * }
     */
    public static void gtk_icon_source_set_pixbuf(MemorySegment source, MemorySegment pixbuf) {
        var mh$ = gtk_icon_source_set_pixbuf$MH();
        try {
            mh$.invokeExact(source, pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_get_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$2771.const$1,"gtk_icon_source_get_filename");
    }
    /**
     * {@snippet :
     * char* gtk_icon_source_get_filename(struct _GtkIconSource* source);
     * }
     */
    public static MemorySegment gtk_icon_source_get_filename(MemorySegment source) {
        var mh$ = gtk_icon_source_get_filename$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_get_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2771.const$2,"gtk_icon_source_get_icon_name");
    }
    /**
     * {@snippet :
     * char* gtk_icon_source_get_icon_name(struct _GtkIconSource* source);
     * }
     */
    public static MemorySegment gtk_icon_source_get_icon_name(MemorySegment source) {
        var mh$ = gtk_icon_source_get_icon_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_get_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$2771.const$3,"gtk_icon_source_get_pixbuf");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gtk_icon_source_get_pixbuf(struct _GtkIconSource* source);
     * }
     */
    public static MemorySegment gtk_icon_source_get_pixbuf(MemorySegment source) {
        var mh$ = gtk_icon_source_get_pixbuf$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_set_direction_wildcarded$MH() {
        return RuntimeHelper.requireNonNull(constants$2771.const$4,"gtk_icon_source_set_direction_wildcarded");
    }
    /**
     * {@snippet :
     * void gtk_icon_source_set_direction_wildcarded(struct _GtkIconSource* source, int setting);
     * }
     */
    public static void gtk_icon_source_set_direction_wildcarded(MemorySegment source, int setting) {
        var mh$ = gtk_icon_source_set_direction_wildcarded$MH();
        try {
            mh$.invokeExact(source, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_set_state_wildcarded$MH() {
        return RuntimeHelper.requireNonNull(constants$2771.const$5,"gtk_icon_source_set_state_wildcarded");
    }
    /**
     * {@snippet :
     * void gtk_icon_source_set_state_wildcarded(struct _GtkIconSource* source, int setting);
     * }
     */
    public static void gtk_icon_source_set_state_wildcarded(MemorySegment source, int setting) {
        var mh$ = gtk_icon_source_set_state_wildcarded$MH();
        try {
            mh$.invokeExact(source, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_set_size_wildcarded$MH() {
        return RuntimeHelper.requireNonNull(constants$2772.const$0,"gtk_icon_source_set_size_wildcarded");
    }
    /**
     * {@snippet :
     * void gtk_icon_source_set_size_wildcarded(struct _GtkIconSource* source, int setting);
     * }
     */
    public static void gtk_icon_source_set_size_wildcarded(MemorySegment source, int setting) {
        var mh$ = gtk_icon_source_set_size_wildcarded$MH();
        try {
            mh$.invokeExact(source, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_get_size_wildcarded$MH() {
        return RuntimeHelper.requireNonNull(constants$2772.const$1,"gtk_icon_source_get_size_wildcarded");
    }
    /**
     * {@snippet :
     * int gtk_icon_source_get_size_wildcarded(struct _GtkIconSource* source);
     * }
     */
    public static int gtk_icon_source_get_size_wildcarded(MemorySegment source) {
        var mh$ = gtk_icon_source_get_size_wildcarded$MH();
        try {
            return (int)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_get_state_wildcarded$MH() {
        return RuntimeHelper.requireNonNull(constants$2772.const$2,"gtk_icon_source_get_state_wildcarded");
    }
    /**
     * {@snippet :
     * int gtk_icon_source_get_state_wildcarded(struct _GtkIconSource* source);
     * }
     */
    public static int gtk_icon_source_get_state_wildcarded(MemorySegment source) {
        var mh$ = gtk_icon_source_get_state_wildcarded$MH();
        try {
            return (int)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_get_direction_wildcarded$MH() {
        return RuntimeHelper.requireNonNull(constants$2772.const$3,"gtk_icon_source_get_direction_wildcarded");
    }
    /**
     * {@snippet :
     * int gtk_icon_source_get_direction_wildcarded(struct _GtkIconSource* source);
     * }
     */
    public static int gtk_icon_source_get_direction_wildcarded(MemorySegment source) {
        var mh$ = gtk_icon_source_get_direction_wildcarded$MH();
        try {
            return (int)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_set_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$2772.const$4,"gtk_icon_source_set_direction");
    }
    /**
     * {@snippet :
     * void gtk_icon_source_set_direction(struct _GtkIconSource* source, enum GtkTextDirection direction);
     * }
     */
    public static void gtk_icon_source_set_direction(MemorySegment source, int direction) {
        var mh$ = gtk_icon_source_set_direction$MH();
        try {
            mh$.invokeExact(source, direction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_set_state$MH() {
        return RuntimeHelper.requireNonNull(constants$2772.const$5,"gtk_icon_source_set_state");
    }
    /**
     * {@snippet :
     * void gtk_icon_source_set_state(struct _GtkIconSource* source, enum GtkStateType state);
     * }
     */
    public static void gtk_icon_source_set_state(MemorySegment source, int state) {
        var mh$ = gtk_icon_source_set_state$MH();
        try {
            mh$.invokeExact(source, state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_set_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2773.const$0,"gtk_icon_source_set_size");
    }
    /**
     * {@snippet :
     * void gtk_icon_source_set_size(struct _GtkIconSource* source, enum GtkIconSize size);
     * }
     */
    public static void gtk_icon_source_set_size(MemorySegment source, int size) {
        var mh$ = gtk_icon_source_set_size$MH();
        try {
            mh$.invokeExact(source, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_get_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$2773.const$1,"gtk_icon_source_get_direction");
    }
    /**
     * {@snippet :
     * enum GtkTextDirection gtk_icon_source_get_direction(struct _GtkIconSource* source);
     * }
     */
    public static int gtk_icon_source_get_direction(MemorySegment source) {
        var mh$ = gtk_icon_source_get_direction$MH();
        try {
            return (int)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_get_state$MH() {
        return RuntimeHelper.requireNonNull(constants$2773.const$2,"gtk_icon_source_get_state");
    }
    /**
     * {@snippet :
     * enum GtkStateType gtk_icon_source_get_state(struct _GtkIconSource* source);
     * }
     */
    public static int gtk_icon_source_get_state(MemorySegment source) {
        var mh$ = gtk_icon_source_get_state$MH();
        try {
            return (int)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_source_get_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2773.const$3,"gtk_icon_source_get_size");
    }
    /**
     * {@snippet :
     * enum GtkIconSize gtk_icon_source_get_size(struct _GtkIconSource* source);
     * }
     */
    public static int gtk_icon_source_get_size(MemorySegment source) {
        var mh$ = gtk_icon_source_get_size$MH();
        try {
            return (int)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_properties_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2775.const$4,"gtk_style_properties_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_style_properties_get_type();
     * }
     */
    public static long gtk_style_properties_get_type() {
        var mh$ = gtk_style_properties_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_properties_register_property$MH() {
        return RuntimeHelper.requireNonNull(constants$2776.const$0,"gtk_style_properties_register_property");
    }
    /**
     * {@snippet :
     * void gtk_style_properties_register_property(int (*parse_func)(char*,struct _GValue*,struct _GError**), struct _GParamSpec* pspec);
     * }
     */
    public static void gtk_style_properties_register_property(MemorySegment parse_func, MemorySegment pspec) {
        var mh$ = gtk_style_properties_register_property$MH();
        try {
            mh$.invokeExact(parse_func, pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_properties_lookup_property$MH() {
        return RuntimeHelper.requireNonNull(constants$2776.const$2,"gtk_style_properties_lookup_property");
    }
    /**
     * {@snippet :
     * int gtk_style_properties_lookup_property(char* property_name, int (**parse_func)(char*,struct _GValue*,struct _GError**), struct _GParamSpec** pspec);
     * }
     */
    public static int gtk_style_properties_lookup_property(MemorySegment property_name, MemorySegment parse_func, MemorySegment pspec) {
        var mh$ = gtk_style_properties_lookup_property$MH();
        try {
            return (int)mh$.invokeExact(property_name, parse_func, pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_properties_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2776.const$3,"gtk_style_properties_new");
    }
    /**
     * {@snippet :
     * struct _GtkStyleProperties* gtk_style_properties_new();
     * }
     */
    public static MemorySegment gtk_style_properties_new() {
        var mh$ = gtk_style_properties_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_properties_map_color$MH() {
        return RuntimeHelper.requireNonNull(constants$2776.const$4,"gtk_style_properties_map_color");
    }
    /**
     * {@snippet :
     * void gtk_style_properties_map_color(struct _GtkStyleProperties* props, char* name, struct _GtkSymbolicColor* color);
     * }
     */
    public static void gtk_style_properties_map_color(MemorySegment props, MemorySegment name, MemorySegment color) {
        var mh$ = gtk_style_properties_map_color$MH();
        try {
            mh$.invokeExact(props, name, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_properties_lookup_color$MH() {
        return RuntimeHelper.requireNonNull(constants$2776.const$5,"gtk_style_properties_lookup_color");
    }
    /**
     * {@snippet :
     * struct _GtkSymbolicColor* gtk_style_properties_lookup_color(struct _GtkStyleProperties* props, char* name);
     * }
     */
    public static MemorySegment gtk_style_properties_lookup_color(MemorySegment props, MemorySegment name) {
        var mh$ = gtk_style_properties_lookup_color$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(props, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_properties_set_property$MH() {
        return RuntimeHelper.requireNonNull(constants$2777.const$0,"gtk_style_properties_set_property");
    }
    /**
     * {@snippet :
     * void gtk_style_properties_set_property(struct _GtkStyleProperties* props, char* property, enum GtkStateFlags state, struct _GValue* value);
     * }
     */
    public static void gtk_style_properties_set_property(MemorySegment props, MemorySegment property, int state, MemorySegment value) {
        var mh$ = gtk_style_properties_set_property$MH();
        try {
            mh$.invokeExact(props, property, state, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_properties_set_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$2777.const$2,"gtk_style_properties_set_valist");
    }
    /**
     * {@snippet :
     * void gtk_style_properties_set_valist(struct _GtkStyleProperties* props, enum GtkStateFlags state, struct __va_list args);
     * }
     */
    public static void gtk_style_properties_set_valist(MemorySegment props, int state, MemorySegment args) {
        var mh$ = gtk_style_properties_set_valist$MH();
        try {
            mh$.invokeExact(props, state, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_properties_set$MH() {
        return RuntimeHelper.requireNonNull(constants$2777.const$3,"gtk_style_properties_set");
    }
    /**
     * {@snippet :
     * void gtk_style_properties_set(struct _GtkStyleProperties* props, enum GtkStateFlags state,...);
     * }
     */
    public static void gtk_style_properties_set(MemorySegment props, int state, Object... x2) {
        var mh$ = gtk_style_properties_set$MH();
        try {
            mh$.invokeExact(props, state, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_properties_get_property$MH() {
        return RuntimeHelper.requireNonNull(constants$2777.const$4,"gtk_style_properties_get_property");
    }
    /**
     * {@snippet :
     * int gtk_style_properties_get_property(struct _GtkStyleProperties* props, char* property, enum GtkStateFlags state, struct _GValue* value);
     * }
     */
    public static int gtk_style_properties_get_property(MemorySegment props, MemorySegment property, int state, MemorySegment value) {
        var mh$ = gtk_style_properties_get_property$MH();
        try {
            return (int)mh$.invokeExact(props, property, state, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_properties_get_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$2777.const$5,"gtk_style_properties_get_valist");
    }
    /**
     * {@snippet :
     * void gtk_style_properties_get_valist(struct _GtkStyleProperties* props, enum GtkStateFlags state, struct __va_list args);
     * }
     */
    public static void gtk_style_properties_get_valist(MemorySegment props, int state, MemorySegment args) {
        var mh$ = gtk_style_properties_get_valist$MH();
        try {
            mh$.invokeExact(props, state, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_properties_get$MH() {
        return RuntimeHelper.requireNonNull(constants$2778.const$0,"gtk_style_properties_get");
    }
    /**
     * {@snippet :
     * void gtk_style_properties_get(struct _GtkStyleProperties* props, enum GtkStateFlags state,...);
     * }
     */
    public static void gtk_style_properties_get(MemorySegment props, int state, Object... x2) {
        var mh$ = gtk_style_properties_get$MH();
        try {
            mh$.invokeExact(props, state, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_properties_unset_property$MH() {
        return RuntimeHelper.requireNonNull(constants$2778.const$1,"gtk_style_properties_unset_property");
    }
    /**
     * {@snippet :
     * void gtk_style_properties_unset_property(struct _GtkStyleProperties* props, char* property, enum GtkStateFlags state);
     * }
     */
    public static void gtk_style_properties_unset_property(MemorySegment props, MemorySegment property, int state) {
        var mh$ = gtk_style_properties_unset_property$MH();
        try {
            mh$.invokeExact(props, property, state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_properties_clear$MH() {
        return RuntimeHelper.requireNonNull(constants$2778.const$2,"gtk_style_properties_clear");
    }
    /**
     * {@snippet :
     * void gtk_style_properties_clear(struct _GtkStyleProperties* props);
     * }
     */
    public static void gtk_style_properties_clear(MemorySegment props) {
        var mh$ = gtk_style_properties_clear$MH();
        try {
            mh$.invokeExact(props);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_properties_merge$MH() {
        return RuntimeHelper.requireNonNull(constants$2778.const$3,"gtk_style_properties_merge");
    }
    /**
     * {@snippet :
     * void gtk_style_properties_merge(struct _GtkStyleProperties* props, struct _GtkStyleProperties* props_to_merge, int replace);
     * }
     */
    public static void gtk_style_properties_merge(MemorySegment props, MemorySegment props_to_merge, int replace) {
        var mh$ = gtk_style_properties_merge$MH();
        try {
            mh$.invokeExact(props, props_to_merge, replace);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_provider_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2779.const$5,"gtk_style_provider_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_style_provider_get_type();
     * }
     */
    public static long gtk_style_provider_get_type() {
        var mh$ = gtk_style_provider_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_provider_get_style$MH() {
        return RuntimeHelper.requireNonNull(constants$2780.const$0,"gtk_style_provider_get_style");
    }
    /**
     * {@snippet :
     * struct _GtkStyleProperties* gtk_style_provider_get_style(struct _GtkStyleProvider* provider, struct _GtkWidgetPath* path);
     * }
     */
    public static MemorySegment gtk_style_provider_get_style(MemorySegment provider, MemorySegment path) {
        var mh$ = gtk_style_provider_get_style$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(provider, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_provider_get_style_property$MH() {
        return RuntimeHelper.requireNonNull(constants$2780.const$1,"gtk_style_provider_get_style_property");
    }
    /**
     * {@snippet :
     * int gtk_style_provider_get_style_property(struct _GtkStyleProvider* provider, struct _GtkWidgetPath* path, enum GtkStateFlags state, struct _GParamSpec* pspec, struct _GValue* value);
     * }
     */
    public static int gtk_style_provider_get_style_property(MemorySegment provider, MemorySegment path, int state, MemorySegment pspec, MemorySegment value) {
        var mh$ = gtk_style_provider_get_style_property$MH();
        try {
            return (int)mh$.invokeExact(provider, path, state, pspec, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_provider_get_icon_factory$MH() {
        return RuntimeHelper.requireNonNull(constants$2780.const$2,"gtk_style_provider_get_icon_factory");
    }
    /**
     * {@snippet :
     * struct _GtkIconFactory* gtk_style_provider_get_icon_factory(struct _GtkStyleProvider* provider, struct _GtkWidgetPath* path);
     * }
     */
    public static MemorySegment gtk_style_provider_get_icon_factory(MemorySegment provider, MemorySegment path) {
        var mh$ = gtk_style_provider_get_icon_factory$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(provider, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2782.const$4,"gtk_style_context_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_style_context_get_type();
     * }
     */
    public static long gtk_style_context_get_type() {
        var mh$ = gtk_style_context_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2782.const$5,"gtk_style_context_new");
    }
    /**
     * {@snippet :
     * struct _GtkStyleContext* gtk_style_context_new();
     * }
     */
    public static MemorySegment gtk_style_context_new() {
        var mh$ = gtk_style_context_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_add_provider_for_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$2783.const$0,"gtk_style_context_add_provider_for_screen");
    }
    /**
     * {@snippet :
     * void gtk_style_context_add_provider_for_screen(struct _GdkScreen* screen, struct _GtkStyleProvider* provider, unsigned int priority);
     * }
     */
    public static void gtk_style_context_add_provider_for_screen(MemorySegment screen, MemorySegment provider, int priority) {
        var mh$ = gtk_style_context_add_provider_for_screen$MH();
        try {
            mh$.invokeExact(screen, provider, priority);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_remove_provider_for_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$2783.const$1,"gtk_style_context_remove_provider_for_screen");
    }
    /**
     * {@snippet :
     * void gtk_style_context_remove_provider_for_screen(struct _GdkScreen* screen, struct _GtkStyleProvider* provider);
     * }
     */
    public static void gtk_style_context_remove_provider_for_screen(MemorySegment screen, MemorySegment provider) {
        var mh$ = gtk_style_context_remove_provider_for_screen$MH();
        try {
            mh$.invokeExact(screen, provider);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_add_provider$MH() {
        return RuntimeHelper.requireNonNull(constants$2783.const$2,"gtk_style_context_add_provider");
    }
    /**
     * {@snippet :
     * void gtk_style_context_add_provider(struct _GtkStyleContext* context, struct _GtkStyleProvider* provider, unsigned int priority);
     * }
     */
    public static void gtk_style_context_add_provider(MemorySegment context, MemorySegment provider, int priority) {
        var mh$ = gtk_style_context_add_provider$MH();
        try {
            mh$.invokeExact(context, provider, priority);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_remove_provider$MH() {
        return RuntimeHelper.requireNonNull(constants$2783.const$3,"gtk_style_context_remove_provider");
    }
    /**
     * {@snippet :
     * void gtk_style_context_remove_provider(struct _GtkStyleContext* context, struct _GtkStyleProvider* provider);
     * }
     */
    public static void gtk_style_context_remove_provider(MemorySegment context, MemorySegment provider) {
        var mh$ = gtk_style_context_remove_provider$MH();
        try {
            mh$.invokeExact(context, provider);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_save$MH() {
        return RuntimeHelper.requireNonNull(constants$2783.const$4,"gtk_style_context_save");
    }
    /**
     * {@snippet :
     * void gtk_style_context_save(struct _GtkStyleContext* context);
     * }
     */
    public static void gtk_style_context_save(MemorySegment context) {
        var mh$ = gtk_style_context_save$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_restore$MH() {
        return RuntimeHelper.requireNonNull(constants$2783.const$5,"gtk_style_context_restore");
    }
    /**
     * {@snippet :
     * void gtk_style_context_restore(struct _GtkStyleContext* context);
     * }
     */
    public static void gtk_style_context_restore(MemorySegment context) {
        var mh$ = gtk_style_context_restore$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_section$MH() {
        return RuntimeHelper.requireNonNull(constants$2784.const$0,"gtk_style_context_get_section");
    }
    /**
     * {@snippet :
     * struct _GtkCssSection* gtk_style_context_get_section(struct _GtkStyleContext* context, char* property);
     * }
     */
    public static MemorySegment gtk_style_context_get_section(MemorySegment context, MemorySegment property) {
        var mh$ = gtk_style_context_get_section$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context, property);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_property$MH() {
        return RuntimeHelper.requireNonNull(constants$2784.const$1,"gtk_style_context_get_property");
    }
    /**
     * {@snippet :
     * void gtk_style_context_get_property(struct _GtkStyleContext* context, char* property, enum GtkStateFlags state, struct _GValue* value);
     * }
     */
    public static void gtk_style_context_get_property(MemorySegment context, MemorySegment property, int state, MemorySegment value) {
        var mh$ = gtk_style_context_get_property$MH();
        try {
            mh$.invokeExact(context, property, state, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$2784.const$2,"gtk_style_context_get_valist");
    }
    /**
     * {@snippet :
     * void gtk_style_context_get_valist(struct _GtkStyleContext* context, enum GtkStateFlags state, struct __va_list args);
     * }
     */
    public static void gtk_style_context_get_valist(MemorySegment context, int state, MemorySegment args) {
        var mh$ = gtk_style_context_get_valist$MH();
        try {
            mh$.invokeExact(context, state, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get$MH() {
        return RuntimeHelper.requireNonNull(constants$2784.const$3,"gtk_style_context_get");
    }
    /**
     * {@snippet :
     * void gtk_style_context_get(struct _GtkStyleContext* context, enum GtkStateFlags state,...);
     * }
     */
    public static void gtk_style_context_get(MemorySegment context, int state, Object... x2) {
        var mh$ = gtk_style_context_get$MH();
        try {
            mh$.invokeExact(context, state, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_set_state$MH() {
        return RuntimeHelper.requireNonNull(constants$2784.const$4,"gtk_style_context_set_state");
    }
    /**
     * {@snippet :
     * void gtk_style_context_set_state(struct _GtkStyleContext* context, enum GtkStateFlags flags);
     * }
     */
    public static void gtk_style_context_set_state(MemorySegment context, int flags) {
        var mh$ = gtk_style_context_set_state$MH();
        try {
            mh$.invokeExact(context, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_state$MH() {
        return RuntimeHelper.requireNonNull(constants$2784.const$5,"gtk_style_context_get_state");
    }
    /**
     * {@snippet :
     * enum GtkStateFlags gtk_style_context_get_state(struct _GtkStyleContext* context);
     * }
     */
    public static int gtk_style_context_get_state(MemorySegment context) {
        var mh$ = gtk_style_context_get_state$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_set_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$2785.const$0,"gtk_style_context_set_scale");
    }
    /**
     * {@snippet :
     * void gtk_style_context_set_scale(struct _GtkStyleContext* context, int scale);
     * }
     */
    public static void gtk_style_context_set_scale(MemorySegment context, int scale) {
        var mh$ = gtk_style_context_set_scale$MH();
        try {
            mh$.invokeExact(context, scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$2785.const$1,"gtk_style_context_get_scale");
    }
    /**
     * {@snippet :
     * int gtk_style_context_get_scale(struct _GtkStyleContext* context);
     * }
     */
    public static int gtk_style_context_get_scale(MemorySegment context) {
        var mh$ = gtk_style_context_get_scale$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_state_is_running$MH() {
        return RuntimeHelper.requireNonNull(constants$2785.const$2,"gtk_style_context_state_is_running");
    }
    /**
     * {@snippet :
     * int gtk_style_context_state_is_running(struct _GtkStyleContext* context, enum GtkStateType state, double* progress);
     * }
     */
    public static int gtk_style_context_state_is_running(MemorySegment context, int state, MemorySegment progress) {
        var mh$ = gtk_style_context_state_is_running$MH();
        try {
            return (int)mh$.invokeExact(context, state, progress);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_set_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2785.const$3,"gtk_style_context_set_path");
    }
    /**
     * {@snippet :
     * void gtk_style_context_set_path(struct _GtkStyleContext* context, struct _GtkWidgetPath* path);
     * }
     */
    public static void gtk_style_context_set_path(MemorySegment context, MemorySegment path) {
        var mh$ = gtk_style_context_set_path$MH();
        try {
            mh$.invokeExact(context, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2785.const$4,"gtk_style_context_get_path");
    }
    /**
     * {@snippet :
     * struct _GtkWidgetPath* gtk_style_context_get_path(struct _GtkStyleContext* context);
     * }
     */
    public static MemorySegment gtk_style_context_get_path(MemorySegment context) {
        var mh$ = gtk_style_context_get_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_set_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$2785.const$5,"gtk_style_context_set_parent");
    }
    /**
     * {@snippet :
     * void gtk_style_context_set_parent(struct _GtkStyleContext* context, struct _GtkStyleContext* parent);
     * }
     */
    public static void gtk_style_context_set_parent(MemorySegment context, MemorySegment parent) {
        var mh$ = gtk_style_context_set_parent$MH();
        try {
            mh$.invokeExact(context, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$2786.const$0,"gtk_style_context_get_parent");
    }
    /**
     * {@snippet :
     * struct _GtkStyleContext* gtk_style_context_get_parent(struct _GtkStyleContext* context);
     * }
     */
    public static MemorySegment gtk_style_context_get_parent(MemorySegment context) {
        var mh$ = gtk_style_context_get_parent$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_list_classes$MH() {
        return RuntimeHelper.requireNonNull(constants$2786.const$1,"gtk_style_context_list_classes");
    }
    /**
     * {@snippet :
     * struct _GList* gtk_style_context_list_classes(struct _GtkStyleContext* context);
     * }
     */
    public static MemorySegment gtk_style_context_list_classes(MemorySegment context) {
        var mh$ = gtk_style_context_list_classes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_add_class$MH() {
        return RuntimeHelper.requireNonNull(constants$2786.const$2,"gtk_style_context_add_class");
    }
    /**
     * {@snippet :
     * void gtk_style_context_add_class(struct _GtkStyleContext* context, char* class_name);
     * }
     */
    public static void gtk_style_context_add_class(MemorySegment context, MemorySegment class_name) {
        var mh$ = gtk_style_context_add_class$MH();
        try {
            mh$.invokeExact(context, class_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_remove_class$MH() {
        return RuntimeHelper.requireNonNull(constants$2786.const$3,"gtk_style_context_remove_class");
    }
    /**
     * {@snippet :
     * void gtk_style_context_remove_class(struct _GtkStyleContext* context, char* class_name);
     * }
     */
    public static void gtk_style_context_remove_class(MemorySegment context, MemorySegment class_name) {
        var mh$ = gtk_style_context_remove_class$MH();
        try {
            mh$.invokeExact(context, class_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_has_class$MH() {
        return RuntimeHelper.requireNonNull(constants$2786.const$4,"gtk_style_context_has_class");
    }
    /**
     * {@snippet :
     * int gtk_style_context_has_class(struct _GtkStyleContext* context, char* class_name);
     * }
     */
    public static int gtk_style_context_has_class(MemorySegment context, MemorySegment class_name) {
        var mh$ = gtk_style_context_has_class$MH();
        try {
            return (int)mh$.invokeExact(context, class_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_list_regions$MH() {
        return RuntimeHelper.requireNonNull(constants$2786.const$5,"gtk_style_context_list_regions");
    }
    /**
     * {@snippet :
     * struct _GList* gtk_style_context_list_regions(struct _GtkStyleContext* context);
     * }
     */
    public static MemorySegment gtk_style_context_list_regions(MemorySegment context) {
        var mh$ = gtk_style_context_list_regions$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_add_region$MH() {
        return RuntimeHelper.requireNonNull(constants$2787.const$0,"gtk_style_context_add_region");
    }
    /**
     * {@snippet :
     * void gtk_style_context_add_region(struct _GtkStyleContext* context, char* region_name, enum GtkRegionFlags flags);
     * }
     */
    public static void gtk_style_context_add_region(MemorySegment context, MemorySegment region_name, int flags) {
        var mh$ = gtk_style_context_add_region$MH();
        try {
            mh$.invokeExact(context, region_name, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_remove_region$MH() {
        return RuntimeHelper.requireNonNull(constants$2787.const$1,"gtk_style_context_remove_region");
    }
    /**
     * {@snippet :
     * void gtk_style_context_remove_region(struct _GtkStyleContext* context, char* region_name);
     * }
     */
    public static void gtk_style_context_remove_region(MemorySegment context, MemorySegment region_name) {
        var mh$ = gtk_style_context_remove_region$MH();
        try {
            mh$.invokeExact(context, region_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_has_region$MH() {
        return RuntimeHelper.requireNonNull(constants$2787.const$2,"gtk_style_context_has_region");
    }
    /**
     * {@snippet :
     * int gtk_style_context_has_region(struct _GtkStyleContext* context, char* region_name, enum GtkRegionFlags* flags_return);
     * }
     */
    public static int gtk_style_context_has_region(MemorySegment context, MemorySegment region_name, MemorySegment flags_return) {
        var mh$ = gtk_style_context_has_region$MH();
        try {
            return (int)mh$.invokeExact(context, region_name, flags_return);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_style_property$MH() {
        return RuntimeHelper.requireNonNull(constants$2787.const$3,"gtk_style_context_get_style_property");
    }
    /**
     * {@snippet :
     * void gtk_style_context_get_style_property(struct _GtkStyleContext* context, char* property_name, struct _GValue* value);
     * }
     */
    public static void gtk_style_context_get_style_property(MemorySegment context, MemorySegment property_name, MemorySegment value) {
        var mh$ = gtk_style_context_get_style_property$MH();
        try {
            mh$.invokeExact(context, property_name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_style_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$2787.const$5,"gtk_style_context_get_style_valist");
    }
    /**
     * {@snippet :
     * void gtk_style_context_get_style_valist(struct _GtkStyleContext* context, struct __va_list args);
     * }
     */
    public static void gtk_style_context_get_style_valist(MemorySegment context, MemorySegment args) {
        var mh$ = gtk_style_context_get_style_valist$MH();
        try {
            mh$.invokeExact(context, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_style$MH() {
        return RuntimeHelper.requireNonNull(constants$2788.const$0,"gtk_style_context_get_style");
    }
    /**
     * {@snippet :
     * void gtk_style_context_get_style(struct _GtkStyleContext* context,...);
     * }
     */
    public static void gtk_style_context_get_style(MemorySegment context, Object... x1) {
        var mh$ = gtk_style_context_get_style$MH();
        try {
            mh$.invokeExact(context, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_lookup_icon_set$MH() {
        return RuntimeHelper.requireNonNull(constants$2788.const$1,"gtk_style_context_lookup_icon_set");
    }
    /**
     * {@snippet :
     * struct _GtkIconSet* gtk_style_context_lookup_icon_set(struct _GtkStyleContext* context, char* stock_id);
     * }
     */
    public static MemorySegment gtk_style_context_lookup_icon_set(MemorySegment context, MemorySegment stock_id) {
        var mh$ = gtk_style_context_lookup_icon_set$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context, stock_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_set_render_icon_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$2788.const$2,"gtk_icon_set_render_icon_pixbuf");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gtk_icon_set_render_icon_pixbuf(struct _GtkIconSet* icon_set, struct _GtkStyleContext* context, enum GtkIconSize size);
     * }
     */
    public static MemorySegment gtk_icon_set_render_icon_pixbuf(MemorySegment icon_set, MemorySegment context, int size) {
        var mh$ = gtk_icon_set_render_icon_pixbuf$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_set, context, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_set_render_icon_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$2788.const$3,"gtk_icon_set_render_icon_surface");
    }
    /**
     * {@snippet :
     * struct _cairo_surface* gtk_icon_set_render_icon_surface(struct _GtkIconSet* icon_set, struct _GtkStyleContext* context, enum GtkIconSize size, int scale, struct _GdkWindow* for_window);
     * }
     */
    public static MemorySegment gtk_icon_set_render_icon_surface(MemorySegment icon_set, MemorySegment context, int size, int scale, MemorySegment for_window) {
        var mh$ = gtk_icon_set_render_icon_surface$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_set, context, size, scale, for_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_set_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$2788.const$4,"gtk_style_context_set_screen");
    }
    /**
     * {@snippet :
     * void gtk_style_context_set_screen(struct _GtkStyleContext* context, struct _GdkScreen* screen);
     * }
     */
    public static void gtk_style_context_set_screen(MemorySegment context, MemorySegment screen) {
        var mh$ = gtk_style_context_set_screen$MH();
        try {
            mh$.invokeExact(context, screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$2788.const$5,"gtk_style_context_get_screen");
    }
    /**
     * {@snippet :
     * struct _GdkScreen* gtk_style_context_get_screen(struct _GtkStyleContext* context);
     * }
     */
    public static MemorySegment gtk_style_context_get_screen(MemorySegment context) {
        var mh$ = gtk_style_context_get_screen$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_set_frame_clock$MH() {
        return RuntimeHelper.requireNonNull(constants$2789.const$0,"gtk_style_context_set_frame_clock");
    }
    /**
     * {@snippet :
     * void gtk_style_context_set_frame_clock(struct _GtkStyleContext* context, struct _GdkFrameClock* frame_clock);
     * }
     */
    public static void gtk_style_context_set_frame_clock(MemorySegment context, MemorySegment frame_clock) {
        var mh$ = gtk_style_context_set_frame_clock$MH();
        try {
            mh$.invokeExact(context, frame_clock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_frame_clock$MH() {
        return RuntimeHelper.requireNonNull(constants$2789.const$1,"gtk_style_context_get_frame_clock");
    }
    /**
     * {@snippet :
     * struct _GdkFrameClock* gtk_style_context_get_frame_clock(struct _GtkStyleContext* context);
     * }
     */
    public static MemorySegment gtk_style_context_get_frame_clock(MemorySegment context) {
        var mh$ = gtk_style_context_get_frame_clock$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_set_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$2789.const$2,"gtk_style_context_set_direction");
    }
    /**
     * {@snippet :
     * void gtk_style_context_set_direction(struct _GtkStyleContext* context, enum GtkTextDirection direction);
     * }
     */
    public static void gtk_style_context_set_direction(MemorySegment context, int direction) {
        var mh$ = gtk_style_context_set_direction$MH();
        try {
            mh$.invokeExact(context, direction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$2789.const$3,"gtk_style_context_get_direction");
    }
    /**
     * {@snippet :
     * enum GtkTextDirection gtk_style_context_get_direction(struct _GtkStyleContext* context);
     * }
     */
    public static int gtk_style_context_get_direction(MemorySegment context) {
        var mh$ = gtk_style_context_get_direction$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_set_junction_sides$MH() {
        return RuntimeHelper.requireNonNull(constants$2789.const$4,"gtk_style_context_set_junction_sides");
    }
    /**
     * {@snippet :
     * void gtk_style_context_set_junction_sides(struct _GtkStyleContext* context, enum GtkJunctionSides sides);
     * }
     */
    public static void gtk_style_context_set_junction_sides(MemorySegment context, int sides) {
        var mh$ = gtk_style_context_set_junction_sides$MH();
        try {
            mh$.invokeExact(context, sides);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_junction_sides$MH() {
        return RuntimeHelper.requireNonNull(constants$2789.const$5,"gtk_style_context_get_junction_sides");
    }
    /**
     * {@snippet :
     * enum GtkJunctionSides gtk_style_context_get_junction_sides(struct _GtkStyleContext* context);
     * }
     */
    public static int gtk_style_context_get_junction_sides(MemorySegment context) {
        var mh$ = gtk_style_context_get_junction_sides$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_lookup_color$MH() {
        return RuntimeHelper.requireNonNull(constants$2790.const$0,"gtk_style_context_lookup_color");
    }
    /**
     * {@snippet :
     * int gtk_style_context_lookup_color(struct _GtkStyleContext* context, char* color_name, struct _GdkRGBA* color);
     * }
     */
    public static int gtk_style_context_lookup_color(MemorySegment context, MemorySegment color_name, MemorySegment color) {
        var mh$ = gtk_style_context_lookup_color$MH();
        try {
            return (int)mh$.invokeExact(context, color_name, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_notify_state_change$MH() {
        return RuntimeHelper.requireNonNull(constants$2790.const$1,"gtk_style_context_notify_state_change");
    }
    /**
     * {@snippet :
     * void gtk_style_context_notify_state_change(struct _GtkStyleContext* context, struct _GdkWindow* window, void* region_id, enum GtkStateType state, int state_value);
     * }
     */
    public static void gtk_style_context_notify_state_change(MemorySegment context, MemorySegment window, MemorySegment region_id, int state, int state_value) {
        var mh$ = gtk_style_context_notify_state_change$MH();
        try {
            mh$.invokeExact(context, window, region_id, state, state_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_cancel_animations$MH() {
        return RuntimeHelper.requireNonNull(constants$2790.const$2,"gtk_style_context_cancel_animations");
    }
    /**
     * {@snippet :
     * void gtk_style_context_cancel_animations(struct _GtkStyleContext* context, void* region_id);
     * }
     */
    public static void gtk_style_context_cancel_animations(MemorySegment context, MemorySegment region_id) {
        var mh$ = gtk_style_context_cancel_animations$MH();
        try {
            mh$.invokeExact(context, region_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_scroll_animations$MH() {
        return RuntimeHelper.requireNonNull(constants$2790.const$3,"gtk_style_context_scroll_animations");
    }
    /**
     * {@snippet :
     * void gtk_style_context_scroll_animations(struct _GtkStyleContext* context, struct _GdkWindow* window, int dx, int dy);
     * }
     */
    public static void gtk_style_context_scroll_animations(MemorySegment context, MemorySegment window, int dx, int dy) {
        var mh$ = gtk_style_context_scroll_animations$MH();
        try {
            mh$.invokeExact(context, window, dx, dy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_push_animatable_region$MH() {
        return RuntimeHelper.requireNonNull(constants$2790.const$4,"gtk_style_context_push_animatable_region");
    }
    /**
     * {@snippet :
     * void gtk_style_context_push_animatable_region(struct _GtkStyleContext* context, void* region_id);
     * }
     */
    public static void gtk_style_context_push_animatable_region(MemorySegment context, MemorySegment region_id) {
        var mh$ = gtk_style_context_push_animatable_region$MH();
        try {
            mh$.invokeExact(context, region_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_pop_animatable_region$MH() {
        return RuntimeHelper.requireNonNull(constants$2790.const$5,"gtk_style_context_pop_animatable_region");
    }
    /**
     * {@snippet :
     * void gtk_style_context_pop_animatable_region(struct _GtkStyleContext* context);
     * }
     */
    public static void gtk_style_context_pop_animatable_region(MemorySegment context) {
        var mh$ = gtk_style_context_pop_animatable_region$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_color$MH() {
        return RuntimeHelper.requireNonNull(constants$2791.const$0,"gtk_style_context_get_color");
    }
    /**
     * {@snippet :
     * void gtk_style_context_get_color(struct _GtkStyleContext* context, enum GtkStateFlags state, struct _GdkRGBA* color);
     * }
     */
    public static void gtk_style_context_get_color(MemorySegment context, int state, MemorySegment color) {
        var mh$ = gtk_style_context_get_color$MH();
        try {
            mh$.invokeExact(context, state, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_background_color$MH() {
        return RuntimeHelper.requireNonNull(constants$2791.const$1,"gtk_style_context_get_background_color");
    }
    /**
     * {@snippet :
     * void gtk_style_context_get_background_color(struct _GtkStyleContext* context, enum GtkStateFlags state, struct _GdkRGBA* color);
     * }
     */
    public static void gtk_style_context_get_background_color(MemorySegment context, int state, MemorySegment color) {
        var mh$ = gtk_style_context_get_background_color$MH();
        try {
            mh$.invokeExact(context, state, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_border_color$MH() {
        return RuntimeHelper.requireNonNull(constants$2791.const$2,"gtk_style_context_get_border_color");
    }
    /**
     * {@snippet :
     * void gtk_style_context_get_border_color(struct _GtkStyleContext* context, enum GtkStateFlags state, struct _GdkRGBA* color);
     * }
     */
    public static void gtk_style_context_get_border_color(MemorySegment context, int state, MemorySegment color) {
        var mh$ = gtk_style_context_get_border_color$MH();
        try {
            mh$.invokeExact(context, state, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_font$MH() {
        return RuntimeHelper.requireNonNull(constants$2791.const$3,"gtk_style_context_get_font");
    }
    /**
     * {@snippet :
     * struct _PangoFontDescription* gtk_style_context_get_font(struct _GtkStyleContext* context, enum GtkStateFlags state);
     * }
     */
    public static MemorySegment gtk_style_context_get_font(MemorySegment context, int state) {
        var mh$ = gtk_style_context_get_font$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context, state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_border$MH() {
        return RuntimeHelper.requireNonNull(constants$2791.const$4,"gtk_style_context_get_border");
    }
    /**
     * {@snippet :
     * void gtk_style_context_get_border(struct _GtkStyleContext* context, enum GtkStateFlags state, struct _GtkBorder* border);
     * }
     */
    public static void gtk_style_context_get_border(MemorySegment context, int state, MemorySegment border) {
        var mh$ = gtk_style_context_get_border$MH();
        try {
            mh$.invokeExact(context, state, border);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_padding$MH() {
        return RuntimeHelper.requireNonNull(constants$2791.const$5,"gtk_style_context_get_padding");
    }
    /**
     * {@snippet :
     * void gtk_style_context_get_padding(struct _GtkStyleContext* context, enum GtkStateFlags state, struct _GtkBorder* padding);
     * }
     */
    public static void gtk_style_context_get_padding(MemorySegment context, int state, MemorySegment padding) {
        var mh$ = gtk_style_context_get_padding$MH();
        try {
            mh$.invokeExact(context, state, padding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_get_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$2792.const$0,"gtk_style_context_get_margin");
    }
    /**
     * {@snippet :
     * void gtk_style_context_get_margin(struct _GtkStyleContext* context, enum GtkStateFlags state, struct _GtkBorder* margin);
     * }
     */
    public static void gtk_style_context_get_margin(MemorySegment context, int state, MemorySegment margin) {
        var mh$ = gtk_style_context_get_margin$MH();
        try {
            mh$.invokeExact(context, state, margin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_invalidate$MH() {
        return RuntimeHelper.requireNonNull(constants$2792.const$1,"gtk_style_context_invalidate");
    }
    /**
     * {@snippet :
     * void gtk_style_context_invalidate(struct _GtkStyleContext* context);
     * }
     */
    public static void gtk_style_context_invalidate(MemorySegment context) {
        var mh$ = gtk_style_context_invalidate$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_reset_widgets$MH() {
        return RuntimeHelper.requireNonNull(constants$2792.const$2,"gtk_style_context_reset_widgets");
    }
    /**
     * {@snippet :
     * void gtk_style_context_reset_widgets(struct _GdkScreen* screen);
     * }
     */
    public static void gtk_style_context_reset_widgets(MemorySegment screen) {
        var mh$ = gtk_style_context_reset_widgets$MH();
        try {
            mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_style_context_set_background$MH() {
        return RuntimeHelper.requireNonNull(constants$2792.const$3,"gtk_style_context_set_background");
    }
    /**
     * {@snippet :
     * void gtk_style_context_set_background(struct _GtkStyleContext* context, struct _GdkWindow* window);
     * }
     */
    public static void gtk_style_context_set_background(MemorySegment context, MemorySegment window) {
        var mh$ = gtk_style_context_set_background$MH();
        try {
            mh$.invokeExact(context, window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_render_insertion_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$2792.const$5,"gtk_render_insertion_cursor");
    }
    /**
     * {@snippet :
     * void gtk_render_insertion_cursor(struct _GtkStyleContext* context, struct _cairo* cr, double x, double y, struct _PangoLayout* layout, int index, enum PangoDirection direction);
     * }
     */
    public static void gtk_render_insertion_cursor(MemorySegment context, MemorySegment cr, double x, double y, MemorySegment layout, int index, int direction) {
        var mh$ = gtk_render_insertion_cursor$MH();
        try {
            mh$.invokeExact(context, cr, x, y, layout, index, direction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_draw_insertion_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$2793.const$0,"gtk_draw_insertion_cursor");
    }
    /**
     * {@snippet :
     * void gtk_draw_insertion_cursor(struct _GtkWidget* widget, struct _cairo* cr, struct _cairo_rectangle_int* location, int is_primary, enum GtkTextDirection direction, int draw_arrow);
     * }
     */
    public static void gtk_draw_insertion_cursor(MemorySegment widget, MemorySegment cr, MemorySegment location, int is_primary, int direction, int draw_arrow) {
        var mh$ = gtk_draw_insertion_cursor$MH();
        try {
            mh$.invokeExact(widget, cr, location, is_primary, direction, draw_arrow);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkStyleContextPrintFlags.GTK_STYLE_CONTEXT_PRINT_NONE = 0;
     * }
     */
    public static int GTK_STYLE_CONTEXT_PRINT_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkStyleContextPrintFlags.GTK_STYLE_CONTEXT_PRINT_RECURSE = 1;
     * }
     */
    public static int GTK_STYLE_CONTEXT_PRINT_RECURSE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkStyleContextPrintFlags.GTK_STYLE_CONTEXT_PRINT_SHOW_STYLE = 2;
     * }
     */
    public static int GTK_STYLE_CONTEXT_PRINT_SHOW_STYLE() {
        return (int)2L;
    }
    public static MethodHandle gtk_style_context_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$2793.const$1,"gtk_style_context_to_string");
    }
    /**
     * {@snippet :
     * char* gtk_style_context_to_string(struct _GtkStyleContext* context, enum GtkStyleContextPrintFlags flags);
     * }
     */
    public static MemorySegment gtk_style_context_to_string(MemorySegment context, int flags) {
        var mh$ = gtk_style_context_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkIconLookupFlags.GTK_ICON_LOOKUP_NO_SVG = 1;
     * }
     */
    public static int GTK_ICON_LOOKUP_NO_SVG() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkIconLookupFlags.GTK_ICON_LOOKUP_FORCE_SVG = 2;
     * }
     */
    public static int GTK_ICON_LOOKUP_FORCE_SVG() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkIconLookupFlags.GTK_ICON_LOOKUP_USE_BUILTIN = 4;
     * }
     */
    public static int GTK_ICON_LOOKUP_USE_BUILTIN() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkIconLookupFlags.GTK_ICON_LOOKUP_GENERIC_FALLBACK = 8;
     * }
     */
    public static int GTK_ICON_LOOKUP_GENERIC_FALLBACK() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GtkIconLookupFlags.GTK_ICON_LOOKUP_FORCE_SIZE = 16;
     * }
     */
    public static int GTK_ICON_LOOKUP_FORCE_SIZE() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GtkIconLookupFlags.GTK_ICON_LOOKUP_FORCE_REGULAR = 32;
     * }
     */
    public static int GTK_ICON_LOOKUP_FORCE_REGULAR() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum GtkIconLookupFlags.GTK_ICON_LOOKUP_FORCE_SYMBOLIC = 64;
     * }
     */
    public static int GTK_ICON_LOOKUP_FORCE_SYMBOLIC() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum GtkIconLookupFlags.GTK_ICON_LOOKUP_DIR_LTR = 128;
     * }
     */
    public static int GTK_ICON_LOOKUP_DIR_LTR() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * enum GtkIconLookupFlags.GTK_ICON_LOOKUP_DIR_RTL = 256;
     * }
     */
    public static int GTK_ICON_LOOKUP_DIR_RTL() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * enum GtkIconThemeError.GTK_ICON_THEME_NOT_FOUND = 0;
     * }
     */
    public static int GTK_ICON_THEME_NOT_FOUND() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkIconThemeError.GTK_ICON_THEME_FAILED = 1;
     * }
     */
    public static int GTK_ICON_THEME_FAILED() {
        return (int)1L;
    }
    public static MethodHandle gtk_icon_theme_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$2795.const$3,"gtk_icon_theme_error_quark");
    }
    /**
     * {@snippet :
     * unsigned int gtk_icon_theme_error_quark();
     * }
     */
    public static int gtk_icon_theme_error_quark() {
        var mh$ = gtk_icon_theme_error_quark$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2795.const$4,"gtk_icon_theme_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_icon_theme_get_type();
     * }
     */
    public static long gtk_icon_theme_get_type() {
        var mh$ = gtk_icon_theme_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2795.const$5,"gtk_icon_theme_new");
    }
    /**
     * {@snippet :
     * struct _GtkIconTheme* gtk_icon_theme_new();
     * }
     */
    public static MemorySegment gtk_icon_theme_new() {
        var mh$ = gtk_icon_theme_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$2796.const$0,"gtk_icon_theme_get_default");
    }
    /**
     * {@snippet :
     * struct _GtkIconTheme* gtk_icon_theme_get_default();
     * }
     */
    public static MemorySegment gtk_icon_theme_get_default() {
        var mh$ = gtk_icon_theme_get_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_get_for_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$2796.const$1,"gtk_icon_theme_get_for_screen");
    }
    /**
     * {@snippet :
     * struct _GtkIconTheme* gtk_icon_theme_get_for_screen(struct _GdkScreen* screen);
     * }
     */
    public static MemorySegment gtk_icon_theme_get_for_screen(MemorySegment screen) {
        var mh$ = gtk_icon_theme_get_for_screen$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_set_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$2796.const$2,"gtk_icon_theme_set_screen");
    }
    /**
     * {@snippet :
     * void gtk_icon_theme_set_screen(struct _GtkIconTheme* icon_theme, struct _GdkScreen* screen);
     * }
     */
    public static void gtk_icon_theme_set_screen(MemorySegment icon_theme, MemorySegment screen) {
        var mh$ = gtk_icon_theme_set_screen$MH();
        try {
            mh$.invokeExact(icon_theme, screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_set_search_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2796.const$3,"gtk_icon_theme_set_search_path");
    }
    /**
     * {@snippet :
     * void gtk_icon_theme_set_search_path(struct _GtkIconTheme* icon_theme, char* path[], int n_elements);
     * }
     */
    public static void gtk_icon_theme_set_search_path(MemorySegment icon_theme, MemorySegment path, int n_elements) {
        var mh$ = gtk_icon_theme_set_search_path$MH();
        try {
            mh$.invokeExact(icon_theme, path, n_elements);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_get_search_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2796.const$4,"gtk_icon_theme_get_search_path");
    }
    /**
     * {@snippet :
     * void gtk_icon_theme_get_search_path(struct _GtkIconTheme* icon_theme, char** path[], int* n_elements);
     * }
     */
    public static void gtk_icon_theme_get_search_path(MemorySegment icon_theme, MemorySegment path, MemorySegment n_elements) {
        var mh$ = gtk_icon_theme_get_search_path$MH();
        try {
            mh$.invokeExact(icon_theme, path, n_elements);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_append_search_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2796.const$5,"gtk_icon_theme_append_search_path");
    }
    /**
     * {@snippet :
     * void gtk_icon_theme_append_search_path(struct _GtkIconTheme* icon_theme, char* path);
     * }
     */
    public static void gtk_icon_theme_append_search_path(MemorySegment icon_theme, MemorySegment path) {
        var mh$ = gtk_icon_theme_append_search_path$MH();
        try {
            mh$.invokeExact(icon_theme, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_prepend_search_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2797.const$0,"gtk_icon_theme_prepend_search_path");
    }
    /**
     * {@snippet :
     * void gtk_icon_theme_prepend_search_path(struct _GtkIconTheme* icon_theme, char* path);
     * }
     */
    public static void gtk_icon_theme_prepend_search_path(MemorySegment icon_theme, MemorySegment path) {
        var mh$ = gtk_icon_theme_prepend_search_path$MH();
        try {
            mh$.invokeExact(icon_theme, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_add_resource_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2797.const$1,"gtk_icon_theme_add_resource_path");
    }
    /**
     * {@snippet :
     * void gtk_icon_theme_add_resource_path(struct _GtkIconTheme* icon_theme, char* path);
     * }
     */
    public static void gtk_icon_theme_add_resource_path(MemorySegment icon_theme, MemorySegment path) {
        var mh$ = gtk_icon_theme_add_resource_path$MH();
        try {
            mh$.invokeExact(icon_theme, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_set_custom_theme$MH() {
        return RuntimeHelper.requireNonNull(constants$2797.const$2,"gtk_icon_theme_set_custom_theme");
    }
    /**
     * {@snippet :
     * void gtk_icon_theme_set_custom_theme(struct _GtkIconTheme* icon_theme, char* theme_name);
     * }
     */
    public static void gtk_icon_theme_set_custom_theme(MemorySegment icon_theme, MemorySegment theme_name) {
        var mh$ = gtk_icon_theme_set_custom_theme$MH();
        try {
            mh$.invokeExact(icon_theme, theme_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_has_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$2797.const$3,"gtk_icon_theme_has_icon");
    }
    /**
     * {@snippet :
     * int gtk_icon_theme_has_icon(struct _GtkIconTheme* icon_theme, char* icon_name);
     * }
     */
    public static int gtk_icon_theme_has_icon(MemorySegment icon_theme, MemorySegment icon_name) {
        var mh$ = gtk_icon_theme_has_icon$MH();
        try {
            return (int)mh$.invokeExact(icon_theme, icon_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_get_icon_sizes$MH() {
        return RuntimeHelper.requireNonNull(constants$2797.const$4,"gtk_icon_theme_get_icon_sizes");
    }
    /**
     * {@snippet :
     * int* gtk_icon_theme_get_icon_sizes(struct _GtkIconTheme* icon_theme, char* icon_name);
     * }
     */
    public static MemorySegment gtk_icon_theme_get_icon_sizes(MemorySegment icon_theme, MemorySegment icon_name) {
        var mh$ = gtk_icon_theme_get_icon_sizes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_theme, icon_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_lookup_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$2797.const$5,"gtk_icon_theme_lookup_icon");
    }
    /**
     * {@snippet :
     * struct _GtkIconInfo* gtk_icon_theme_lookup_icon(struct _GtkIconTheme* icon_theme, char* icon_name, int size, enum GtkIconLookupFlags flags);
     * }
     */
    public static MemorySegment gtk_icon_theme_lookup_icon(MemorySegment icon_theme, MemorySegment icon_name, int size, int flags) {
        var mh$ = gtk_icon_theme_lookup_icon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_theme, icon_name, size, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_lookup_icon_for_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$2798.const$0,"gtk_icon_theme_lookup_icon_for_scale");
    }
    /**
     * {@snippet :
     * struct _GtkIconInfo* gtk_icon_theme_lookup_icon_for_scale(struct _GtkIconTheme* icon_theme, char* icon_name, int size, int scale, enum GtkIconLookupFlags flags);
     * }
     */
    public static MemorySegment gtk_icon_theme_lookup_icon_for_scale(MemorySegment icon_theme, MemorySegment icon_name, int size, int scale, int flags) {
        var mh$ = gtk_icon_theme_lookup_icon_for_scale$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_theme, icon_name, size, scale, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_choose_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$2798.const$1,"gtk_icon_theme_choose_icon");
    }
    /**
     * {@snippet :
     * struct _GtkIconInfo* gtk_icon_theme_choose_icon(struct _GtkIconTheme* icon_theme, char* icon_names[], int size, enum GtkIconLookupFlags flags);
     * }
     */
    public static MemorySegment gtk_icon_theme_choose_icon(MemorySegment icon_theme, MemorySegment icon_names, int size, int flags) {
        var mh$ = gtk_icon_theme_choose_icon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_theme, icon_names, size, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_choose_icon_for_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$2798.const$2,"gtk_icon_theme_choose_icon_for_scale");
    }
    /**
     * {@snippet :
     * struct _GtkIconInfo* gtk_icon_theme_choose_icon_for_scale(struct _GtkIconTheme* icon_theme, char* icon_names[], int size, int scale, enum GtkIconLookupFlags flags);
     * }
     */
    public static MemorySegment gtk_icon_theme_choose_icon_for_scale(MemorySegment icon_theme, MemorySegment icon_names, int size, int scale, int flags) {
        var mh$ = gtk_icon_theme_choose_icon_for_scale$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_theme, icon_names, size, scale, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_load_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$2798.const$3,"gtk_icon_theme_load_icon");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gtk_icon_theme_load_icon(struct _GtkIconTheme* icon_theme, char* icon_name, int size, enum GtkIconLookupFlags flags, struct _GError** error);
     * }
     */
    public static MemorySegment gtk_icon_theme_load_icon(MemorySegment icon_theme, MemorySegment icon_name, int size, int flags, MemorySegment error) {
        var mh$ = gtk_icon_theme_load_icon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_theme, icon_name, size, flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_load_icon_for_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$2798.const$5,"gtk_icon_theme_load_icon_for_scale");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gtk_icon_theme_load_icon_for_scale(struct _GtkIconTheme* icon_theme, char* icon_name, int size, int scale, enum GtkIconLookupFlags flags, struct _GError** error);
     * }
     */
    public static MemorySegment gtk_icon_theme_load_icon_for_scale(MemorySegment icon_theme, MemorySegment icon_name, int size, int scale, int flags, MemorySegment error) {
        var mh$ = gtk_icon_theme_load_icon_for_scale$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_theme, icon_name, size, scale, flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_load_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$2799.const$1,"gtk_icon_theme_load_surface");
    }
    /**
     * {@snippet :
     * struct _cairo_surface* gtk_icon_theme_load_surface(struct _GtkIconTheme* icon_theme, char* icon_name, int size, int scale, struct _GdkWindow* for_window, enum GtkIconLookupFlags flags, struct _GError** error);
     * }
     */
    public static MemorySegment gtk_icon_theme_load_surface(MemorySegment icon_theme, MemorySegment icon_name, int size, int scale, MemorySegment for_window, int flags, MemorySegment error) {
        var mh$ = gtk_icon_theme_load_surface$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_theme, icon_name, size, scale, for_window, flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_lookup_by_gicon$MH() {
        return RuntimeHelper.requireNonNull(constants$2799.const$2,"gtk_icon_theme_lookup_by_gicon");
    }
    /**
     * {@snippet :
     * struct _GtkIconInfo* gtk_icon_theme_lookup_by_gicon(struct _GtkIconTheme* icon_theme, struct _GIcon* icon, int size, enum GtkIconLookupFlags flags);
     * }
     */
    public static MemorySegment gtk_icon_theme_lookup_by_gicon(MemorySegment icon_theme, MemorySegment icon, int size, int flags) {
        var mh$ = gtk_icon_theme_lookup_by_gicon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_theme, icon, size, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_lookup_by_gicon_for_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$2799.const$3,"gtk_icon_theme_lookup_by_gicon_for_scale");
    }
    /**
     * {@snippet :
     * struct _GtkIconInfo* gtk_icon_theme_lookup_by_gicon_for_scale(struct _GtkIconTheme* icon_theme, struct _GIcon* icon, int size, int scale, enum GtkIconLookupFlags flags);
     * }
     */
    public static MemorySegment gtk_icon_theme_lookup_by_gicon_for_scale(MemorySegment icon_theme, MemorySegment icon, int size, int scale, int flags) {
        var mh$ = gtk_icon_theme_lookup_by_gicon_for_scale$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_theme, icon, size, scale, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_list_icons$MH() {
        return RuntimeHelper.requireNonNull(constants$2799.const$4,"gtk_icon_theme_list_icons");
    }
    /**
     * {@snippet :
     * struct _GList* gtk_icon_theme_list_icons(struct _GtkIconTheme* icon_theme, char* context);
     * }
     */
    public static MemorySegment gtk_icon_theme_list_icons(MemorySegment icon_theme, MemorySegment context) {
        var mh$ = gtk_icon_theme_list_icons$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_theme, context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_list_contexts$MH() {
        return RuntimeHelper.requireNonNull(constants$2799.const$5,"gtk_icon_theme_list_contexts");
    }
    /**
     * {@snippet :
     * struct _GList* gtk_icon_theme_list_contexts(struct _GtkIconTheme* icon_theme);
     * }
     */
    public static MemorySegment gtk_icon_theme_list_contexts(MemorySegment icon_theme) {
        var mh$ = gtk_icon_theme_list_contexts$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_theme);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_get_example_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2800.const$0,"gtk_icon_theme_get_example_icon_name");
    }
    /**
     * {@snippet :
     * char* gtk_icon_theme_get_example_icon_name(struct _GtkIconTheme* icon_theme);
     * }
     */
    public static MemorySegment gtk_icon_theme_get_example_icon_name(MemorySegment icon_theme) {
        var mh$ = gtk_icon_theme_get_example_icon_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_theme);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_rescan_if_needed$MH() {
        return RuntimeHelper.requireNonNull(constants$2800.const$1,"gtk_icon_theme_rescan_if_needed");
    }
    /**
     * {@snippet :
     * int gtk_icon_theme_rescan_if_needed(struct _GtkIconTheme* icon_theme);
     * }
     */
    public static int gtk_icon_theme_rescan_if_needed(MemorySegment icon_theme) {
        var mh$ = gtk_icon_theme_rescan_if_needed$MH();
        try {
            return (int)mh$.invokeExact(icon_theme);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_theme_add_builtin_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$2800.const$2,"gtk_icon_theme_add_builtin_icon");
    }
    /**
     * {@snippet :
     * void gtk_icon_theme_add_builtin_icon(char* icon_name, int size, struct _GdkPixbuf* pixbuf);
     * }
     */
    public static void gtk_icon_theme_add_builtin_icon(MemorySegment icon_name, int size, MemorySegment pixbuf) {
        var mh$ = gtk_icon_theme_add_builtin_icon$MH();
        try {
            mh$.invokeExact(icon_name, size, pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_info_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2800.const$3,"gtk_icon_info_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_icon_info_get_type();
     * }
     */
    public static long gtk_icon_info_get_type() {
        var mh$ = gtk_icon_info_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_info_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$2800.const$4,"gtk_icon_info_copy");
    }
    /**
     * {@snippet :
     * struct _GtkIconInfo* gtk_icon_info_copy(struct _GtkIconInfo* icon_info);
     * }
     */
    public static MemorySegment gtk_icon_info_copy(MemorySegment icon_info) {
        var mh$ = gtk_icon_info_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_info_free$MH() {
        return RuntimeHelper.requireNonNull(constants$2800.const$5,"gtk_icon_info_free");
    }
    /**
     * {@snippet :
     * void gtk_icon_info_free(struct _GtkIconInfo* icon_info);
     * }
     */
    public static void gtk_icon_info_free(MemorySegment icon_info) {
        var mh$ = gtk_icon_info_free$MH();
        try {
            mh$.invokeExact(icon_info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_info_new_for_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$2801.const$0,"gtk_icon_info_new_for_pixbuf");
    }
    /**
     * {@snippet :
     * struct _GtkIconInfo* gtk_icon_info_new_for_pixbuf(struct _GtkIconTheme* icon_theme, struct _GdkPixbuf* pixbuf);
     * }
     */
    public static MemorySegment gtk_icon_info_new_for_pixbuf(MemorySegment icon_theme, MemorySegment pixbuf) {
        var mh$ = gtk_icon_info_new_for_pixbuf$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_theme, pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_info_get_base_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2801.const$1,"gtk_icon_info_get_base_size");
    }
    /**
     * {@snippet :
     * int gtk_icon_info_get_base_size(struct _GtkIconInfo* icon_info);
     * }
     */
    public static int gtk_icon_info_get_base_size(MemorySegment icon_info) {
        var mh$ = gtk_icon_info_get_base_size$MH();
        try {
            return (int)mh$.invokeExact(icon_info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_info_get_base_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$2801.const$2,"gtk_icon_info_get_base_scale");
    }
    /**
     * {@snippet :
     * int gtk_icon_info_get_base_scale(struct _GtkIconInfo* icon_info);
     * }
     */
    public static int gtk_icon_info_get_base_scale(MemorySegment icon_info) {
        var mh$ = gtk_icon_info_get_base_scale$MH();
        try {
            return (int)mh$.invokeExact(icon_info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_info_get_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$2801.const$3,"gtk_icon_info_get_filename");
    }
    /**
     * {@snippet :
     * char* gtk_icon_info_get_filename(struct _GtkIconInfo* icon_info);
     * }
     */
    public static MemorySegment gtk_icon_info_get_filename(MemorySegment icon_info) {
        var mh$ = gtk_icon_info_get_filename$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_info_get_builtin_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$2801.const$4,"gtk_icon_info_get_builtin_pixbuf");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gtk_icon_info_get_builtin_pixbuf(struct _GtkIconInfo* icon_info);
     * }
     */
    public static MemorySegment gtk_icon_info_get_builtin_pixbuf(MemorySegment icon_info) {
        var mh$ = gtk_icon_info_get_builtin_pixbuf$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_info_is_symbolic$MH() {
        return RuntimeHelper.requireNonNull(constants$2801.const$5,"gtk_icon_info_is_symbolic");
    }
    /**
     * {@snippet :
     * int gtk_icon_info_is_symbolic(struct _GtkIconInfo* icon_info);
     * }
     */
    public static int gtk_icon_info_is_symbolic(MemorySegment icon_info) {
        var mh$ = gtk_icon_info_is_symbolic$MH();
        try {
            return (int)mh$.invokeExact(icon_info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_info_load_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$2802.const$0,"gtk_icon_info_load_icon");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gtk_icon_info_load_icon(struct _GtkIconInfo* icon_info, struct _GError** error);
     * }
     */
    public static MemorySegment gtk_icon_info_load_icon(MemorySegment icon_info, MemorySegment error) {
        var mh$ = gtk_icon_info_load_icon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_info, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_info_load_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$2802.const$1,"gtk_icon_info_load_surface");
    }
    /**
     * {@snippet :
     * struct _cairo_surface* gtk_icon_info_load_surface(struct _GtkIconInfo* icon_info, struct _GdkWindow* for_window, struct _GError** error);
     * }
     */
    public static MemorySegment gtk_icon_info_load_surface(MemorySegment icon_info, MemorySegment for_window, MemorySegment error) {
        var mh$ = gtk_icon_info_load_surface$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_info, for_window, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_info_load_icon_async$MH() {
        return RuntimeHelper.requireNonNull(constants$2802.const$3,"gtk_icon_info_load_icon_async");
    }
    /**
     * {@snippet :
     * void gtk_icon_info_load_icon_async(struct _GtkIconInfo* icon_info, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void gtk_icon_info_load_icon_async(MemorySegment icon_info, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = gtk_icon_info_load_icon_async$MH();
        try {
            mh$.invokeExact(icon_info, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_info_load_icon_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$2802.const$4,"gtk_icon_info_load_icon_finish");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gtk_icon_info_load_icon_finish(struct _GtkIconInfo* icon_info, struct _GAsyncResult* res, struct _GError** error);
     * }
     */
    public static MemorySegment gtk_icon_info_load_icon_finish(MemorySegment icon_info, MemorySegment res, MemorySegment error) {
        var mh$ = gtk_icon_info_load_icon_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_info, res, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_info_load_symbolic$MH() {
        return RuntimeHelper.requireNonNull(constants$2802.const$5,"gtk_icon_info_load_symbolic");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gtk_icon_info_load_symbolic(struct _GtkIconInfo* icon_info, struct _GdkRGBA* fg, struct _GdkRGBA* success_color, struct _GdkRGBA* warning_color, struct _GdkRGBA* error_color, int* was_symbolic, struct _GError** error);
     * }
     */
    public static MemorySegment gtk_icon_info_load_symbolic(MemorySegment icon_info, MemorySegment fg, MemorySegment success_color, MemorySegment warning_color, MemorySegment error_color, MemorySegment was_symbolic, MemorySegment error) {
        var mh$ = gtk_icon_info_load_symbolic$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_info, fg, success_color, warning_color, error_color, was_symbolic, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_info_load_symbolic_async$MH() {
        return RuntimeHelper.requireNonNull(constants$2803.const$1,"gtk_icon_info_load_symbolic_async");
    }
    /**
     * {@snippet :
     * void gtk_icon_info_load_symbolic_async(struct _GtkIconInfo* icon_info, struct _GdkRGBA* fg, struct _GdkRGBA* success_color, struct _GdkRGBA* warning_color, struct _GdkRGBA* error_color, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void gtk_icon_info_load_symbolic_async(MemorySegment icon_info, MemorySegment fg, MemorySegment success_color, MemorySegment warning_color, MemorySegment error_color, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = gtk_icon_info_load_symbolic_async$MH();
        try {
            mh$.invokeExact(icon_info, fg, success_color, warning_color, error_color, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_info_load_symbolic_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$2803.const$2,"gtk_icon_info_load_symbolic_finish");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gtk_icon_info_load_symbolic_finish(struct _GtkIconInfo* icon_info, struct _GAsyncResult* res, int* was_symbolic, struct _GError** error);
     * }
     */
    public static MemorySegment gtk_icon_info_load_symbolic_finish(MemorySegment icon_info, MemorySegment res, MemorySegment was_symbolic, MemorySegment error) {
        var mh$ = gtk_icon_info_load_symbolic_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_info, res, was_symbolic, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_info_load_symbolic_for_context$MH() {
        return RuntimeHelper.requireNonNull(constants$2803.const$3,"gtk_icon_info_load_symbolic_for_context");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gtk_icon_info_load_symbolic_for_context(struct _GtkIconInfo* icon_info, struct _GtkStyleContext* context, int* was_symbolic, struct _GError** error);
     * }
     */
    public static MemorySegment gtk_icon_info_load_symbolic_for_context(MemorySegment icon_info, MemorySegment context, MemorySegment was_symbolic, MemorySegment error) {
        var mh$ = gtk_icon_info_load_symbolic_for_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_info, context, was_symbolic, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_info_load_symbolic_for_context_async$MH() {
        return RuntimeHelper.requireNonNull(constants$2803.const$5,"gtk_icon_info_load_symbolic_for_context_async");
    }
    /**
     * {@snippet :
     * void gtk_icon_info_load_symbolic_for_context_async(struct _GtkIconInfo* icon_info, struct _GtkStyleContext* context, struct _GCancellable* cancellable, void (*callback)(struct _GObject*,struct _GAsyncResult*,void*), void* user_data);
     * }
     */
    public static void gtk_icon_info_load_symbolic_for_context_async(MemorySegment icon_info, MemorySegment context, MemorySegment cancellable, MemorySegment callback, MemorySegment user_data) {
        var mh$ = gtk_icon_info_load_symbolic_for_context_async$MH();
        try {
            mh$.invokeExact(icon_info, context, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_info_load_symbolic_for_context_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$2804.const$0,"gtk_icon_info_load_symbolic_for_context_finish");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gtk_icon_info_load_symbolic_for_context_finish(struct _GtkIconInfo* icon_info, struct _GAsyncResult* res, int* was_symbolic, struct _GError** error);
     * }
     */
    public static MemorySegment gtk_icon_info_load_symbolic_for_context_finish(MemorySegment icon_info, MemorySegment res, MemorySegment was_symbolic, MemorySegment error) {
        var mh$ = gtk_icon_info_load_symbolic_for_context_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_info, res, was_symbolic, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_info_load_symbolic_for_style$MH() {
        return RuntimeHelper.requireNonNull(constants$2804.const$1,"gtk_icon_info_load_symbolic_for_style");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gtk_icon_info_load_symbolic_for_style(struct _GtkIconInfo* icon_info, struct _GtkStyle* style, enum GtkStateType state, int* was_symbolic, struct _GError** error);
     * }
     */
    public static MemorySegment gtk_icon_info_load_symbolic_for_style(MemorySegment icon_info, MemorySegment style, int state, MemorySegment was_symbolic, MemorySegment error) {
        var mh$ = gtk_icon_info_load_symbolic_for_style$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_info, style, state, was_symbolic, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_info_set_raw_coordinates$MH() {
        return RuntimeHelper.requireNonNull(constants$2804.const$2,"gtk_icon_info_set_raw_coordinates");
    }
    /**
     * {@snippet :
     * void gtk_icon_info_set_raw_coordinates(struct _GtkIconInfo* icon_info, int raw_coordinates);
     * }
     */
    public static void gtk_icon_info_set_raw_coordinates(MemorySegment icon_info, int raw_coordinates) {
        var mh$ = gtk_icon_info_set_raw_coordinates$MH();
        try {
            mh$.invokeExact(icon_info, raw_coordinates);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_info_get_embedded_rect$MH() {
        return RuntimeHelper.requireNonNull(constants$2804.const$3,"gtk_icon_info_get_embedded_rect");
    }
    /**
     * {@snippet :
     * int gtk_icon_info_get_embedded_rect(struct _GtkIconInfo* icon_info, struct _cairo_rectangle_int* rectangle);
     * }
     */
    public static int gtk_icon_info_get_embedded_rect(MemorySegment icon_info, MemorySegment rectangle) {
        var mh$ = gtk_icon_info_get_embedded_rect$MH();
        try {
            return (int)mh$.invokeExact(icon_info, rectangle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_info_get_attach_points$MH() {
        return RuntimeHelper.requireNonNull(constants$2804.const$4,"gtk_icon_info_get_attach_points");
    }
    /**
     * {@snippet :
     * int gtk_icon_info_get_attach_points(struct _GtkIconInfo* icon_info, struct _GdkPoint** points, int* n_points);
     * }
     */
    public static int gtk_icon_info_get_attach_points(MemorySegment icon_info, MemorySegment points, MemorySegment n_points) {
        var mh$ = gtk_icon_info_get_attach_points$MH();
        try {
            return (int)mh$.invokeExact(icon_info, points, n_points);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_info_get_display_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2804.const$5,"gtk_icon_info_get_display_name");
    }
    /**
     * {@snippet :
     * char* gtk_icon_info_get_display_name(struct _GtkIconInfo* icon_info);
     * }
     */
    public static MemorySegment gtk_icon_info_get_display_name(MemorySegment icon_info) {
        var mh$ = gtk_icon_info_get_display_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tooltip_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2805.const$0,"gtk_tooltip_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_tooltip_get_type();
     * }
     */
    public static long gtk_tooltip_get_type() {
        var mh$ = gtk_tooltip_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tooltip_set_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$2805.const$1,"gtk_tooltip_set_markup");
    }
    /**
     * {@snippet :
     * void gtk_tooltip_set_markup(struct _GtkTooltip* tooltip, char* markup);
     * }
     */
    public static void gtk_tooltip_set_markup(MemorySegment tooltip, MemorySegment markup) {
        var mh$ = gtk_tooltip_set_markup$MH();
        try {
            mh$.invokeExact(tooltip, markup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tooltip_set_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2805.const$2,"gtk_tooltip_set_text");
    }
    /**
     * {@snippet :
     * void gtk_tooltip_set_text(struct _GtkTooltip* tooltip, char* text);
     * }
     */
    public static void gtk_tooltip_set_text(MemorySegment tooltip, MemorySegment text) {
        var mh$ = gtk_tooltip_set_text$MH();
        try {
            mh$.invokeExact(tooltip, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tooltip_set_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$2805.const$3,"gtk_tooltip_set_icon");
    }
    /**
     * {@snippet :
     * void gtk_tooltip_set_icon(struct _GtkTooltip* tooltip, struct _GdkPixbuf* pixbuf);
     * }
     */
    public static void gtk_tooltip_set_icon(MemorySegment tooltip, MemorySegment pixbuf) {
        var mh$ = gtk_tooltip_set_icon$MH();
        try {
            mh$.invokeExact(tooltip, pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tooltip_set_icon_from_stock$MH() {
        return RuntimeHelper.requireNonNull(constants$2805.const$4,"gtk_tooltip_set_icon_from_stock");
    }
    /**
     * {@snippet :
     * void gtk_tooltip_set_icon_from_stock(struct _GtkTooltip* tooltip, char* stock_id, enum GtkIconSize size);
     * }
     */
    public static void gtk_tooltip_set_icon_from_stock(MemorySegment tooltip, MemorySegment stock_id, int size) {
        var mh$ = gtk_tooltip_set_icon_from_stock$MH();
        try {
            mh$.invokeExact(tooltip, stock_id, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tooltip_set_icon_from_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2805.const$5,"gtk_tooltip_set_icon_from_icon_name");
    }
    /**
     * {@snippet :
     * void gtk_tooltip_set_icon_from_icon_name(struct _GtkTooltip* tooltip, char* icon_name, enum GtkIconSize size);
     * }
     */
    public static void gtk_tooltip_set_icon_from_icon_name(MemorySegment tooltip, MemorySegment icon_name, int size) {
        var mh$ = gtk_tooltip_set_icon_from_icon_name$MH();
        try {
            mh$.invokeExact(tooltip, icon_name, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tooltip_set_icon_from_gicon$MH() {
        return RuntimeHelper.requireNonNull(constants$2806.const$0,"gtk_tooltip_set_icon_from_gicon");
    }
    /**
     * {@snippet :
     * void gtk_tooltip_set_icon_from_gicon(struct _GtkTooltip* tooltip, struct _GIcon* gicon, enum GtkIconSize size);
     * }
     */
    public static void gtk_tooltip_set_icon_from_gicon(MemorySegment tooltip, MemorySegment gicon, int size) {
        var mh$ = gtk_tooltip_set_icon_from_gicon$MH();
        try {
            mh$.invokeExact(tooltip, gicon, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tooltip_set_custom$MH() {
        return RuntimeHelper.requireNonNull(constants$2806.const$1,"gtk_tooltip_set_custom");
    }
    /**
     * {@snippet :
     * void gtk_tooltip_set_custom(struct _GtkTooltip* tooltip, struct _GtkWidget* custom_widget);
     * }
     */
    public static void gtk_tooltip_set_custom(MemorySegment tooltip, MemorySegment custom_widget) {
        var mh$ = gtk_tooltip_set_custom$MH();
        try {
            mh$.invokeExact(tooltip, custom_widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tooltip_set_tip_area$MH() {
        return RuntimeHelper.requireNonNull(constants$2806.const$2,"gtk_tooltip_set_tip_area");
    }
    /**
     * {@snippet :
     * void gtk_tooltip_set_tip_area(struct _GtkTooltip* tooltip, struct _cairo_rectangle_int* rect);
     * }
     */
    public static void gtk_tooltip_set_tip_area(MemorySegment tooltip, MemorySegment rect) {
        var mh$ = gtk_tooltip_set_tip_area$MH();
        try {
            mh$.invokeExact(tooltip, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tooltip_trigger_tooltip_query$MH() {
        return RuntimeHelper.requireNonNull(constants$2806.const$3,"gtk_tooltip_trigger_tooltip_query");
    }
    /**
     * {@snippet :
     * void gtk_tooltip_trigger_tooltip_query(struct _GdkDisplay* display);
     * }
     */
    public static void gtk_tooltip_trigger_tooltip_query(MemorySegment display) {
        var mh$ = gtk_tooltip_trigger_tooltip_query$MH();
        try {
            mh$.invokeExact(display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkIconViewDropPosition.GTK_ICON_VIEW_NO_DROP = 0;
     * }
     */
    public static int GTK_ICON_VIEW_NO_DROP() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkIconViewDropPosition.GTK_ICON_VIEW_DROP_INTO = 1;
     * }
     */
    public static int GTK_ICON_VIEW_DROP_INTO() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkIconViewDropPosition.GTK_ICON_VIEW_DROP_LEFT = 2;
     * }
     */
    public static int GTK_ICON_VIEW_DROP_LEFT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkIconViewDropPosition.GTK_ICON_VIEW_DROP_RIGHT = 3;
     * }
     */
    public static int GTK_ICON_VIEW_DROP_RIGHT() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkIconViewDropPosition.GTK_ICON_VIEW_DROP_ABOVE = 4;
     * }
     */
    public static int GTK_ICON_VIEW_DROP_ABOVE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkIconViewDropPosition.GTK_ICON_VIEW_DROP_BELOW = 5;
     * }
     */
    public static int GTK_ICON_VIEW_DROP_BELOW() {
        return (int)5L;
    }
    public static MethodHandle gtk_icon_view_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2811.const$2,"gtk_icon_view_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_icon_view_get_type();
     * }
     */
    public static long gtk_icon_view_get_type() {
        var mh$ = gtk_icon_view_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2811.const$3,"gtk_icon_view_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_icon_view_new();
     * }
     */
    public static MemorySegment gtk_icon_view_new() {
        var mh$ = gtk_icon_view_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_new_with_area$MH() {
        return RuntimeHelper.requireNonNull(constants$2811.const$4,"gtk_icon_view_new_with_area");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_icon_view_new_with_area(struct _GtkCellArea* area);
     * }
     */
    public static MemorySegment gtk_icon_view_new_with_area(MemorySegment area) {
        var mh$ = gtk_icon_view_new_with_area$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_new_with_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2811.const$5,"gtk_icon_view_new_with_model");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_icon_view_new_with_model(struct _GtkTreeModel* model);
     * }
     */
    public static MemorySegment gtk_icon_view_new_with_model(MemorySegment model) {
        var mh$ = gtk_icon_view_new_with_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2812.const$0,"gtk_icon_view_set_model");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_model(struct _GtkIconView* icon_view, struct _GtkTreeModel* model);
     * }
     */
    public static void gtk_icon_view_set_model(MemorySegment icon_view, MemorySegment model) {
        var mh$ = gtk_icon_view_set_model$MH();
        try {
            mh$.invokeExact(icon_view, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2812.const$1,"gtk_icon_view_get_model");
    }
    /**
     * {@snippet :
     * struct _GtkTreeModel* gtk_icon_view_get_model(struct _GtkIconView* icon_view);
     * }
     */
    public static MemorySegment gtk_icon_view_get_model(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_get_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_text_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2812.const$2,"gtk_icon_view_set_text_column");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_text_column(struct _GtkIconView* icon_view, int column);
     * }
     */
    public static void gtk_icon_view_set_text_column(MemorySegment icon_view, int column) {
        var mh$ = gtk_icon_view_set_text_column$MH();
        try {
            mh$.invokeExact(icon_view, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_text_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2812.const$3,"gtk_icon_view_get_text_column");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_get_text_column(struct _GtkIconView* icon_view);
     * }
     */
    public static int gtk_icon_view_get_text_column(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_get_text_column$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_markup_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2812.const$4,"gtk_icon_view_set_markup_column");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_markup_column(struct _GtkIconView* icon_view, int column);
     * }
     */
    public static void gtk_icon_view_set_markup_column(MemorySegment icon_view, int column) {
        var mh$ = gtk_icon_view_set_markup_column$MH();
        try {
            mh$.invokeExact(icon_view, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_markup_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2812.const$5,"gtk_icon_view_get_markup_column");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_get_markup_column(struct _GtkIconView* icon_view);
     * }
     */
    public static int gtk_icon_view_get_markup_column(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_get_markup_column$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_pixbuf_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2813.const$0,"gtk_icon_view_set_pixbuf_column");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_pixbuf_column(struct _GtkIconView* icon_view, int column);
     * }
     */
    public static void gtk_icon_view_set_pixbuf_column(MemorySegment icon_view, int column) {
        var mh$ = gtk_icon_view_set_pixbuf_column$MH();
        try {
            mh$.invokeExact(icon_view, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_pixbuf_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2813.const$1,"gtk_icon_view_get_pixbuf_column");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_get_pixbuf_column(struct _GtkIconView* icon_view);
     * }
     */
    public static int gtk_icon_view_get_pixbuf_column(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_get_pixbuf_column$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_item_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$2813.const$2,"gtk_icon_view_set_item_orientation");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_item_orientation(struct _GtkIconView* icon_view, enum GtkOrientation orientation);
     * }
     */
    public static void gtk_icon_view_set_item_orientation(MemorySegment icon_view, int orientation) {
        var mh$ = gtk_icon_view_set_item_orientation$MH();
        try {
            mh$.invokeExact(icon_view, orientation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_item_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$2813.const$3,"gtk_icon_view_get_item_orientation");
    }
    /**
     * {@snippet :
     * enum GtkOrientation gtk_icon_view_get_item_orientation(struct _GtkIconView* icon_view);
     * }
     */
    public static int gtk_icon_view_get_item_orientation(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_get_item_orientation$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_columns$MH() {
        return RuntimeHelper.requireNonNull(constants$2813.const$4,"gtk_icon_view_set_columns");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_columns(struct _GtkIconView* icon_view, int columns);
     * }
     */
    public static void gtk_icon_view_set_columns(MemorySegment icon_view, int columns) {
        var mh$ = gtk_icon_view_set_columns$MH();
        try {
            mh$.invokeExact(icon_view, columns);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_columns$MH() {
        return RuntimeHelper.requireNonNull(constants$2813.const$5,"gtk_icon_view_get_columns");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_get_columns(struct _GtkIconView* icon_view);
     * }
     */
    public static int gtk_icon_view_get_columns(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_get_columns$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_item_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2814.const$0,"gtk_icon_view_set_item_width");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_item_width(struct _GtkIconView* icon_view, int item_width);
     * }
     */
    public static void gtk_icon_view_set_item_width(MemorySegment icon_view, int item_width) {
        var mh$ = gtk_icon_view_set_item_width$MH();
        try {
            mh$.invokeExact(icon_view, item_width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_item_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2814.const$1,"gtk_icon_view_get_item_width");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_get_item_width(struct _GtkIconView* icon_view);
     * }
     */
    public static int gtk_icon_view_get_item_width(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_get_item_width$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2814.const$2,"gtk_icon_view_set_spacing");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_spacing(struct _GtkIconView* icon_view, int spacing);
     * }
     */
    public static void gtk_icon_view_set_spacing(MemorySegment icon_view, int spacing) {
        var mh$ = gtk_icon_view_set_spacing$MH();
        try {
            mh$.invokeExact(icon_view, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2814.const$3,"gtk_icon_view_get_spacing");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_get_spacing(struct _GtkIconView* icon_view);
     * }
     */
    public static int gtk_icon_view_get_spacing(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_get_spacing$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_row_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2814.const$4,"gtk_icon_view_set_row_spacing");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_row_spacing(struct _GtkIconView* icon_view, int row_spacing);
     * }
     */
    public static void gtk_icon_view_set_row_spacing(MemorySegment icon_view, int row_spacing) {
        var mh$ = gtk_icon_view_set_row_spacing$MH();
        try {
            mh$.invokeExact(icon_view, row_spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_row_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2814.const$5,"gtk_icon_view_get_row_spacing");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_get_row_spacing(struct _GtkIconView* icon_view);
     * }
     */
    public static int gtk_icon_view_get_row_spacing(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_get_row_spacing$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_column_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2815.const$0,"gtk_icon_view_set_column_spacing");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_column_spacing(struct _GtkIconView* icon_view, int column_spacing);
     * }
     */
    public static void gtk_icon_view_set_column_spacing(MemorySegment icon_view, int column_spacing) {
        var mh$ = gtk_icon_view_set_column_spacing$MH();
        try {
            mh$.invokeExact(icon_view, column_spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_column_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2815.const$1,"gtk_icon_view_get_column_spacing");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_get_column_spacing(struct _GtkIconView* icon_view);
     * }
     */
    public static int gtk_icon_view_get_column_spacing(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_get_column_spacing$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$2815.const$2,"gtk_icon_view_set_margin");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_margin(struct _GtkIconView* icon_view, int margin);
     * }
     */
    public static void gtk_icon_view_set_margin(MemorySegment icon_view, int margin) {
        var mh$ = gtk_icon_view_set_margin$MH();
        try {
            mh$.invokeExact(icon_view, margin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$2815.const$3,"gtk_icon_view_get_margin");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_get_margin(struct _GtkIconView* icon_view);
     * }
     */
    public static int gtk_icon_view_get_margin(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_get_margin$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_item_padding$MH() {
        return RuntimeHelper.requireNonNull(constants$2815.const$4,"gtk_icon_view_set_item_padding");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_item_padding(struct _GtkIconView* icon_view, int item_padding);
     * }
     */
    public static void gtk_icon_view_set_item_padding(MemorySegment icon_view, int item_padding) {
        var mh$ = gtk_icon_view_set_item_padding$MH();
        try {
            mh$.invokeExact(icon_view, item_padding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_item_padding$MH() {
        return RuntimeHelper.requireNonNull(constants$2815.const$5,"gtk_icon_view_get_item_padding");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_get_item_padding(struct _GtkIconView* icon_view);
     * }
     */
    public static int gtk_icon_view_get_item_padding(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_get_item_padding$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_path_at_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$2816.const$0,"gtk_icon_view_get_path_at_pos");
    }
    /**
     * {@snippet :
     * struct _GtkTreePath* gtk_icon_view_get_path_at_pos(struct _GtkIconView* icon_view, int x, int y);
     * }
     */
    public static MemorySegment gtk_icon_view_get_path_at_pos(MemorySegment icon_view, int x, int y) {
        var mh$ = gtk_icon_view_get_path_at_pos$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_view, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_item_at_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$2816.const$1,"gtk_icon_view_get_item_at_pos");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_get_item_at_pos(struct _GtkIconView* icon_view, int x, int y, struct _GtkTreePath** path, struct _GtkCellRenderer** cell);
     * }
     */
    public static int gtk_icon_view_get_item_at_pos(MemorySegment icon_view, int x, int y, MemorySegment path, MemorySegment cell) {
        var mh$ = gtk_icon_view_get_item_at_pos$MH();
        try {
            return (int)mh$.invokeExact(icon_view, x, y, path, cell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_visible_range$MH() {
        return RuntimeHelper.requireNonNull(constants$2816.const$2,"gtk_icon_view_get_visible_range");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_get_visible_range(struct _GtkIconView* icon_view, struct _GtkTreePath** start_path, struct _GtkTreePath** end_path);
     * }
     */
    public static int gtk_icon_view_get_visible_range(MemorySegment icon_view, MemorySegment start_path, MemorySegment end_path) {
        var mh$ = gtk_icon_view_get_visible_range$MH();
        try {
            return (int)mh$.invokeExact(icon_view, start_path, end_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_activate_on_single_click$MH() {
        return RuntimeHelper.requireNonNull(constants$2816.const$3,"gtk_icon_view_set_activate_on_single_click");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_activate_on_single_click(struct _GtkIconView* icon_view, int single);
     * }
     */
    public static void gtk_icon_view_set_activate_on_single_click(MemorySegment icon_view, int single) {
        var mh$ = gtk_icon_view_set_activate_on_single_click$MH();
        try {
            mh$.invokeExact(icon_view, single);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_activate_on_single_click$MH() {
        return RuntimeHelper.requireNonNull(constants$2816.const$4,"gtk_icon_view_get_activate_on_single_click");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_get_activate_on_single_click(struct _GtkIconView* icon_view);
     * }
     */
    public static int gtk_icon_view_get_activate_on_single_click(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_get_activate_on_single_click$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_selected_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$2817.const$0,"gtk_icon_view_selected_foreach");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_selected_foreach(struct _GtkIconView* icon_view, void (*func)(struct _GtkIconView*,struct _GtkTreePath*,void*), void* data);
     * }
     */
    public static void gtk_icon_view_selected_foreach(MemorySegment icon_view, MemorySegment func, MemorySegment data) {
        var mh$ = gtk_icon_view_selected_foreach$MH();
        try {
            mh$.invokeExact(icon_view, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_selection_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2817.const$1,"gtk_icon_view_set_selection_mode");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_selection_mode(struct _GtkIconView* icon_view, enum GtkSelectionMode mode);
     * }
     */
    public static void gtk_icon_view_set_selection_mode(MemorySegment icon_view, int mode) {
        var mh$ = gtk_icon_view_set_selection_mode$MH();
        try {
            mh$.invokeExact(icon_view, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_selection_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2817.const$2,"gtk_icon_view_get_selection_mode");
    }
    /**
     * {@snippet :
     * enum GtkSelectionMode gtk_icon_view_get_selection_mode(struct _GtkIconView* icon_view);
     * }
     */
    public static int gtk_icon_view_get_selection_mode(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_get_selection_mode$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_select_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2817.const$3,"gtk_icon_view_select_path");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_select_path(struct _GtkIconView* icon_view, struct _GtkTreePath* path);
     * }
     */
    public static void gtk_icon_view_select_path(MemorySegment icon_view, MemorySegment path) {
        var mh$ = gtk_icon_view_select_path$MH();
        try {
            mh$.invokeExact(icon_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_unselect_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2817.const$4,"gtk_icon_view_unselect_path");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_unselect_path(struct _GtkIconView* icon_view, struct _GtkTreePath* path);
     * }
     */
    public static void gtk_icon_view_unselect_path(MemorySegment icon_view, MemorySegment path) {
        var mh$ = gtk_icon_view_unselect_path$MH();
        try {
            mh$.invokeExact(icon_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_path_is_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$2817.const$5,"gtk_icon_view_path_is_selected");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_path_is_selected(struct _GtkIconView* icon_view, struct _GtkTreePath* path);
     * }
     */
    public static int gtk_icon_view_path_is_selected(MemorySegment icon_view, MemorySegment path) {
        var mh$ = gtk_icon_view_path_is_selected$MH();
        try {
            return (int)mh$.invokeExact(icon_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_item_row$MH() {
        return RuntimeHelper.requireNonNull(constants$2818.const$0,"gtk_icon_view_get_item_row");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_get_item_row(struct _GtkIconView* icon_view, struct _GtkTreePath* path);
     * }
     */
    public static int gtk_icon_view_get_item_row(MemorySegment icon_view, MemorySegment path) {
        var mh$ = gtk_icon_view_get_item_row$MH();
        try {
            return (int)mh$.invokeExact(icon_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_item_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2818.const$1,"gtk_icon_view_get_item_column");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_get_item_column(struct _GtkIconView* icon_view, struct _GtkTreePath* path);
     * }
     */
    public static int gtk_icon_view_get_item_column(MemorySegment icon_view, MemorySegment path) {
        var mh$ = gtk_icon_view_get_item_column$MH();
        try {
            return (int)mh$.invokeExact(icon_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_selected_items$MH() {
        return RuntimeHelper.requireNonNull(constants$2818.const$2,"gtk_icon_view_get_selected_items");
    }
    /**
     * {@snippet :
     * struct _GList* gtk_icon_view_get_selected_items(struct _GtkIconView* icon_view);
     * }
     */
    public static MemorySegment gtk_icon_view_get_selected_items(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_get_selected_items$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_select_all$MH() {
        return RuntimeHelper.requireNonNull(constants$2818.const$3,"gtk_icon_view_select_all");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_select_all(struct _GtkIconView* icon_view);
     * }
     */
    public static void gtk_icon_view_select_all(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_select_all$MH();
        try {
            mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_unselect_all$MH() {
        return RuntimeHelper.requireNonNull(constants$2818.const$4,"gtk_icon_view_unselect_all");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_unselect_all(struct _GtkIconView* icon_view);
     * }
     */
    public static void gtk_icon_view_unselect_all(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_unselect_all$MH();
        try {
            mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_item_activated$MH() {
        return RuntimeHelper.requireNonNull(constants$2818.const$5,"gtk_icon_view_item_activated");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_item_activated(struct _GtkIconView* icon_view, struct _GtkTreePath* path);
     * }
     */
    public static void gtk_icon_view_item_activated(MemorySegment icon_view, MemorySegment path) {
        var mh$ = gtk_icon_view_item_activated$MH();
        try {
            mh$.invokeExact(icon_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$2819.const$0,"gtk_icon_view_set_cursor");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_cursor(struct _GtkIconView* icon_view, struct _GtkTreePath* path, struct _GtkCellRenderer* cell, int start_editing);
     * }
     */
    public static void gtk_icon_view_set_cursor(MemorySegment icon_view, MemorySegment path, MemorySegment cell, int start_editing) {
        var mh$ = gtk_icon_view_set_cursor$MH();
        try {
            mh$.invokeExact(icon_view, path, cell, start_editing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$2819.const$1,"gtk_icon_view_get_cursor");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_get_cursor(struct _GtkIconView* icon_view, struct _GtkTreePath** path, struct _GtkCellRenderer** cell);
     * }
     */
    public static int gtk_icon_view_get_cursor(MemorySegment icon_view, MemorySegment path, MemorySegment cell) {
        var mh$ = gtk_icon_view_get_cursor$MH();
        try {
            return (int)mh$.invokeExact(icon_view, path, cell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_scroll_to_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2819.const$3,"gtk_icon_view_scroll_to_path");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_scroll_to_path(struct _GtkIconView* icon_view, struct _GtkTreePath* path, int use_align, float row_align, float col_align);
     * }
     */
    public static void gtk_icon_view_scroll_to_path(MemorySegment icon_view, MemorySegment path, int use_align, float row_align, float col_align) {
        var mh$ = gtk_icon_view_scroll_to_path$MH();
        try {
            mh$.invokeExact(icon_view, path, use_align, row_align, col_align);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_enable_model_drag_source$MH() {
        return RuntimeHelper.requireNonNull(constants$2819.const$4,"gtk_icon_view_enable_model_drag_source");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_enable_model_drag_source(struct _GtkIconView* icon_view, enum GdkModifierType start_button_mask, struct _GtkTargetEntry* targets, int n_targets, enum GdkDragAction actions);
     * }
     */
    public static void gtk_icon_view_enable_model_drag_source(MemorySegment icon_view, int start_button_mask, MemorySegment targets, int n_targets, int actions) {
        var mh$ = gtk_icon_view_enable_model_drag_source$MH();
        try {
            mh$.invokeExact(icon_view, start_button_mask, targets, n_targets, actions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_enable_model_drag_dest$MH() {
        return RuntimeHelper.requireNonNull(constants$2819.const$5,"gtk_icon_view_enable_model_drag_dest");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_enable_model_drag_dest(struct _GtkIconView* icon_view, struct _GtkTargetEntry* targets, int n_targets, enum GdkDragAction actions);
     * }
     */
    public static void gtk_icon_view_enable_model_drag_dest(MemorySegment icon_view, MemorySegment targets, int n_targets, int actions) {
        var mh$ = gtk_icon_view_enable_model_drag_dest$MH();
        try {
            mh$.invokeExact(icon_view, targets, n_targets, actions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_unset_model_drag_source$MH() {
        return RuntimeHelper.requireNonNull(constants$2820.const$0,"gtk_icon_view_unset_model_drag_source");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_unset_model_drag_source(struct _GtkIconView* icon_view);
     * }
     */
    public static void gtk_icon_view_unset_model_drag_source(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_unset_model_drag_source$MH();
        try {
            mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_unset_model_drag_dest$MH() {
        return RuntimeHelper.requireNonNull(constants$2820.const$1,"gtk_icon_view_unset_model_drag_dest");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_unset_model_drag_dest(struct _GtkIconView* icon_view);
     * }
     */
    public static void gtk_icon_view_unset_model_drag_dest(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_unset_model_drag_dest$MH();
        try {
            mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_reorderable$MH() {
        return RuntimeHelper.requireNonNull(constants$2820.const$2,"gtk_icon_view_set_reorderable");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_reorderable(struct _GtkIconView* icon_view, int reorderable);
     * }
     */
    public static void gtk_icon_view_set_reorderable(MemorySegment icon_view, int reorderable) {
        var mh$ = gtk_icon_view_set_reorderable$MH();
        try {
            mh$.invokeExact(icon_view, reorderable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_reorderable$MH() {
        return RuntimeHelper.requireNonNull(constants$2820.const$3,"gtk_icon_view_get_reorderable");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_get_reorderable(struct _GtkIconView* icon_view);
     * }
     */
    public static int gtk_icon_view_get_reorderable(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_get_reorderable$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_drag_dest_item$MH() {
        return RuntimeHelper.requireNonNull(constants$2820.const$4,"gtk_icon_view_set_drag_dest_item");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_drag_dest_item(struct _GtkIconView* icon_view, struct _GtkTreePath* path, enum GtkIconViewDropPosition pos);
     * }
     */
    public static void gtk_icon_view_set_drag_dest_item(MemorySegment icon_view, MemorySegment path, int pos) {
        var mh$ = gtk_icon_view_set_drag_dest_item$MH();
        try {
            mh$.invokeExact(icon_view, path, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_drag_dest_item$MH() {
        return RuntimeHelper.requireNonNull(constants$2820.const$5,"gtk_icon_view_get_drag_dest_item");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_get_drag_dest_item(struct _GtkIconView* icon_view, struct _GtkTreePath** path, enum GtkIconViewDropPosition* pos);
     * }
     */
    public static void gtk_icon_view_get_drag_dest_item(MemorySegment icon_view, MemorySegment path, MemorySegment pos) {
        var mh$ = gtk_icon_view_get_drag_dest_item$MH();
        try {
            mh$.invokeExact(icon_view, path, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_dest_item_at_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$2821.const$0,"gtk_icon_view_get_dest_item_at_pos");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_get_dest_item_at_pos(struct _GtkIconView* icon_view, int drag_x, int drag_y, struct _GtkTreePath** path, enum GtkIconViewDropPosition* pos);
     * }
     */
    public static int gtk_icon_view_get_dest_item_at_pos(MemorySegment icon_view, int drag_x, int drag_y, MemorySegment path, MemorySegment pos) {
        var mh$ = gtk_icon_view_get_dest_item_at_pos$MH();
        try {
            return (int)mh$.invokeExact(icon_view, drag_x, drag_y, path, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_create_drag_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$2821.const$1,"gtk_icon_view_create_drag_icon");
    }
    /**
     * {@snippet :
     * struct _cairo_surface* gtk_icon_view_create_drag_icon(struct _GtkIconView* icon_view, struct _GtkTreePath* path);
     * }
     */
    public static MemorySegment gtk_icon_view_create_drag_icon(MemorySegment icon_view, MemorySegment path) {
        var mh$ = gtk_icon_view_create_drag_icon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_view, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_convert_widget_to_bin_window_coords$MH() {
        return RuntimeHelper.requireNonNull(constants$2821.const$2,"gtk_icon_view_convert_widget_to_bin_window_coords");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_convert_widget_to_bin_window_coords(struct _GtkIconView* icon_view, int wx, int wy, int* bx, int* by);
     * }
     */
    public static void gtk_icon_view_convert_widget_to_bin_window_coords(MemorySegment icon_view, int wx, int wy, MemorySegment bx, MemorySegment by) {
        var mh$ = gtk_icon_view_convert_widget_to_bin_window_coords$MH();
        try {
            mh$.invokeExact(icon_view, wx, wy, bx, by);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_cell_rect$MH() {
        return RuntimeHelper.requireNonNull(constants$2821.const$3,"gtk_icon_view_get_cell_rect");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_get_cell_rect(struct _GtkIconView* icon_view, struct _GtkTreePath* path, struct _GtkCellRenderer* cell, struct _cairo_rectangle_int* rect);
     * }
     */
    public static int gtk_icon_view_get_cell_rect(MemorySegment icon_view, MemorySegment path, MemorySegment cell, MemorySegment rect) {
        var mh$ = gtk_icon_view_get_cell_rect$MH();
        try {
            return (int)mh$.invokeExact(icon_view, path, cell, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_tooltip_item$MH() {
        return RuntimeHelper.requireNonNull(constants$2821.const$4,"gtk_icon_view_set_tooltip_item");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_tooltip_item(struct _GtkIconView* icon_view, struct _GtkTooltip* tooltip, struct _GtkTreePath* path);
     * }
     */
    public static void gtk_icon_view_set_tooltip_item(MemorySegment icon_view, MemorySegment tooltip, MemorySegment path) {
        var mh$ = gtk_icon_view_set_tooltip_item$MH();
        try {
            mh$.invokeExact(icon_view, tooltip, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_tooltip_cell$MH() {
        return RuntimeHelper.requireNonNull(constants$2821.const$5,"gtk_icon_view_set_tooltip_cell");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_tooltip_cell(struct _GtkIconView* icon_view, struct _GtkTooltip* tooltip, struct _GtkTreePath* path, struct _GtkCellRenderer* cell);
     * }
     */
    public static void gtk_icon_view_set_tooltip_cell(MemorySegment icon_view, MemorySegment tooltip, MemorySegment path, MemorySegment cell) {
        var mh$ = gtk_icon_view_set_tooltip_cell$MH();
        try {
            mh$.invokeExact(icon_view, tooltip, path, cell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_tooltip_context$MH() {
        return RuntimeHelper.requireNonNull(constants$2822.const$0,"gtk_icon_view_get_tooltip_context");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_get_tooltip_context(struct _GtkIconView* icon_view, int* x, int* y, int keyboard_tip, struct _GtkTreeModel** model, struct _GtkTreePath** path, struct _GtkTreeIter* iter);
     * }
     */
    public static int gtk_icon_view_get_tooltip_context(MemorySegment icon_view, MemorySegment x, MemorySegment y, int keyboard_tip, MemorySegment model, MemorySegment path, MemorySegment iter) {
        var mh$ = gtk_icon_view_get_tooltip_context$MH();
        try {
            return (int)mh$.invokeExact(icon_view, x, y, keyboard_tip, model, path, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_set_tooltip_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2822.const$1,"gtk_icon_view_set_tooltip_column");
    }
    /**
     * {@snippet :
     * void gtk_icon_view_set_tooltip_column(struct _GtkIconView* icon_view, int column);
     * }
     */
    public static void gtk_icon_view_set_tooltip_column(MemorySegment icon_view, int column) {
        var mh$ = gtk_icon_view_set_tooltip_column$MH();
        try {
            mh$.invokeExact(icon_view, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_icon_view_get_tooltip_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2822.const$2,"gtk_icon_view_get_tooltip_column");
    }
    /**
     * {@snippet :
     * int gtk_icon_view_get_tooltip_column(struct _GtkIconView* icon_view);
     * }
     */
    public static int gtk_icon_view_get_tooltip_column(MemorySegment icon_view) {
        var mh$ = gtk_icon_view_get_tooltip_column$MH();
        try {
            return (int)mh$.invokeExact(icon_view);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_simple_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2824.const$0,"gtk_im_context_simple_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_im_context_simple_get_type();
     * }
     */
    public static long gtk_im_context_simple_get_type() {
        var mh$ = gtk_im_context_simple_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_simple_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2824.const$1,"gtk_im_context_simple_new");
    }
    /**
     * {@snippet :
     * struct _GtkIMContext* gtk_im_context_simple_new();
     * }
     */
    public static MemorySegment gtk_im_context_simple_new() {
        var mh$ = gtk_im_context_simple_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_simple_add_table$MH() {
        return RuntimeHelper.requireNonNull(constants$2824.const$2,"gtk_im_context_simple_add_table");
    }
    /**
     * {@snippet :
     * void gtk_im_context_simple_add_table(struct _GtkIMContextSimple* context_simple, unsigned short* data, int max_seq_len, int n_seqs);
     * }
     */
    public static void gtk_im_context_simple_add_table(MemorySegment context_simple, MemorySegment data, int max_seq_len, int n_seqs) {
        var mh$ = gtk_im_context_simple_add_table$MH();
        try {
            mh$.invokeExact(context_simple, data, max_seq_len, n_seqs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_simple_add_compose_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2824.const$3,"gtk_im_context_simple_add_compose_file");
    }
    /**
     * {@snippet :
     * void gtk_im_context_simple_add_compose_file(struct _GtkIMContextSimple* context_simple, char* compose_file);
     * }
     */
    public static void gtk_im_context_simple_add_compose_file(MemorySegment context_simple, MemorySegment compose_file) {
        var mh$ = gtk_im_context_simple_add_compose_file$MH();
        try {
            mh$.invokeExact(context_simple, compose_file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_multicontext_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2826.const$3,"gtk_im_multicontext_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_im_multicontext_get_type();
     * }
     */
    public static long gtk_im_multicontext_get_type() {
        var mh$ = gtk_im_multicontext_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_multicontext_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2826.const$4,"gtk_im_multicontext_new");
    }
    /**
     * {@snippet :
     * struct _GtkIMContext* gtk_im_multicontext_new();
     * }
     */
    public static MemorySegment gtk_im_multicontext_new() {
        var mh$ = gtk_im_multicontext_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_multicontext_append_menuitems$MH() {
        return RuntimeHelper.requireNonNull(constants$2826.const$5,"gtk_im_multicontext_append_menuitems");
    }
    /**
     * {@snippet :
     * void gtk_im_multicontext_append_menuitems(struct _GtkIMMulticontext* context, struct _GtkMenuShell* menushell);
     * }
     */
    public static void gtk_im_multicontext_append_menuitems(MemorySegment context, MemorySegment menushell) {
        var mh$ = gtk_im_multicontext_append_menuitems$MH();
        try {
            mh$.invokeExact(context, menushell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_multicontext_get_context_id$MH() {
        return RuntimeHelper.requireNonNull(constants$2827.const$0,"gtk_im_multicontext_get_context_id");
    }
    /**
     * {@snippet :
     * char* gtk_im_multicontext_get_context_id(struct _GtkIMMulticontext* context);
     * }
     */
    public static MemorySegment gtk_im_multicontext_get_context_id(MemorySegment context) {
        var mh$ = gtk_im_multicontext_get_context_id$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_multicontext_set_context_id$MH() {
        return RuntimeHelper.requireNonNull(constants$2827.const$1,"gtk_im_multicontext_set_context_id");
    }
    /**
     * {@snippet :
     * void gtk_im_multicontext_set_context_id(struct _GtkIMMulticontext* context, char* context_id);
     * }
     */
    public static void gtk_im_multicontext_set_context_id(MemorySegment context, MemorySegment context_id) {
        var mh$ = gtk_im_multicontext_set_context_id$MH();
        try {
            mh$.invokeExact(context, context_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2829.const$5,"gtk_info_bar_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_info_bar_get_type();
     * }
     */
    public static long gtk_info_bar_get_type() {
        var mh$ = gtk_info_bar_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2830.const$0,"gtk_info_bar_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_info_bar_new();
     * }
     */
    public static MemorySegment gtk_info_bar_new() {
        var mh$ = gtk_info_bar_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_new_with_buttons$MH() {
        return RuntimeHelper.requireNonNull(constants$2830.const$1,"gtk_info_bar_new_with_buttons");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_info_bar_new_with_buttons(char* first_button_text,...);
     * }
     */
    public static MemorySegment gtk_info_bar_new_with_buttons(MemorySegment first_button_text, Object... x1) {
        var mh$ = gtk_info_bar_new_with_buttons$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(first_button_text, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_get_action_area$MH() {
        return RuntimeHelper.requireNonNull(constants$2830.const$2,"gtk_info_bar_get_action_area");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_info_bar_get_action_area(struct _GtkInfoBar* info_bar);
     * }
     */
    public static MemorySegment gtk_info_bar_get_action_area(MemorySegment info_bar) {
        var mh$ = gtk_info_bar_get_action_area$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info_bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_get_content_area$MH() {
        return RuntimeHelper.requireNonNull(constants$2830.const$3,"gtk_info_bar_get_content_area");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_info_bar_get_content_area(struct _GtkInfoBar* info_bar);
     * }
     */
    public static MemorySegment gtk_info_bar_get_content_area(MemorySegment info_bar) {
        var mh$ = gtk_info_bar_get_content_area$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info_bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_add_action_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2830.const$4,"gtk_info_bar_add_action_widget");
    }
    /**
     * {@snippet :
     * void gtk_info_bar_add_action_widget(struct _GtkInfoBar* info_bar, struct _GtkWidget* child, int response_id);
     * }
     */
    public static void gtk_info_bar_add_action_widget(MemorySegment info_bar, MemorySegment child, int response_id) {
        var mh$ = gtk_info_bar_add_action_widget$MH();
        try {
            mh$.invokeExact(info_bar, child, response_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_add_button$MH() {
        return RuntimeHelper.requireNonNull(constants$2830.const$5,"gtk_info_bar_add_button");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_info_bar_add_button(struct _GtkInfoBar* info_bar, char* button_text, int response_id);
     * }
     */
    public static MemorySegment gtk_info_bar_add_button(MemorySegment info_bar, MemorySegment button_text, int response_id) {
        var mh$ = gtk_info_bar_add_button$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(info_bar, button_text, response_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_add_buttons$MH() {
        return RuntimeHelper.requireNonNull(constants$2831.const$0,"gtk_info_bar_add_buttons");
    }
    /**
     * {@snippet :
     * void gtk_info_bar_add_buttons(struct _GtkInfoBar* info_bar, char* first_button_text,...);
     * }
     */
    public static void gtk_info_bar_add_buttons(MemorySegment info_bar, MemorySegment first_button_text, Object... x2) {
        var mh$ = gtk_info_bar_add_buttons$MH();
        try {
            mh$.invokeExact(info_bar, first_button_text, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_set_response_sensitive$MH() {
        return RuntimeHelper.requireNonNull(constants$2831.const$1,"gtk_info_bar_set_response_sensitive");
    }
    /**
     * {@snippet :
     * void gtk_info_bar_set_response_sensitive(struct _GtkInfoBar* info_bar, int response_id, int setting);
     * }
     */
    public static void gtk_info_bar_set_response_sensitive(MemorySegment info_bar, int response_id, int setting) {
        var mh$ = gtk_info_bar_set_response_sensitive$MH();
        try {
            mh$.invokeExact(info_bar, response_id, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_set_default_response$MH() {
        return RuntimeHelper.requireNonNull(constants$2831.const$2,"gtk_info_bar_set_default_response");
    }
    /**
     * {@snippet :
     * void gtk_info_bar_set_default_response(struct _GtkInfoBar* info_bar, int response_id);
     * }
     */
    public static void gtk_info_bar_set_default_response(MemorySegment info_bar, int response_id) {
        var mh$ = gtk_info_bar_set_default_response$MH();
        try {
            mh$.invokeExact(info_bar, response_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_response$MH() {
        return RuntimeHelper.requireNonNull(constants$2831.const$3,"gtk_info_bar_response");
    }
    /**
     * {@snippet :
     * void gtk_info_bar_response(struct _GtkInfoBar* info_bar, int response_id);
     * }
     */
    public static void gtk_info_bar_response(MemorySegment info_bar, int response_id) {
        var mh$ = gtk_info_bar_response$MH();
        try {
            mh$.invokeExact(info_bar, response_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_set_message_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2831.const$4,"gtk_info_bar_set_message_type");
    }
    /**
     * {@snippet :
     * void gtk_info_bar_set_message_type(struct _GtkInfoBar* info_bar, enum GtkMessageType message_type);
     * }
     */
    public static void gtk_info_bar_set_message_type(MemorySegment info_bar, int message_type) {
        var mh$ = gtk_info_bar_set_message_type$MH();
        try {
            mh$.invokeExact(info_bar, message_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_get_message_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2831.const$5,"gtk_info_bar_get_message_type");
    }
    /**
     * {@snippet :
     * enum GtkMessageType gtk_info_bar_get_message_type(struct _GtkInfoBar* info_bar);
     * }
     */
    public static int gtk_info_bar_get_message_type(MemorySegment info_bar) {
        var mh$ = gtk_info_bar_get_message_type$MH();
        try {
            return (int)mh$.invokeExact(info_bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_set_show_close_button$MH() {
        return RuntimeHelper.requireNonNull(constants$2832.const$0,"gtk_info_bar_set_show_close_button");
    }
    /**
     * {@snippet :
     * void gtk_info_bar_set_show_close_button(struct _GtkInfoBar* info_bar, int setting);
     * }
     */
    public static void gtk_info_bar_set_show_close_button(MemorySegment info_bar, int setting) {
        var mh$ = gtk_info_bar_set_show_close_button$MH();
        try {
            mh$.invokeExact(info_bar, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_get_show_close_button$MH() {
        return RuntimeHelper.requireNonNull(constants$2832.const$1,"gtk_info_bar_get_show_close_button");
    }
    /**
     * {@snippet :
     * int gtk_info_bar_get_show_close_button(struct _GtkInfoBar* info_bar);
     * }
     */
    public static int gtk_info_bar_get_show_close_button(MemorySegment info_bar) {
        var mh$ = gtk_info_bar_get_show_close_button$MH();
        try {
            return (int)mh$.invokeExact(info_bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_set_revealed$MH() {
        return RuntimeHelper.requireNonNull(constants$2832.const$2,"gtk_info_bar_set_revealed");
    }
    /**
     * {@snippet :
     * void gtk_info_bar_set_revealed(struct _GtkInfoBar* info_bar, int revealed);
     * }
     */
    public static void gtk_info_bar_set_revealed(MemorySegment info_bar, int revealed) {
        var mh$ = gtk_info_bar_set_revealed$MH();
        try {
            mh$.invokeExact(info_bar, revealed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_info_bar_get_revealed$MH() {
        return RuntimeHelper.requireNonNull(constants$2832.const$3,"gtk_info_bar_get_revealed");
    }
    /**
     * {@snippet :
     * int gtk_info_bar_get_revealed(struct _GtkInfoBar* info_bar);
     * }
     */
    public static int gtk_info_bar_get_revealed(MemorySegment info_bar) {
        var mh$ = gtk_info_bar_get_revealed$MH();
        try {
            return (int)mh$.invokeExact(info_bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_invisible_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2834.const$3,"gtk_invisible_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_invisible_get_type();
     * }
     */
    public static long gtk_invisible_get_type() {
        var mh$ = gtk_invisible_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_invisible_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2834.const$4,"gtk_invisible_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_invisible_new();
     * }
     */
    public static MemorySegment gtk_invisible_new() {
        var mh$ = gtk_invisible_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_invisible_new_for_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$2834.const$5,"gtk_invisible_new_for_screen");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_invisible_new_for_screen(struct _GdkScreen* screen);
     * }
     */
    public static MemorySegment gtk_invisible_new_for_screen(MemorySegment screen) {
        var mh$ = gtk_invisible_new_for_screen$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_invisible_set_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$2835.const$0,"gtk_invisible_set_screen");
    }
    /**
     * {@snippet :
     * void gtk_invisible_set_screen(struct _GtkInvisible* invisible, struct _GdkScreen* screen);
     * }
     */
    public static void gtk_invisible_set_screen(MemorySegment invisible, MemorySegment screen) {
        var mh$ = gtk_invisible_set_screen$MH();
        try {
            mh$.invokeExact(invisible, screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_invisible_get_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$2835.const$1,"gtk_invisible_get_screen");
    }
    /**
     * {@snippet :
     * struct _GdkScreen* gtk_invisible_get_screen(struct _GtkInvisible* invisible);
     * }
     */
    public static MemorySegment gtk_invisible_get_screen(MemorySegment invisible) {
        var mh$ = gtk_invisible_get_screen$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(invisible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_layout_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2837.const$1,"gtk_layout_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_layout_get_type();
     * }
     */
    public static long gtk_layout_get_type() {
        var mh$ = gtk_layout_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_layout_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2837.const$2,"gtk_layout_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_layout_new(struct _GtkAdjustment* hadjustment, struct _GtkAdjustment* vadjustment);
     * }
     */
    public static MemorySegment gtk_layout_new(MemorySegment hadjustment, MemorySegment vadjustment) {
        var mh$ = gtk_layout_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hadjustment, vadjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_layout_get_bin_window$MH() {
        return RuntimeHelper.requireNonNull(constants$2837.const$3,"gtk_layout_get_bin_window");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gtk_layout_get_bin_window(struct _GtkLayout* layout);
     * }
     */
    public static MemorySegment gtk_layout_get_bin_window(MemorySegment layout) {
        var mh$ = gtk_layout_get_bin_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_layout_put$MH() {
        return RuntimeHelper.requireNonNull(constants$2837.const$4,"gtk_layout_put");
    }
    /**
     * {@snippet :
     * void gtk_layout_put(struct _GtkLayout* layout, struct _GtkWidget* child_widget, int x, int y);
     * }
     */
    public static void gtk_layout_put(MemorySegment layout, MemorySegment child_widget, int x, int y) {
        var mh$ = gtk_layout_put$MH();
        try {
            mh$.invokeExact(layout, child_widget, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_layout_move$MH() {
        return RuntimeHelper.requireNonNull(constants$2837.const$5,"gtk_layout_move");
    }
    /**
     * {@snippet :
     * void gtk_layout_move(struct _GtkLayout* layout, struct _GtkWidget* child_widget, int x, int y);
     * }
     */
    public static void gtk_layout_move(MemorySegment layout, MemorySegment child_widget, int x, int y) {
        var mh$ = gtk_layout_move$MH();
        try {
            mh$.invokeExact(layout, child_widget, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_layout_set_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2838.const$0,"gtk_layout_set_size");
    }
    /**
     * {@snippet :
     * void gtk_layout_set_size(struct _GtkLayout* layout, unsigned int width, unsigned int height);
     * }
     */
    public static void gtk_layout_set_size(MemorySegment layout, int width, int height) {
        var mh$ = gtk_layout_set_size$MH();
        try {
            mh$.invokeExact(layout, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_layout_get_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2838.const$1,"gtk_layout_get_size");
    }
    /**
     * {@snippet :
     * void gtk_layout_get_size(struct _GtkLayout* layout, unsigned int* width, unsigned int* height);
     * }
     */
    public static void gtk_layout_get_size(MemorySegment layout, MemorySegment width, MemorySegment height) {
        var mh$ = gtk_layout_get_size$MH();
        try {
            mh$.invokeExact(layout, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_layout_get_hadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2838.const$2,"gtk_layout_get_hadjustment");
    }
    /**
     * {@snippet :
     * struct _GtkAdjustment* gtk_layout_get_hadjustment(struct _GtkLayout* layout);
     * }
     */
    public static MemorySegment gtk_layout_get_hadjustment(MemorySegment layout) {
        var mh$ = gtk_layout_get_hadjustment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_layout_get_vadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2838.const$3,"gtk_layout_get_vadjustment");
    }
    /**
     * {@snippet :
     * struct _GtkAdjustment* gtk_layout_get_vadjustment(struct _GtkLayout* layout);
     * }
     */
    public static MemorySegment gtk_layout_get_vadjustment(MemorySegment layout) {
        var mh$ = gtk_layout_get_vadjustment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(layout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_layout_set_hadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2838.const$4,"gtk_layout_set_hadjustment");
    }
    /**
     * {@snippet :
     * void gtk_layout_set_hadjustment(struct _GtkLayout* layout, struct _GtkAdjustment* adjustment);
     * }
     */
    public static void gtk_layout_set_hadjustment(MemorySegment layout, MemorySegment adjustment) {
        var mh$ = gtk_layout_set_hadjustment$MH();
        try {
            mh$.invokeExact(layout, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_layout_set_vadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2838.const$5,"gtk_layout_set_vadjustment");
    }
    /**
     * {@snippet :
     * void gtk_layout_set_vadjustment(struct _GtkLayout* layout, struct _GtkAdjustment* adjustment);
     * }
     */
    public static void gtk_layout_set_vadjustment(MemorySegment layout, MemorySegment adjustment) {
        var mh$ = gtk_layout_set_vadjustment$MH();
        try {
            mh$.invokeExact(layout, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_level_bar_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2839.const$5,"gtk_level_bar_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_level_bar_get_type();
     * }
     */
    public static long gtk_level_bar_get_type() {
        var mh$ = gtk_level_bar_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_level_bar_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2840.const$0,"gtk_level_bar_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_level_bar_new();
     * }
     */
    public static MemorySegment gtk_level_bar_new() {
        var mh$ = gtk_level_bar_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_level_bar_new_for_interval$MH() {
        return RuntimeHelper.requireNonNull(constants$2840.const$2,"gtk_level_bar_new_for_interval");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_level_bar_new_for_interval(double min_value, double max_value);
     * }
     */
    public static MemorySegment gtk_level_bar_new_for_interval(double min_value, double max_value) {
        var mh$ = gtk_level_bar_new_for_interval$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(min_value, max_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_level_bar_set_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2840.const$3,"gtk_level_bar_set_mode");
    }
    /**
     * {@snippet :
     * void gtk_level_bar_set_mode(struct _GtkLevelBar* self, enum GtkLevelBarMode mode);
     * }
     */
    public static void gtk_level_bar_set_mode(MemorySegment self, int mode) {
        var mh$ = gtk_level_bar_set_mode$MH();
        try {
            mh$.invokeExact(self, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_level_bar_get_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2840.const$4,"gtk_level_bar_get_mode");
    }
    /**
     * {@snippet :
     * enum GtkLevelBarMode gtk_level_bar_get_mode(struct _GtkLevelBar* self);
     * }
     */
    public static int gtk_level_bar_get_mode(MemorySegment self) {
        var mh$ = gtk_level_bar_get_mode$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_level_bar_set_value$MH() {
        return RuntimeHelper.requireNonNull(constants$2840.const$5,"gtk_level_bar_set_value");
    }
    /**
     * {@snippet :
     * void gtk_level_bar_set_value(struct _GtkLevelBar* self, double value);
     * }
     */
    public static void gtk_level_bar_set_value(MemorySegment self, double value) {
        var mh$ = gtk_level_bar_set_value$MH();
        try {
            mh$.invokeExact(self, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_level_bar_get_value$MH() {
        return RuntimeHelper.requireNonNull(constants$2841.const$0,"gtk_level_bar_get_value");
    }
    /**
     * {@snippet :
     * double gtk_level_bar_get_value(struct _GtkLevelBar* self);
     * }
     */
    public static double gtk_level_bar_get_value(MemorySegment self) {
        var mh$ = gtk_level_bar_get_value$MH();
        try {
            return (double)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_level_bar_set_min_value$MH() {
        return RuntimeHelper.requireNonNull(constants$2841.const$1,"gtk_level_bar_set_min_value");
    }
    /**
     * {@snippet :
     * void gtk_level_bar_set_min_value(struct _GtkLevelBar* self, double value);
     * }
     */
    public static void gtk_level_bar_set_min_value(MemorySegment self, double value) {
        var mh$ = gtk_level_bar_set_min_value$MH();
        try {
            mh$.invokeExact(self, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_level_bar_get_min_value$MH() {
        return RuntimeHelper.requireNonNull(constants$2841.const$2,"gtk_level_bar_get_min_value");
    }
    /**
     * {@snippet :
     * double gtk_level_bar_get_min_value(struct _GtkLevelBar* self);
     * }
     */
    public static double gtk_level_bar_get_min_value(MemorySegment self) {
        var mh$ = gtk_level_bar_get_min_value$MH();
        try {
            return (double)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_level_bar_set_max_value$MH() {
        return RuntimeHelper.requireNonNull(constants$2841.const$3,"gtk_level_bar_set_max_value");
    }
    /**
     * {@snippet :
     * void gtk_level_bar_set_max_value(struct _GtkLevelBar* self, double value);
     * }
     */
    public static void gtk_level_bar_set_max_value(MemorySegment self, double value) {
        var mh$ = gtk_level_bar_set_max_value$MH();
        try {
            mh$.invokeExact(self, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_level_bar_get_max_value$MH() {
        return RuntimeHelper.requireNonNull(constants$2841.const$4,"gtk_level_bar_get_max_value");
    }
    /**
     * {@snippet :
     * double gtk_level_bar_get_max_value(struct _GtkLevelBar* self);
     * }
     */
    public static double gtk_level_bar_get_max_value(MemorySegment self) {
        var mh$ = gtk_level_bar_get_max_value$MH();
        try {
            return (double)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_level_bar_set_inverted$MH() {
        return RuntimeHelper.requireNonNull(constants$2841.const$5,"gtk_level_bar_set_inverted");
    }
    /**
     * {@snippet :
     * void gtk_level_bar_set_inverted(struct _GtkLevelBar* self, int inverted);
     * }
     */
    public static void gtk_level_bar_set_inverted(MemorySegment self, int inverted) {
        var mh$ = gtk_level_bar_set_inverted$MH();
        try {
            mh$.invokeExact(self, inverted);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_level_bar_get_inverted$MH() {
        return RuntimeHelper.requireNonNull(constants$2842.const$0,"gtk_level_bar_get_inverted");
    }
    /**
     * {@snippet :
     * int gtk_level_bar_get_inverted(struct _GtkLevelBar* self);
     * }
     */
    public static int gtk_level_bar_get_inverted(MemorySegment self) {
        var mh$ = gtk_level_bar_get_inverted$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_level_bar_add_offset_value$MH() {
        return RuntimeHelper.requireNonNull(constants$2842.const$2,"gtk_level_bar_add_offset_value");
    }
    /**
     * {@snippet :
     * void gtk_level_bar_add_offset_value(struct _GtkLevelBar* self, char* name, double value);
     * }
     */
    public static void gtk_level_bar_add_offset_value(MemorySegment self, MemorySegment name, double value) {
        var mh$ = gtk_level_bar_add_offset_value$MH();
        try {
            mh$.invokeExact(self, name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_level_bar_remove_offset_value$MH() {
        return RuntimeHelper.requireNonNull(constants$2842.const$3,"gtk_level_bar_remove_offset_value");
    }
    /**
     * {@snippet :
     * void gtk_level_bar_remove_offset_value(struct _GtkLevelBar* self, char* name);
     * }
     */
    public static void gtk_level_bar_remove_offset_value(MemorySegment self, MemorySegment name) {
        var mh$ = gtk_level_bar_remove_offset_value$MH();
        try {
            mh$.invokeExact(self, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_level_bar_get_offset_value$MH() {
        return RuntimeHelper.requireNonNull(constants$2842.const$4,"gtk_level_bar_get_offset_value");
    }
    /**
     * {@snippet :
     * int gtk_level_bar_get_offset_value(struct _GtkLevelBar* self, char* name, double* value);
     * }
     */
    public static int gtk_level_bar_get_offset_value(MemorySegment self, MemorySegment name, MemorySegment value) {
        var mh$ = gtk_level_bar_get_offset_value$MH();
        try {
            return (int)mh$.invokeExact(self, name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_link_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2845.const$0,"gtk_link_button_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_link_button_get_type();
     * }
     */
    public static long gtk_link_button_get_type() {
        var mh$ = gtk_link_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_link_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2845.const$1,"gtk_link_button_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_link_button_new(char* uri);
     * }
     */
    public static MemorySegment gtk_link_button_new(MemorySegment uri) {
        var mh$ = gtk_link_button_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(uri);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_link_button_new_with_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2845.const$2,"gtk_link_button_new_with_label");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_link_button_new_with_label(char* uri, char* label);
     * }
     */
    public static MemorySegment gtk_link_button_new_with_label(MemorySegment uri, MemorySegment label) {
        var mh$ = gtk_link_button_new_with_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(uri, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_link_button_get_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$2845.const$3,"gtk_link_button_get_uri");
    }
    /**
     * {@snippet :
     * char* gtk_link_button_get_uri(struct _GtkLinkButton* link_button);
     * }
     */
    public static MemorySegment gtk_link_button_get_uri(MemorySegment link_button) {
        var mh$ = gtk_link_button_get_uri$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(link_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_link_button_set_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$2845.const$4,"gtk_link_button_set_uri");
    }
    /**
     * {@snippet :
     * void gtk_link_button_set_uri(struct _GtkLinkButton* link_button, char* uri);
     * }
     */
    public static void gtk_link_button_set_uri(MemorySegment link_button, MemorySegment uri) {
        var mh$ = gtk_link_button_set_uri$MH();
        try {
            mh$.invokeExact(link_button, uri);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_link_button_get_visited$MH() {
        return RuntimeHelper.requireNonNull(constants$2845.const$5,"gtk_link_button_get_visited");
    }
    /**
     * {@snippet :
     * int gtk_link_button_get_visited(struct _GtkLinkButton* link_button);
     * }
     */
    public static int gtk_link_button_get_visited(MemorySegment link_button) {
        var mh$ = gtk_link_button_get_visited$MH();
        try {
            return (int)mh$.invokeExact(link_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_link_button_set_visited$MH() {
        return RuntimeHelper.requireNonNull(constants$2846.const$0,"gtk_link_button_set_visited");
    }
    /**
     * {@snippet :
     * void gtk_link_button_set_visited(struct _GtkLinkButton* link_button, int visited);
     * }
     */
    public static void gtk_link_button_set_visited(MemorySegment link_button, int visited) {
        var mh$ = gtk_link_button_set_visited$MH();
        try {
            mh$.invokeExact(link_button, visited);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_row_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2852.const$1,"gtk_list_box_row_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_list_box_row_get_type();
     * }
     */
    public static long gtk_list_box_row_get_type() {
        var mh$ = gtk_list_box_row_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_row_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2852.const$2,"gtk_list_box_row_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_list_box_row_new();
     * }
     */
    public static MemorySegment gtk_list_box_row_new() {
        var mh$ = gtk_list_box_row_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_row_get_header$MH() {
        return RuntimeHelper.requireNonNull(constants$2852.const$3,"gtk_list_box_row_get_header");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_list_box_row_get_header(struct _GtkListBoxRow* row);
     * }
     */
    public static MemorySegment gtk_list_box_row_get_header(MemorySegment row) {
        var mh$ = gtk_list_box_row_get_header$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_row_set_header$MH() {
        return RuntimeHelper.requireNonNull(constants$2852.const$4,"gtk_list_box_row_set_header");
    }
    /**
     * {@snippet :
     * void gtk_list_box_row_set_header(struct _GtkListBoxRow* row, struct _GtkWidget* header);
     * }
     */
    public static void gtk_list_box_row_set_header(MemorySegment row, MemorySegment header) {
        var mh$ = gtk_list_box_row_set_header$MH();
        try {
            mh$.invokeExact(row, header);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_row_get_index$MH() {
        return RuntimeHelper.requireNonNull(constants$2852.const$5,"gtk_list_box_row_get_index");
    }
    /**
     * {@snippet :
     * int gtk_list_box_row_get_index(struct _GtkListBoxRow* row);
     * }
     */
    public static int gtk_list_box_row_get_index(MemorySegment row) {
        var mh$ = gtk_list_box_row_get_index$MH();
        try {
            return (int)mh$.invokeExact(row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_row_changed$MH() {
        return RuntimeHelper.requireNonNull(constants$2853.const$0,"gtk_list_box_row_changed");
    }
    /**
     * {@snippet :
     * void gtk_list_box_row_changed(struct _GtkListBoxRow* row);
     * }
     */
    public static void gtk_list_box_row_changed(MemorySegment row) {
        var mh$ = gtk_list_box_row_changed$MH();
        try {
            mh$.invokeExact(row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_row_is_selected$MH() {
        return RuntimeHelper.requireNonNull(constants$2853.const$1,"gtk_list_box_row_is_selected");
    }
    /**
     * {@snippet :
     * int gtk_list_box_row_is_selected(struct _GtkListBoxRow* row);
     * }
     */
    public static int gtk_list_box_row_is_selected(MemorySegment row) {
        var mh$ = gtk_list_box_row_is_selected$MH();
        try {
            return (int)mh$.invokeExact(row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_row_set_selectable$MH() {
        return RuntimeHelper.requireNonNull(constants$2853.const$2,"gtk_list_box_row_set_selectable");
    }
    /**
     * {@snippet :
     * void gtk_list_box_row_set_selectable(struct _GtkListBoxRow* row, int selectable);
     * }
     */
    public static void gtk_list_box_row_set_selectable(MemorySegment row, int selectable) {
        var mh$ = gtk_list_box_row_set_selectable$MH();
        try {
            mh$.invokeExact(row, selectable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_row_get_selectable$MH() {
        return RuntimeHelper.requireNonNull(constants$2853.const$3,"gtk_list_box_row_get_selectable");
    }
    /**
     * {@snippet :
     * int gtk_list_box_row_get_selectable(struct _GtkListBoxRow* row);
     * }
     */
    public static int gtk_list_box_row_get_selectable(MemorySegment row) {
        var mh$ = gtk_list_box_row_get_selectable$MH();
        try {
            return (int)mh$.invokeExact(row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_row_set_activatable$MH() {
        return RuntimeHelper.requireNonNull(constants$2853.const$4,"gtk_list_box_row_set_activatable");
    }
    /**
     * {@snippet :
     * void gtk_list_box_row_set_activatable(struct _GtkListBoxRow* row, int activatable);
     * }
     */
    public static void gtk_list_box_row_set_activatable(MemorySegment row, int activatable) {
        var mh$ = gtk_list_box_row_set_activatable$MH();
        try {
            mh$.invokeExact(row, activatable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_row_get_activatable$MH() {
        return RuntimeHelper.requireNonNull(constants$2853.const$5,"gtk_list_box_row_get_activatable");
    }
    /**
     * {@snippet :
     * int gtk_list_box_row_get_activatable(struct _GtkListBoxRow* row);
     * }
     */
    public static int gtk_list_box_row_get_activatable(MemorySegment row) {
        var mh$ = gtk_list_box_row_get_activatable$MH();
        try {
            return (int)mh$.invokeExact(row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2854.const$0,"gtk_list_box_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_list_box_get_type();
     * }
     */
    public static long gtk_list_box_get_type() {
        var mh$ = gtk_list_box_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_prepend$MH() {
        return RuntimeHelper.requireNonNull(constants$2854.const$1,"gtk_list_box_prepend");
    }
    /**
     * {@snippet :
     * void gtk_list_box_prepend(struct _GtkListBox* box, struct _GtkWidget* child);
     * }
     */
    public static void gtk_list_box_prepend(MemorySegment box, MemorySegment child) {
        var mh$ = gtk_list_box_prepend$MH();
        try {
            mh$.invokeExact(box, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$2854.const$2,"gtk_list_box_insert");
    }
    /**
     * {@snippet :
     * void gtk_list_box_insert(struct _GtkListBox* box, struct _GtkWidget* child, int position);
     * }
     */
    public static void gtk_list_box_insert(MemorySegment box, MemorySegment child, int position) {
        var mh$ = gtk_list_box_insert$MH();
        try {
            mh$.invokeExact(box, child, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_get_selected_row$MH() {
        return RuntimeHelper.requireNonNull(constants$2854.const$3,"gtk_list_box_get_selected_row");
    }
    /**
     * {@snippet :
     * struct _GtkListBoxRow* gtk_list_box_get_selected_row(struct _GtkListBox* box);
     * }
     */
    public static MemorySegment gtk_list_box_get_selected_row(MemorySegment box) {
        var mh$ = gtk_list_box_get_selected_row$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_get_row_at_index$MH() {
        return RuntimeHelper.requireNonNull(constants$2854.const$4,"gtk_list_box_get_row_at_index");
    }
    /**
     * {@snippet :
     * struct _GtkListBoxRow* gtk_list_box_get_row_at_index(struct _GtkListBox* box, int index_);
     * }
     */
    public static MemorySegment gtk_list_box_get_row_at_index(MemorySegment box, int index_) {
        var mh$ = gtk_list_box_get_row_at_index$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(box, index_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_get_row_at_y$MH() {
        return RuntimeHelper.requireNonNull(constants$2854.const$5,"gtk_list_box_get_row_at_y");
    }
    /**
     * {@snippet :
     * struct _GtkListBoxRow* gtk_list_box_get_row_at_y(struct _GtkListBox* box, int y);
     * }
     */
    public static MemorySegment gtk_list_box_get_row_at_y(MemorySegment box, int y) {
        var mh$ = gtk_list_box_get_row_at_y$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(box, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_select_row$MH() {
        return RuntimeHelper.requireNonNull(constants$2855.const$0,"gtk_list_box_select_row");
    }
    /**
     * {@snippet :
     * void gtk_list_box_select_row(struct _GtkListBox* box, struct _GtkListBoxRow* row);
     * }
     */
    public static void gtk_list_box_select_row(MemorySegment box, MemorySegment row) {
        var mh$ = gtk_list_box_select_row$MH();
        try {
            mh$.invokeExact(box, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_set_placeholder$MH() {
        return RuntimeHelper.requireNonNull(constants$2855.const$1,"gtk_list_box_set_placeholder");
    }
    /**
     * {@snippet :
     * void gtk_list_box_set_placeholder(struct _GtkListBox* box, struct _GtkWidget* placeholder);
     * }
     */
    public static void gtk_list_box_set_placeholder(MemorySegment box, MemorySegment placeholder) {
        var mh$ = gtk_list_box_set_placeholder$MH();
        try {
            mh$.invokeExact(box, placeholder);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_set_adjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2855.const$2,"gtk_list_box_set_adjustment");
    }
    /**
     * {@snippet :
     * void gtk_list_box_set_adjustment(struct _GtkListBox* box, struct _GtkAdjustment* adjustment);
     * }
     */
    public static void gtk_list_box_set_adjustment(MemorySegment box, MemorySegment adjustment) {
        var mh$ = gtk_list_box_set_adjustment$MH();
        try {
            mh$.invokeExact(box, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_get_adjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2855.const$3,"gtk_list_box_get_adjustment");
    }
    /**
     * {@snippet :
     * struct _GtkAdjustment* gtk_list_box_get_adjustment(struct _GtkListBox* box);
     * }
     */
    public static MemorySegment gtk_list_box_get_adjustment(MemorySegment box) {
        var mh$ = gtk_list_box_get_adjustment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_selected_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$2856.const$0,"gtk_list_box_selected_foreach");
    }
    /**
     * {@snippet :
     * void gtk_list_box_selected_foreach(struct _GtkListBox* box, void (*func)(struct _GtkListBox*,struct _GtkListBoxRow*,void*), void* data);
     * }
     */
    public static void gtk_list_box_selected_foreach(MemorySegment box, MemorySegment func, MemorySegment data) {
        var mh$ = gtk_list_box_selected_foreach$MH();
        try {
            mh$.invokeExact(box, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_get_selected_rows$MH() {
        return RuntimeHelper.requireNonNull(constants$2856.const$1,"gtk_list_box_get_selected_rows");
    }
    /**
     * {@snippet :
     * struct _GList* gtk_list_box_get_selected_rows(struct _GtkListBox* box);
     * }
     */
    public static MemorySegment gtk_list_box_get_selected_rows(MemorySegment box) {
        var mh$ = gtk_list_box_get_selected_rows$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_unselect_row$MH() {
        return RuntimeHelper.requireNonNull(constants$2856.const$2,"gtk_list_box_unselect_row");
    }
    /**
     * {@snippet :
     * void gtk_list_box_unselect_row(struct _GtkListBox* box, struct _GtkListBoxRow* row);
     * }
     */
    public static void gtk_list_box_unselect_row(MemorySegment box, MemorySegment row) {
        var mh$ = gtk_list_box_unselect_row$MH();
        try {
            mh$.invokeExact(box, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_select_all$MH() {
        return RuntimeHelper.requireNonNull(constants$2856.const$3,"gtk_list_box_select_all");
    }
    /**
     * {@snippet :
     * void gtk_list_box_select_all(struct _GtkListBox* box);
     * }
     */
    public static void gtk_list_box_select_all(MemorySegment box) {
        var mh$ = gtk_list_box_select_all$MH();
        try {
            mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_unselect_all$MH() {
        return RuntimeHelper.requireNonNull(constants$2856.const$4,"gtk_list_box_unselect_all");
    }
    /**
     * {@snippet :
     * void gtk_list_box_unselect_all(struct _GtkListBox* box);
     * }
     */
    public static void gtk_list_box_unselect_all(MemorySegment box) {
        var mh$ = gtk_list_box_unselect_all$MH();
        try {
            mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_set_selection_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2856.const$5,"gtk_list_box_set_selection_mode");
    }
    /**
     * {@snippet :
     * void gtk_list_box_set_selection_mode(struct _GtkListBox* box, enum GtkSelectionMode mode);
     * }
     */
    public static void gtk_list_box_set_selection_mode(MemorySegment box, int mode) {
        var mh$ = gtk_list_box_set_selection_mode$MH();
        try {
            mh$.invokeExact(box, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_get_selection_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2857.const$0,"gtk_list_box_get_selection_mode");
    }
    /**
     * {@snippet :
     * enum GtkSelectionMode gtk_list_box_get_selection_mode(struct _GtkListBox* box);
     * }
     */
    public static int gtk_list_box_get_selection_mode(MemorySegment box) {
        var mh$ = gtk_list_box_get_selection_mode$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_set_filter_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2857.const$3,"gtk_list_box_set_filter_func");
    }
    /**
     * {@snippet :
     * void gtk_list_box_set_filter_func(struct _GtkListBox* box, int (*filter_func)(struct _GtkListBoxRow*,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void gtk_list_box_set_filter_func(MemorySegment box, MemorySegment filter_func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = gtk_list_box_set_filter_func$MH();
        try {
            mh$.invokeExact(box, filter_func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_set_header_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2858.const$0,"gtk_list_box_set_header_func");
    }
    /**
     * {@snippet :
     * void gtk_list_box_set_header_func(struct _GtkListBox* box, void (*update_header)(struct _GtkListBoxRow*,struct _GtkListBoxRow*,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void gtk_list_box_set_header_func(MemorySegment box, MemorySegment update_header, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = gtk_list_box_set_header_func$MH();
        try {
            mh$.invokeExact(box, update_header, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_invalidate_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$2858.const$1,"gtk_list_box_invalidate_filter");
    }
    /**
     * {@snippet :
     * void gtk_list_box_invalidate_filter(struct _GtkListBox* box);
     * }
     */
    public static void gtk_list_box_invalidate_filter(MemorySegment box) {
        var mh$ = gtk_list_box_invalidate_filter$MH();
        try {
            mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_invalidate_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$2858.const$2,"gtk_list_box_invalidate_sort");
    }
    /**
     * {@snippet :
     * void gtk_list_box_invalidate_sort(struct _GtkListBox* box);
     * }
     */
    public static void gtk_list_box_invalidate_sort(MemorySegment box) {
        var mh$ = gtk_list_box_invalidate_sort$MH();
        try {
            mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_invalidate_headers$MH() {
        return RuntimeHelper.requireNonNull(constants$2858.const$3,"gtk_list_box_invalidate_headers");
    }
    /**
     * {@snippet :
     * void gtk_list_box_invalidate_headers(struct _GtkListBox* box);
     * }
     */
    public static void gtk_list_box_invalidate_headers(MemorySegment box) {
        var mh$ = gtk_list_box_invalidate_headers$MH();
        try {
            mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_set_sort_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2859.const$0,"gtk_list_box_set_sort_func");
    }
    /**
     * {@snippet :
     * void gtk_list_box_set_sort_func(struct _GtkListBox* box, int (*sort_func)(struct _GtkListBoxRow*,struct _GtkListBoxRow*,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void gtk_list_box_set_sort_func(MemorySegment box, MemorySegment sort_func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = gtk_list_box_set_sort_func$MH();
        try {
            mh$.invokeExact(box, sort_func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_set_activate_on_single_click$MH() {
        return RuntimeHelper.requireNonNull(constants$2859.const$1,"gtk_list_box_set_activate_on_single_click");
    }
    /**
     * {@snippet :
     * void gtk_list_box_set_activate_on_single_click(struct _GtkListBox* box, int single);
     * }
     */
    public static void gtk_list_box_set_activate_on_single_click(MemorySegment box, int single) {
        var mh$ = gtk_list_box_set_activate_on_single_click$MH();
        try {
            mh$.invokeExact(box, single);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_get_activate_on_single_click$MH() {
        return RuntimeHelper.requireNonNull(constants$2859.const$2,"gtk_list_box_get_activate_on_single_click");
    }
    /**
     * {@snippet :
     * int gtk_list_box_get_activate_on_single_click(struct _GtkListBox* box);
     * }
     */
    public static int gtk_list_box_get_activate_on_single_click(MemorySegment box) {
        var mh$ = gtk_list_box_get_activate_on_single_click$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_drag_unhighlight_row$MH() {
        return RuntimeHelper.requireNonNull(constants$2859.const$3,"gtk_list_box_drag_unhighlight_row");
    }
    /**
     * {@snippet :
     * void gtk_list_box_drag_unhighlight_row(struct _GtkListBox* box);
     * }
     */
    public static void gtk_list_box_drag_unhighlight_row(MemorySegment box) {
        var mh$ = gtk_list_box_drag_unhighlight_row$MH();
        try {
            mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_drag_highlight_row$MH() {
        return RuntimeHelper.requireNonNull(constants$2859.const$4,"gtk_list_box_drag_highlight_row");
    }
    /**
     * {@snippet :
     * void gtk_list_box_drag_highlight_row(struct _GtkListBox* box, struct _GtkListBoxRow* row);
     * }
     */
    public static void gtk_list_box_drag_highlight_row(MemorySegment box, MemorySegment row) {
        var mh$ = gtk_list_box_drag_highlight_row$MH();
        try {
            mh$.invokeExact(box, row);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2859.const$5,"gtk_list_box_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_list_box_new();
     * }
     */
    public static MemorySegment gtk_list_box_new() {
        var mh$ = gtk_list_box_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_list_box_bind_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2860.const$2,"gtk_list_box_bind_model");
    }
    /**
     * {@snippet :
     * void gtk_list_box_bind_model(struct _GtkListBox* box, struct _GListModel* model, struct _GtkWidget* (*create_widget_func)(void*,void*), void* user_data, void (*user_data_free_func)(void*));
     * }
     */
    public static void gtk_list_box_bind_model(MemorySegment box, MemorySegment model, MemorySegment create_widget_func, MemorySegment user_data, MemorySegment user_data_free_func) {
        var mh$ = gtk_list_box_bind_model$MH();
        try {
            mh$.invokeExact(box, model, create_widget_func, user_data, user_data_free_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkListBox* GtkListBox_autoptr;
     * }
     */
    public static final AddressLayout GtkListBox_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GtkListBox_listautoptr;
     * }
     */
    public static final AddressLayout GtkListBox_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkListBox_slistautoptr;
     * }
     */
    public static final AddressLayout GtkListBox_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkListBox_queueautoptr;
     * }
     */
    public static final AddressLayout GtkListBox_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GtkListBoxRow* GtkListBoxRow_autoptr;
     * }
     */
    public static final AddressLayout GtkListBoxRow_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GtkListBoxRow_listautoptr;
     * }
     */
    public static final AddressLayout GtkListBoxRow_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkListBoxRow_slistautoptr;
     * }
     */
    public static final AddressLayout GtkListBoxRow_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkListBoxRow_queueautoptr;
     * }
     */
    public static final AddressLayout GtkListBoxRow_queueautoptr = RuntimeHelper.POINTER;
    public static MethodHandle gtk_lock_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2863.const$4,"gtk_lock_button_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_lock_button_get_type();
     * }
     */
    public static long gtk_lock_button_get_type() {
        var mh$ = gtk_lock_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_lock_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2863.const$5,"gtk_lock_button_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_lock_button_new(struct _GPermission* permission);
     * }
     */
    public static MemorySegment gtk_lock_button_new(MemorySegment permission) {
        var mh$ = gtk_lock_button_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(permission);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_lock_button_get_permission$MH() {
        return RuntimeHelper.requireNonNull(constants$2864.const$0,"gtk_lock_button_get_permission");
    }
    /**
     * {@snippet :
     * struct _GPermission* gtk_lock_button_get_permission(struct _GtkLockButton* button);
     * }
     */
    public static MemorySegment gtk_lock_button_get_permission(MemorySegment button) {
        var mh$ = gtk_lock_button_get_permission$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_lock_button_set_permission$MH() {
        return RuntimeHelper.requireNonNull(constants$2864.const$1,"gtk_lock_button_set_permission");
    }
    /**
     * {@snippet :
     * void gtk_lock_button_set_permission(struct _GtkLockButton* button, struct _GPermission* permission);
     * }
     */
    public static void gtk_lock_button_set_permission(MemorySegment button, MemorySegment permission) {
        var mh$ = gtk_lock_button_set_permission$MH();
        try {
            mh$.invokeExact(button, permission);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_get_major_version$MH() {
        return RuntimeHelper.requireNonNull(constants$2864.const$3,"gtk_get_major_version");
    }
    /**
     * {@snippet :
     * unsigned int gtk_get_major_version();
     * }
     */
    public static int gtk_get_major_version() {
        var mh$ = gtk_get_major_version$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_get_minor_version$MH() {
        return RuntimeHelper.requireNonNull(constants$2864.const$4,"gtk_get_minor_version");
    }
    /**
     * {@snippet :
     * unsigned int gtk_get_minor_version();
     * }
     */
    public static int gtk_get_minor_version() {
        var mh$ = gtk_get_minor_version$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_get_micro_version$MH() {
        return RuntimeHelper.requireNonNull(constants$2864.const$5,"gtk_get_micro_version");
    }
    /**
     * {@snippet :
     * unsigned int gtk_get_micro_version();
     * }
     */
    public static int gtk_get_micro_version() {
        var mh$ = gtk_get_micro_version$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_get_binary_age$MH() {
        return RuntimeHelper.requireNonNull(constants$2865.const$0,"gtk_get_binary_age");
    }
    /**
     * {@snippet :
     * unsigned int gtk_get_binary_age();
     * }
     */
    public static int gtk_get_binary_age() {
        var mh$ = gtk_get_binary_age$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_get_interface_age$MH() {
        return RuntimeHelper.requireNonNull(constants$2865.const$1,"gtk_get_interface_age");
    }
    /**
     * {@snippet :
     * unsigned int gtk_get_interface_age();
     * }
     */
    public static int gtk_get_interface_age() {
        var mh$ = gtk_get_interface_age$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_check_version$MH() {
        return RuntimeHelper.requireNonNull(constants$2865.const$2,"gtk_check_version");
    }
    /**
     * {@snippet :
     * char* gtk_check_version(unsigned int required_major, unsigned int required_minor, unsigned int required_micro);
     * }
     */
    public static MemorySegment gtk_check_version(int required_major, int required_minor, int required_micro) {
        var mh$ = gtk_check_version$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(required_major, required_minor, required_micro);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_parse_args$MH() {
        return RuntimeHelper.requireNonNull(constants$2865.const$3,"gtk_parse_args");
    }
    /**
     * {@snippet :
     * int gtk_parse_args(int* argc, char*** argv);
     * }
     */
    public static int gtk_parse_args(MemorySegment argc, MemorySegment argv) {
        var mh$ = gtk_parse_args$MH();
        try {
            return (int)mh$.invokeExact(argc, argv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_init$MH() {
        return RuntimeHelper.requireNonNull(constants$2865.const$4,"gtk_init");
    }
    /**
     * {@snippet :
     * void gtk_init(int* argc, char*** argv);
     * }
     */
    public static void gtk_init(MemorySegment argc, MemorySegment argv) {
        var mh$ = gtk_init$MH();
        try {
            mh$.invokeExact(argc, argv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_init_check$MH() {
        return RuntimeHelper.requireNonNull(constants$2865.const$5,"gtk_init_check");
    }
    /**
     * {@snippet :
     * int gtk_init_check(int* argc, char*** argv);
     * }
     */
    public static int gtk_init_check(MemorySegment argc, MemorySegment argv) {
        var mh$ = gtk_init_check$MH();
        try {
            return (int)mh$.invokeExact(argc, argv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_init_with_args$MH() {
        return RuntimeHelper.requireNonNull(constants$2866.const$0,"gtk_init_with_args");
    }
    /**
     * {@snippet :
     * int gtk_init_with_args(int* argc, char*** argv, char* parameter_string, struct _GOptionEntry* entries, char* translation_domain, struct _GError** error);
     * }
     */
    public static int gtk_init_with_args(MemorySegment argc, MemorySegment argv, MemorySegment parameter_string, MemorySegment entries, MemorySegment translation_domain, MemorySegment error) {
        var mh$ = gtk_init_with_args$MH();
        try {
            return (int)mh$.invokeExact(argc, argv, parameter_string, entries, translation_domain, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_get_option_group$MH() {
        return RuntimeHelper.requireNonNull(constants$2866.const$1,"gtk_get_option_group");
    }
    /**
     * {@snippet :
     * struct _GOptionGroup* gtk_get_option_group(int open_default_display);
     * }
     */
    public static MemorySegment gtk_get_option_group(int open_default_display) {
        var mh$ = gtk_get_option_group$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(open_default_display);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_disable_setlocale$MH() {
        return RuntimeHelper.requireNonNull(constants$2866.const$2,"gtk_disable_setlocale");
    }
    /**
     * {@snippet :
     * void gtk_disable_setlocale();
     * }
     */
    public static void gtk_disable_setlocale() {
        var mh$ = gtk_disable_setlocale$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_get_default_language$MH() {
        return RuntimeHelper.requireNonNull(constants$2866.const$3,"gtk_get_default_language");
    }
    /**
     * {@snippet :
     * struct _PangoLanguage* gtk_get_default_language();
     * }
     */
    public static MemorySegment gtk_get_default_language() {
        var mh$ = gtk_get_default_language$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_get_locale_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$2866.const$4,"gtk_get_locale_direction");
    }
    /**
     * {@snippet :
     * enum GtkTextDirection gtk_get_locale_direction();
     * }
     */
    public static int gtk_get_locale_direction() {
        var mh$ = gtk_get_locale_direction$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_events_pending$MH() {
        return RuntimeHelper.requireNonNull(constants$2866.const$5,"gtk_events_pending");
    }
    /**
     * {@snippet :
     * int gtk_events_pending();
     * }
     */
    public static int gtk_events_pending() {
        var mh$ = gtk_events_pending$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_main_do_event$MH() {
        return RuntimeHelper.requireNonNull(constants$2867.const$0,"gtk_main_do_event");
    }
    /**
     * {@snippet :
     * void gtk_main_do_event(union _GdkEvent* event);
     * }
     */
    public static void gtk_main_do_event(MemorySegment event) {
        var mh$ = gtk_main_do_event$MH();
        try {
            mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_main$MH() {
        return RuntimeHelper.requireNonNull(constants$2867.const$1,"gtk_main");
    }
    /**
     * {@snippet :
     * void gtk_main();
     * }
     */
    public static void gtk_main() {
        var mh$ = gtk_main$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_main_level$MH() {
        return RuntimeHelper.requireNonNull(constants$2867.const$2,"gtk_main_level");
    }
    /**
     * {@snippet :
     * unsigned int gtk_main_level();
     * }
     */
    public static int gtk_main_level() {
        var mh$ = gtk_main_level$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_main_quit$MH() {
        return RuntimeHelper.requireNonNull(constants$2867.const$3,"gtk_main_quit");
    }
    /**
     * {@snippet :
     * void gtk_main_quit();
     * }
     */
    public static void gtk_main_quit() {
        var mh$ = gtk_main_quit$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_main_iteration$MH() {
        return RuntimeHelper.requireNonNull(constants$2867.const$4,"gtk_main_iteration");
    }
    /**
     * {@snippet :
     * int gtk_main_iteration();
     * }
     */
    public static int gtk_main_iteration() {
        var mh$ = gtk_main_iteration$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_main_iteration_do$MH() {
        return RuntimeHelper.requireNonNull(constants$2867.const$5,"gtk_main_iteration_do");
    }
    /**
     * {@snippet :
     * int gtk_main_iteration_do(int blocking);
     * }
     */
    public static int gtk_main_iteration_do(int blocking) {
        var mh$ = gtk_main_iteration_do$MH();
        try {
            return (int)mh$.invokeExact(blocking);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_true$MH() {
        return RuntimeHelper.requireNonNull(constants$2868.const$0,"gtk_true");
    }
    /**
     * {@snippet :
     * int gtk_true();
     * }
     */
    public static int gtk_true() {
        var mh$ = gtk_true$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_false$MH() {
        return RuntimeHelper.requireNonNull(constants$2868.const$1,"gtk_false");
    }
    /**
     * {@snippet :
     * int gtk_false();
     * }
     */
    public static int gtk_false() {
        var mh$ = gtk_false$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grab_add$MH() {
        return RuntimeHelper.requireNonNull(constants$2868.const$2,"gtk_grab_add");
    }
    /**
     * {@snippet :
     * void gtk_grab_add(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_grab_add(MemorySegment widget) {
        var mh$ = gtk_grab_add$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grab_get_current$MH() {
        return RuntimeHelper.requireNonNull(constants$2868.const$3,"gtk_grab_get_current");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_grab_get_current();
     * }
     */
    public static MemorySegment gtk_grab_get_current() {
        var mh$ = gtk_grab_get_current$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_grab_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$2868.const$4,"gtk_grab_remove");
    }
    /**
     * {@snippet :
     * void gtk_grab_remove(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_grab_remove(MemorySegment widget) {
        var mh$ = gtk_grab_remove$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_device_grab_add$MH() {
        return RuntimeHelper.requireNonNull(constants$2868.const$5,"gtk_device_grab_add");
    }
    /**
     * {@snippet :
     * void gtk_device_grab_add(struct _GtkWidget* widget, struct _GdkDevice* device, int block_others);
     * }
     */
    public static void gtk_device_grab_add(MemorySegment widget, MemorySegment device, int block_others) {
        var mh$ = gtk_device_grab_add$MH();
        try {
            mh$.invokeExact(widget, device, block_others);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_device_grab_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$2869.const$0,"gtk_device_grab_remove");
    }
    /**
     * {@snippet :
     * void gtk_device_grab_remove(struct _GtkWidget* widget, struct _GdkDevice* device);
     * }
     */
    public static void gtk_device_grab_remove(MemorySegment widget, MemorySegment device) {
        var mh$ = gtk_device_grab_remove$MH();
        try {
            mh$.invokeExact(widget, device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_key_snooper_install$MH() {
        return RuntimeHelper.requireNonNull(constants$2869.const$2,"gtk_key_snooper_install");
    }
    /**
     * {@snippet :
     * unsigned int gtk_key_snooper_install(int (*snooper)(struct _GtkWidget*,struct _GdkEventKey*,void*), void* func_data);
     * }
     */
    public static int gtk_key_snooper_install(MemorySegment snooper, MemorySegment func_data) {
        var mh$ = gtk_key_snooper_install$MH();
        try {
            return (int)mh$.invokeExact(snooper, func_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_key_snooper_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$2869.const$3,"gtk_key_snooper_remove");
    }
    /**
     * {@snippet :
     * void gtk_key_snooper_remove(unsigned int snooper_handler_id);
     * }
     */
    public static void gtk_key_snooper_remove(int snooper_handler_id) {
        var mh$ = gtk_key_snooper_remove$MH();
        try {
            mh$.invokeExact(snooper_handler_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_get_current_event$MH() {
        return RuntimeHelper.requireNonNull(constants$2869.const$4,"gtk_get_current_event");
    }
    /**
     * {@snippet :
     * union _GdkEvent* gtk_get_current_event();
     * }
     */
    public static MemorySegment gtk_get_current_event() {
        var mh$ = gtk_get_current_event$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_get_current_event_time$MH() {
        return RuntimeHelper.requireNonNull(constants$2869.const$5,"gtk_get_current_event_time");
    }
    /**
     * {@snippet :
     * unsigned int gtk_get_current_event_time();
     * }
     */
    public static int gtk_get_current_event_time() {
        var mh$ = gtk_get_current_event_time$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_get_current_event_state$MH() {
        return RuntimeHelper.requireNonNull(constants$2870.const$0,"gtk_get_current_event_state");
    }
    /**
     * {@snippet :
     * int gtk_get_current_event_state(enum GdkModifierType* state);
     * }
     */
    public static int gtk_get_current_event_state(MemorySegment state) {
        var mh$ = gtk_get_current_event_state$MH();
        try {
            return (int)mh$.invokeExact(state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_get_current_event_device$MH() {
        return RuntimeHelper.requireNonNull(constants$2870.const$1,"gtk_get_current_event_device");
    }
    /**
     * {@snippet :
     * struct _GdkDevice* gtk_get_current_event_device();
     * }
     */
    public static MemorySegment gtk_get_current_event_device() {
        var mh$ = gtk_get_current_event_device$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_get_event_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2870.const$2,"gtk_get_event_widget");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_get_event_widget(union _GdkEvent* event);
     * }
     */
    public static MemorySegment gtk_get_event_widget(MemorySegment event) {
        var mh$ = gtk_get_event_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_propagate_event$MH() {
        return RuntimeHelper.requireNonNull(constants$2870.const$3,"gtk_propagate_event");
    }
    /**
     * {@snippet :
     * void gtk_propagate_event(struct _GtkWidget* widget, union _GdkEvent* event);
     * }
     */
    public static void gtk_propagate_event(MemorySegment widget, MemorySegment event) {
        var mh$ = gtk_propagate_event$MH();
        try {
            mh$.invokeExact(widget, event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_bar_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2872.const$3,"gtk_menu_bar_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_menu_bar_get_type();
     * }
     */
    public static long gtk_menu_bar_get_type() {
        var mh$ = gtk_menu_bar_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_bar_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2872.const$4,"gtk_menu_bar_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_menu_bar_new();
     * }
     */
    public static MemorySegment gtk_menu_bar_new() {
        var mh$ = gtk_menu_bar_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_bar_new_from_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2872.const$5,"gtk_menu_bar_new_from_model");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_menu_bar_new_from_model(struct _GMenuModel* model);
     * }
     */
    public static MemorySegment gtk_menu_bar_new_from_model(MemorySegment model) {
        var mh$ = gtk_menu_bar_new_from_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_bar_get_pack_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$2873.const$0,"gtk_menu_bar_get_pack_direction");
    }
    /**
     * {@snippet :
     * enum GtkPackDirection gtk_menu_bar_get_pack_direction(struct _GtkMenuBar* menubar);
     * }
     */
    public static int gtk_menu_bar_get_pack_direction(MemorySegment menubar) {
        var mh$ = gtk_menu_bar_get_pack_direction$MH();
        try {
            return (int)mh$.invokeExact(menubar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_bar_set_pack_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$2873.const$1,"gtk_menu_bar_set_pack_direction");
    }
    /**
     * {@snippet :
     * void gtk_menu_bar_set_pack_direction(struct _GtkMenuBar* menubar, enum GtkPackDirection pack_dir);
     * }
     */
    public static void gtk_menu_bar_set_pack_direction(MemorySegment menubar, int pack_dir) {
        var mh$ = gtk_menu_bar_set_pack_direction$MH();
        try {
            mh$.invokeExact(menubar, pack_dir);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_bar_get_child_pack_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$2873.const$2,"gtk_menu_bar_get_child_pack_direction");
    }
    /**
     * {@snippet :
     * enum GtkPackDirection gtk_menu_bar_get_child_pack_direction(struct _GtkMenuBar* menubar);
     * }
     */
    public static int gtk_menu_bar_get_child_pack_direction(MemorySegment menubar) {
        var mh$ = gtk_menu_bar_get_child_pack_direction$MH();
        try {
            return (int)mh$.invokeExact(menubar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_bar_set_child_pack_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$2873.const$3,"gtk_menu_bar_set_child_pack_direction");
    }
    /**
     * {@snippet :
     * void gtk_menu_bar_set_child_pack_direction(struct _GtkMenuBar* menubar, enum GtkPackDirection child_pack_dir);
     * }
     */
    public static void gtk_menu_bar_set_child_pack_direction(MemorySegment menubar, int child_pack_dir) {
        var mh$ = gtk_menu_bar_set_child_pack_direction$MH();
        try {
            mh$.invokeExact(menubar, child_pack_dir);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gtk_menu_bar_cycle_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$2873.const$4,"_gtk_menu_bar_cycle_focus");
    }
    /**
     * {@snippet :
     * void _gtk_menu_bar_cycle_focus(struct _GtkMenuBar* menubar, enum GtkDirectionType dir);
     * }
     */
    public static void _gtk_menu_bar_cycle_focus(MemorySegment menubar, int dir) {
        var mh$ = _gtk_menu_bar_cycle_focus$MH();
        try {
            mh$.invokeExact(menubar, dir);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gtk_menu_bar_get_viewable_menu_bars$MH() {
        return RuntimeHelper.requireNonNull(constants$2873.const$5,"_gtk_menu_bar_get_viewable_menu_bars");
    }
    /**
     * {@snippet :
     * struct _GList* _gtk_menu_bar_get_viewable_menu_bars(struct _GtkWindow* window);
     * }
     */
    public static MemorySegment _gtk_menu_bar_get_viewable_menu_bars(MemorySegment window) {
        var mh$ = _gtk_menu_bar_get_viewable_menu_bars$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2874.const$5,"gtk_popover_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_popover_get_type();
     * }
     */
    public static long gtk_popover_get_type() {
        var mh$ = gtk_popover_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2875.const$0,"gtk_popover_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_popover_new(struct _GtkWidget* relative_to);
     * }
     */
    public static MemorySegment gtk_popover_new(MemorySegment relative_to) {
        var mh$ = gtk_popover_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(relative_to);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_new_from_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2875.const$1,"gtk_popover_new_from_model");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_popover_new_from_model(struct _GtkWidget* relative_to, struct _GMenuModel* model);
     * }
     */
    public static MemorySegment gtk_popover_new_from_model(MemorySegment relative_to, MemorySegment model) {
        var mh$ = gtk_popover_new_from_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(relative_to, model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_set_relative_to$MH() {
        return RuntimeHelper.requireNonNull(constants$2875.const$2,"gtk_popover_set_relative_to");
    }
    /**
     * {@snippet :
     * void gtk_popover_set_relative_to(struct _GtkPopover* popover, struct _GtkWidget* relative_to);
     * }
     */
    public static void gtk_popover_set_relative_to(MemorySegment popover, MemorySegment relative_to) {
        var mh$ = gtk_popover_set_relative_to$MH();
        try {
            mh$.invokeExact(popover, relative_to);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_get_relative_to$MH() {
        return RuntimeHelper.requireNonNull(constants$2875.const$3,"gtk_popover_get_relative_to");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_popover_get_relative_to(struct _GtkPopover* popover);
     * }
     */
    public static MemorySegment gtk_popover_get_relative_to(MemorySegment popover) {
        var mh$ = gtk_popover_get_relative_to$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(popover);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_set_pointing_to$MH() {
        return RuntimeHelper.requireNonNull(constants$2875.const$4,"gtk_popover_set_pointing_to");
    }
    /**
     * {@snippet :
     * void gtk_popover_set_pointing_to(struct _GtkPopover* popover, struct _cairo_rectangle_int* rect);
     * }
     */
    public static void gtk_popover_set_pointing_to(MemorySegment popover, MemorySegment rect) {
        var mh$ = gtk_popover_set_pointing_to$MH();
        try {
            mh$.invokeExact(popover, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_get_pointing_to$MH() {
        return RuntimeHelper.requireNonNull(constants$2875.const$5,"gtk_popover_get_pointing_to");
    }
    /**
     * {@snippet :
     * int gtk_popover_get_pointing_to(struct _GtkPopover* popover, struct _cairo_rectangle_int* rect);
     * }
     */
    public static int gtk_popover_get_pointing_to(MemorySegment popover, MemorySegment rect) {
        var mh$ = gtk_popover_get_pointing_to$MH();
        try {
            return (int)mh$.invokeExact(popover, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_set_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2876.const$0,"gtk_popover_set_position");
    }
    /**
     * {@snippet :
     * void gtk_popover_set_position(struct _GtkPopover* popover, enum GtkPositionType position);
     * }
     */
    public static void gtk_popover_set_position(MemorySegment popover, int position) {
        var mh$ = gtk_popover_set_position$MH();
        try {
            mh$.invokeExact(popover, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_get_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2876.const$1,"gtk_popover_get_position");
    }
    /**
     * {@snippet :
     * enum GtkPositionType gtk_popover_get_position(struct _GtkPopover* popover);
     * }
     */
    public static int gtk_popover_get_position(MemorySegment popover) {
        var mh$ = gtk_popover_get_position$MH();
        try {
            return (int)mh$.invokeExact(popover);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_set_modal$MH() {
        return RuntimeHelper.requireNonNull(constants$2876.const$2,"gtk_popover_set_modal");
    }
    /**
     * {@snippet :
     * void gtk_popover_set_modal(struct _GtkPopover* popover, int modal);
     * }
     */
    public static void gtk_popover_set_modal(MemorySegment popover, int modal) {
        var mh$ = gtk_popover_set_modal$MH();
        try {
            mh$.invokeExact(popover, modal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_get_modal$MH() {
        return RuntimeHelper.requireNonNull(constants$2876.const$3,"gtk_popover_get_modal");
    }
    /**
     * {@snippet :
     * int gtk_popover_get_modal(struct _GtkPopover* popover);
     * }
     */
    public static int gtk_popover_get_modal(MemorySegment popover) {
        var mh$ = gtk_popover_get_modal$MH();
        try {
            return (int)mh$.invokeExact(popover);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_bind_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2876.const$4,"gtk_popover_bind_model");
    }
    /**
     * {@snippet :
     * void gtk_popover_bind_model(struct _GtkPopover* popover, struct _GMenuModel* model, char* action_namespace);
     * }
     */
    public static void gtk_popover_bind_model(MemorySegment popover, MemorySegment model, MemorySegment action_namespace) {
        var mh$ = gtk_popover_bind_model$MH();
        try {
            mh$.invokeExact(popover, model, action_namespace);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_set_transitions_enabled$MH() {
        return RuntimeHelper.requireNonNull(constants$2876.const$5,"gtk_popover_set_transitions_enabled");
    }
    /**
     * {@snippet :
     * void gtk_popover_set_transitions_enabled(struct _GtkPopover* popover, int transitions_enabled);
     * }
     */
    public static void gtk_popover_set_transitions_enabled(MemorySegment popover, int transitions_enabled) {
        var mh$ = gtk_popover_set_transitions_enabled$MH();
        try {
            mh$.invokeExact(popover, transitions_enabled);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_get_transitions_enabled$MH() {
        return RuntimeHelper.requireNonNull(constants$2877.const$0,"gtk_popover_get_transitions_enabled");
    }
    /**
     * {@snippet :
     * int gtk_popover_get_transitions_enabled(struct _GtkPopover* popover);
     * }
     */
    public static int gtk_popover_get_transitions_enabled(MemorySegment popover) {
        var mh$ = gtk_popover_get_transitions_enabled$MH();
        try {
            return (int)mh$.invokeExact(popover);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_set_default_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2877.const$1,"gtk_popover_set_default_widget");
    }
    /**
     * {@snippet :
     * void gtk_popover_set_default_widget(struct _GtkPopover* popover, struct _GtkWidget* widget);
     * }
     */
    public static void gtk_popover_set_default_widget(MemorySegment popover, MemorySegment widget) {
        var mh$ = gtk_popover_set_default_widget$MH();
        try {
            mh$.invokeExact(popover, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_get_default_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2877.const$2,"gtk_popover_get_default_widget");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_popover_get_default_widget(struct _GtkPopover* popover);
     * }
     */
    public static MemorySegment gtk_popover_get_default_widget(MemorySegment popover) {
        var mh$ = gtk_popover_get_default_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(popover);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_set_constrain_to$MH() {
        return RuntimeHelper.requireNonNull(constants$2877.const$3,"gtk_popover_set_constrain_to");
    }
    /**
     * {@snippet :
     * void gtk_popover_set_constrain_to(struct _GtkPopover* popover, enum GtkPopoverConstraint constraint);
     * }
     */
    public static void gtk_popover_set_constrain_to(MemorySegment popover, int constraint) {
        var mh$ = gtk_popover_set_constrain_to$MH();
        try {
            mh$.invokeExact(popover, constraint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_get_constrain_to$MH() {
        return RuntimeHelper.requireNonNull(constants$2877.const$4,"gtk_popover_get_constrain_to");
    }
    /**
     * {@snippet :
     * enum GtkPopoverConstraint gtk_popover_get_constrain_to(struct _GtkPopover* popover);
     * }
     */
    public static int gtk_popover_get_constrain_to(MemorySegment popover) {
        var mh$ = gtk_popover_get_constrain_to$MH();
        try {
            return (int)mh$.invokeExact(popover);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_popup$MH() {
        return RuntimeHelper.requireNonNull(constants$2877.const$5,"gtk_popover_popup");
    }
    /**
     * {@snippet :
     * void gtk_popover_popup(struct _GtkPopover* popover);
     * }
     */
    public static void gtk_popover_popup(MemorySegment popover) {
        var mh$ = gtk_popover_popup$MH();
        try {
            mh$.invokeExact(popover);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_popdown$MH() {
        return RuntimeHelper.requireNonNull(constants$2878.const$0,"gtk_popover_popdown");
    }
    /**
     * {@snippet :
     * void gtk_popover_popdown(struct _GtkPopover* popover);
     * }
     */
    public static void gtk_popover_popdown(MemorySegment popover) {
        var mh$ = gtk_popover_popdown$MH();
        try {
            mh$.invokeExact(popover);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2880.const$0,"gtk_menu_button_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_menu_button_get_type();
     * }
     */
    public static long gtk_menu_button_get_type() {
        var mh$ = gtk_menu_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2880.const$1,"gtk_menu_button_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_menu_button_new();
     * }
     */
    public static MemorySegment gtk_menu_button_new() {
        var mh$ = gtk_menu_button_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_set_popup$MH() {
        return RuntimeHelper.requireNonNull(constants$2880.const$2,"gtk_menu_button_set_popup");
    }
    /**
     * {@snippet :
     * void gtk_menu_button_set_popup(struct _GtkMenuButton* menu_button, struct _GtkWidget* menu);
     * }
     */
    public static void gtk_menu_button_set_popup(MemorySegment menu_button, MemorySegment menu) {
        var mh$ = gtk_menu_button_set_popup$MH();
        try {
            mh$.invokeExact(menu_button, menu);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_get_popup$MH() {
        return RuntimeHelper.requireNonNull(constants$2880.const$3,"gtk_menu_button_get_popup");
    }
    /**
     * {@snippet :
     * struct _GtkMenu* gtk_menu_button_get_popup(struct _GtkMenuButton* menu_button);
     * }
     */
    public static MemorySegment gtk_menu_button_get_popup(MemorySegment menu_button) {
        var mh$ = gtk_menu_button_get_popup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(menu_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_set_popover$MH() {
        return RuntimeHelper.requireNonNull(constants$2880.const$4,"gtk_menu_button_set_popover");
    }
    /**
     * {@snippet :
     * void gtk_menu_button_set_popover(struct _GtkMenuButton* menu_button, struct _GtkWidget* popover);
     * }
     */
    public static void gtk_menu_button_set_popover(MemorySegment menu_button, MemorySegment popover) {
        var mh$ = gtk_menu_button_set_popover$MH();
        try {
            mh$.invokeExact(menu_button, popover);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_get_popover$MH() {
        return RuntimeHelper.requireNonNull(constants$2880.const$5,"gtk_menu_button_get_popover");
    }
    /**
     * {@snippet :
     * struct _GtkPopover* gtk_menu_button_get_popover(struct _GtkMenuButton* menu_button);
     * }
     */
    public static MemorySegment gtk_menu_button_get_popover(MemorySegment menu_button) {
        var mh$ = gtk_menu_button_get_popover$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(menu_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_set_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$2881.const$0,"gtk_menu_button_set_direction");
    }
    /**
     * {@snippet :
     * void gtk_menu_button_set_direction(struct _GtkMenuButton* menu_button, enum GtkArrowType direction);
     * }
     */
    public static void gtk_menu_button_set_direction(MemorySegment menu_button, int direction) {
        var mh$ = gtk_menu_button_set_direction$MH();
        try {
            mh$.invokeExact(menu_button, direction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_get_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$2881.const$1,"gtk_menu_button_get_direction");
    }
    /**
     * {@snippet :
     * enum GtkArrowType gtk_menu_button_get_direction(struct _GtkMenuButton* menu_button);
     * }
     */
    public static int gtk_menu_button_get_direction(MemorySegment menu_button) {
        var mh$ = gtk_menu_button_get_direction$MH();
        try {
            return (int)mh$.invokeExact(menu_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_set_menu_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2881.const$2,"gtk_menu_button_set_menu_model");
    }
    /**
     * {@snippet :
     * void gtk_menu_button_set_menu_model(struct _GtkMenuButton* menu_button, struct _GMenuModel* menu_model);
     * }
     */
    public static void gtk_menu_button_set_menu_model(MemorySegment menu_button, MemorySegment menu_model) {
        var mh$ = gtk_menu_button_set_menu_model$MH();
        try {
            mh$.invokeExact(menu_button, menu_model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_get_menu_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2881.const$3,"gtk_menu_button_get_menu_model");
    }
    /**
     * {@snippet :
     * struct _GMenuModel* gtk_menu_button_get_menu_model(struct _GtkMenuButton* menu_button);
     * }
     */
    public static MemorySegment gtk_menu_button_get_menu_model(MemorySegment menu_button) {
        var mh$ = gtk_menu_button_get_menu_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(menu_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_set_align_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2881.const$4,"gtk_menu_button_set_align_widget");
    }
    /**
     * {@snippet :
     * void gtk_menu_button_set_align_widget(struct _GtkMenuButton* menu_button, struct _GtkWidget* align_widget);
     * }
     */
    public static void gtk_menu_button_set_align_widget(MemorySegment menu_button, MemorySegment align_widget) {
        var mh$ = gtk_menu_button_set_align_widget$MH();
        try {
            mh$.invokeExact(menu_button, align_widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_get_align_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2881.const$5,"gtk_menu_button_get_align_widget");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_menu_button_get_align_widget(struct _GtkMenuButton* menu_button);
     * }
     */
    public static MemorySegment gtk_menu_button_get_align_widget(MemorySegment menu_button) {
        var mh$ = gtk_menu_button_get_align_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(menu_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_set_use_popover$MH() {
        return RuntimeHelper.requireNonNull(constants$2882.const$0,"gtk_menu_button_set_use_popover");
    }
    /**
     * {@snippet :
     * void gtk_menu_button_set_use_popover(struct _GtkMenuButton* menu_button, int use_popover);
     * }
     */
    public static void gtk_menu_button_set_use_popover(MemorySegment menu_button, int use_popover) {
        var mh$ = gtk_menu_button_set_use_popover$MH();
        try {
            mh$.invokeExact(menu_button, use_popover);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_button_get_use_popover$MH() {
        return RuntimeHelper.requireNonNull(constants$2882.const$1,"gtk_menu_button_get_use_popover");
    }
    /**
     * {@snippet :
     * int gtk_menu_button_get_use_popover(struct _GtkMenuButton* menu_button);
     * }
     */
    public static int gtk_menu_button_get_use_popover(MemorySegment menu_button) {
        var mh$ = gtk_menu_button_get_use_popover$MH();
        try {
            return (int)mh$.invokeExact(menu_button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_size_group_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2884.const$1,"gtk_size_group_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_size_group_get_type();
     * }
     */
    public static long gtk_size_group_get_type() {
        var mh$ = gtk_size_group_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_size_group_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2884.const$2,"gtk_size_group_new");
    }
    /**
     * {@snippet :
     * struct _GtkSizeGroup* gtk_size_group_new(enum GtkSizeGroupMode mode);
     * }
     */
    public static MemorySegment gtk_size_group_new(int mode) {
        var mh$ = gtk_size_group_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_size_group_set_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2884.const$3,"gtk_size_group_set_mode");
    }
    /**
     * {@snippet :
     * void gtk_size_group_set_mode(struct _GtkSizeGroup* size_group, enum GtkSizeGroupMode mode);
     * }
     */
    public static void gtk_size_group_set_mode(MemorySegment size_group, int mode) {
        var mh$ = gtk_size_group_set_mode$MH();
        try {
            mh$.invokeExact(size_group, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_size_group_get_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2884.const$4,"gtk_size_group_get_mode");
    }
    /**
     * {@snippet :
     * enum GtkSizeGroupMode gtk_size_group_get_mode(struct _GtkSizeGroup* size_group);
     * }
     */
    public static int gtk_size_group_get_mode(MemorySegment size_group) {
        var mh$ = gtk_size_group_get_mode$MH();
        try {
            return (int)mh$.invokeExact(size_group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_size_group_set_ignore_hidden$MH() {
        return RuntimeHelper.requireNonNull(constants$2884.const$5,"gtk_size_group_set_ignore_hidden");
    }
    /**
     * {@snippet :
     * void gtk_size_group_set_ignore_hidden(struct _GtkSizeGroup* size_group, int ignore_hidden);
     * }
     */
    public static void gtk_size_group_set_ignore_hidden(MemorySegment size_group, int ignore_hidden) {
        var mh$ = gtk_size_group_set_ignore_hidden$MH();
        try {
            mh$.invokeExact(size_group, ignore_hidden);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_size_group_get_ignore_hidden$MH() {
        return RuntimeHelper.requireNonNull(constants$2885.const$0,"gtk_size_group_get_ignore_hidden");
    }
    /**
     * {@snippet :
     * int gtk_size_group_get_ignore_hidden(struct _GtkSizeGroup* size_group);
     * }
     */
    public static int gtk_size_group_get_ignore_hidden(MemorySegment size_group) {
        var mh$ = gtk_size_group_get_ignore_hidden$MH();
        try {
            return (int)mh$.invokeExact(size_group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_size_group_add_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2885.const$1,"gtk_size_group_add_widget");
    }
    /**
     * {@snippet :
     * void gtk_size_group_add_widget(struct _GtkSizeGroup* size_group, struct _GtkWidget* widget);
     * }
     */
    public static void gtk_size_group_add_widget(MemorySegment size_group, MemorySegment widget) {
        var mh$ = gtk_size_group_add_widget$MH();
        try {
            mh$.invokeExact(size_group, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_size_group_remove_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2885.const$2,"gtk_size_group_remove_widget");
    }
    /**
     * {@snippet :
     * void gtk_size_group_remove_widget(struct _GtkSizeGroup* size_group, struct _GtkWidget* widget);
     * }
     */
    public static void gtk_size_group_remove_widget(MemorySegment size_group, MemorySegment widget) {
        var mh$ = gtk_size_group_remove_widget$MH();
        try {
            mh$.invokeExact(size_group, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_size_group_get_widgets$MH() {
        return RuntimeHelper.requireNonNull(constants$2885.const$3,"gtk_size_group_get_widgets");
    }
    /**
     * {@snippet :
     * struct _GSList* gtk_size_group_get_widgets(struct _GtkSizeGroup* size_group);
     * }
     */
    public static MemorySegment gtk_size_group_get_widgets(MemorySegment size_group) {
        var mh$ = gtk_size_group_get_widgets$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(size_group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2888.const$1,"gtk_tool_item_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_tool_item_get_type();
     * }
     */
    public static long gtk_tool_item_get_type() {
        var mh$ = gtk_tool_item_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2888.const$2,"gtk_tool_item_new");
    }
    /**
     * {@snippet :
     * struct _GtkToolItem* gtk_tool_item_new();
     * }
     */
    public static MemorySegment gtk_tool_item_new() {
        var mh$ = gtk_tool_item_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_set_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$2888.const$3,"gtk_tool_item_set_homogeneous");
    }
    /**
     * {@snippet :
     * void gtk_tool_item_set_homogeneous(struct _GtkToolItem* tool_item, int homogeneous);
     * }
     */
    public static void gtk_tool_item_set_homogeneous(MemorySegment tool_item, int homogeneous) {
        var mh$ = gtk_tool_item_set_homogeneous$MH();
        try {
            mh$.invokeExact(tool_item, homogeneous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_get_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$2888.const$4,"gtk_tool_item_get_homogeneous");
    }
    /**
     * {@snippet :
     * int gtk_tool_item_get_homogeneous(struct _GtkToolItem* tool_item);
     * }
     */
    public static int gtk_tool_item_get_homogeneous(MemorySegment tool_item) {
        var mh$ = gtk_tool_item_get_homogeneous$MH();
        try {
            return (int)mh$.invokeExact(tool_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_set_expand$MH() {
        return RuntimeHelper.requireNonNull(constants$2888.const$5,"gtk_tool_item_set_expand");
    }
    /**
     * {@snippet :
     * void gtk_tool_item_set_expand(struct _GtkToolItem* tool_item, int expand);
     * }
     */
    public static void gtk_tool_item_set_expand(MemorySegment tool_item, int expand) {
        var mh$ = gtk_tool_item_set_expand$MH();
        try {
            mh$.invokeExact(tool_item, expand);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_get_expand$MH() {
        return RuntimeHelper.requireNonNull(constants$2889.const$0,"gtk_tool_item_get_expand");
    }
    /**
     * {@snippet :
     * int gtk_tool_item_get_expand(struct _GtkToolItem* tool_item);
     * }
     */
    public static int gtk_tool_item_get_expand(MemorySegment tool_item) {
        var mh$ = gtk_tool_item_get_expand$MH();
        try {
            return (int)mh$.invokeExact(tool_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_set_tooltip_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2889.const$1,"gtk_tool_item_set_tooltip_text");
    }
    /**
     * {@snippet :
     * void gtk_tool_item_set_tooltip_text(struct _GtkToolItem* tool_item, char* text);
     * }
     */
    public static void gtk_tool_item_set_tooltip_text(MemorySegment tool_item, MemorySegment text) {
        var mh$ = gtk_tool_item_set_tooltip_text$MH();
        try {
            mh$.invokeExact(tool_item, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_set_tooltip_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$2889.const$2,"gtk_tool_item_set_tooltip_markup");
    }
    /**
     * {@snippet :
     * void gtk_tool_item_set_tooltip_markup(struct _GtkToolItem* tool_item, char* markup);
     * }
     */
    public static void gtk_tool_item_set_tooltip_markup(MemorySegment tool_item, MemorySegment markup) {
        var mh$ = gtk_tool_item_set_tooltip_markup$MH();
        try {
            mh$.invokeExact(tool_item, markup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_set_use_drag_window$MH() {
        return RuntimeHelper.requireNonNull(constants$2889.const$3,"gtk_tool_item_set_use_drag_window");
    }
    /**
     * {@snippet :
     * void gtk_tool_item_set_use_drag_window(struct _GtkToolItem* tool_item, int use_drag_window);
     * }
     */
    public static void gtk_tool_item_set_use_drag_window(MemorySegment tool_item, int use_drag_window) {
        var mh$ = gtk_tool_item_set_use_drag_window$MH();
        try {
            mh$.invokeExact(tool_item, use_drag_window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_get_use_drag_window$MH() {
        return RuntimeHelper.requireNonNull(constants$2889.const$4,"gtk_tool_item_get_use_drag_window");
    }
    /**
     * {@snippet :
     * int gtk_tool_item_get_use_drag_window(struct _GtkToolItem* tool_item);
     * }
     */
    public static int gtk_tool_item_get_use_drag_window(MemorySegment tool_item) {
        var mh$ = gtk_tool_item_get_use_drag_window$MH();
        try {
            return (int)mh$.invokeExact(tool_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_set_visible_horizontal$MH() {
        return RuntimeHelper.requireNonNull(constants$2889.const$5,"gtk_tool_item_set_visible_horizontal");
    }
    /**
     * {@snippet :
     * void gtk_tool_item_set_visible_horizontal(struct _GtkToolItem* tool_item, int visible_horizontal);
     * }
     */
    public static void gtk_tool_item_set_visible_horizontal(MemorySegment tool_item, int visible_horizontal) {
        var mh$ = gtk_tool_item_set_visible_horizontal$MH();
        try {
            mh$.invokeExact(tool_item, visible_horizontal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_get_visible_horizontal$MH() {
        return RuntimeHelper.requireNonNull(constants$2890.const$0,"gtk_tool_item_get_visible_horizontal");
    }
    /**
     * {@snippet :
     * int gtk_tool_item_get_visible_horizontal(struct _GtkToolItem* tool_item);
     * }
     */
    public static int gtk_tool_item_get_visible_horizontal(MemorySegment tool_item) {
        var mh$ = gtk_tool_item_get_visible_horizontal$MH();
        try {
            return (int)mh$.invokeExact(tool_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_set_visible_vertical$MH() {
        return RuntimeHelper.requireNonNull(constants$2890.const$1,"gtk_tool_item_set_visible_vertical");
    }
    /**
     * {@snippet :
     * void gtk_tool_item_set_visible_vertical(struct _GtkToolItem* tool_item, int visible_vertical);
     * }
     */
    public static void gtk_tool_item_set_visible_vertical(MemorySegment tool_item, int visible_vertical) {
        var mh$ = gtk_tool_item_set_visible_vertical$MH();
        try {
            mh$.invokeExact(tool_item, visible_vertical);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_get_visible_vertical$MH() {
        return RuntimeHelper.requireNonNull(constants$2890.const$2,"gtk_tool_item_get_visible_vertical");
    }
    /**
     * {@snippet :
     * int gtk_tool_item_get_visible_vertical(struct _GtkToolItem* tool_item);
     * }
     */
    public static int gtk_tool_item_get_visible_vertical(MemorySegment tool_item) {
        var mh$ = gtk_tool_item_get_visible_vertical$MH();
        try {
            return (int)mh$.invokeExact(tool_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_get_is_important$MH() {
        return RuntimeHelper.requireNonNull(constants$2890.const$3,"gtk_tool_item_get_is_important");
    }
    /**
     * {@snippet :
     * int gtk_tool_item_get_is_important(struct _GtkToolItem* tool_item);
     * }
     */
    public static int gtk_tool_item_get_is_important(MemorySegment tool_item) {
        var mh$ = gtk_tool_item_get_is_important$MH();
        try {
            return (int)mh$.invokeExact(tool_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_set_is_important$MH() {
        return RuntimeHelper.requireNonNull(constants$2890.const$4,"gtk_tool_item_set_is_important");
    }
    /**
     * {@snippet :
     * void gtk_tool_item_set_is_important(struct _GtkToolItem* tool_item, int is_important);
     * }
     */
    public static void gtk_tool_item_set_is_important(MemorySegment tool_item, int is_important) {
        var mh$ = gtk_tool_item_set_is_important$MH();
        try {
            mh$.invokeExact(tool_item, is_important);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_get_ellipsize_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2890.const$5,"gtk_tool_item_get_ellipsize_mode");
    }
    /**
     * {@snippet :
     * enum PangoEllipsizeMode gtk_tool_item_get_ellipsize_mode(struct _GtkToolItem* tool_item);
     * }
     */
    public static int gtk_tool_item_get_ellipsize_mode(MemorySegment tool_item) {
        var mh$ = gtk_tool_item_get_ellipsize_mode$MH();
        try {
            return (int)mh$.invokeExact(tool_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_get_icon_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2891.const$0,"gtk_tool_item_get_icon_size");
    }
    /**
     * {@snippet :
     * enum GtkIconSize gtk_tool_item_get_icon_size(struct _GtkToolItem* tool_item);
     * }
     */
    public static int gtk_tool_item_get_icon_size(MemorySegment tool_item) {
        var mh$ = gtk_tool_item_get_icon_size$MH();
        try {
            return (int)mh$.invokeExact(tool_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_get_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$2891.const$1,"gtk_tool_item_get_orientation");
    }
    /**
     * {@snippet :
     * enum GtkOrientation gtk_tool_item_get_orientation(struct _GtkToolItem* tool_item);
     * }
     */
    public static int gtk_tool_item_get_orientation(MemorySegment tool_item) {
        var mh$ = gtk_tool_item_get_orientation$MH();
        try {
            return (int)mh$.invokeExact(tool_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_get_toolbar_style$MH() {
        return RuntimeHelper.requireNonNull(constants$2891.const$2,"gtk_tool_item_get_toolbar_style");
    }
    /**
     * {@snippet :
     * enum GtkToolbarStyle gtk_tool_item_get_toolbar_style(struct _GtkToolItem* tool_item);
     * }
     */
    public static int gtk_tool_item_get_toolbar_style(MemorySegment tool_item) {
        var mh$ = gtk_tool_item_get_toolbar_style$MH();
        try {
            return (int)mh$.invokeExact(tool_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_get_relief_style$MH() {
        return RuntimeHelper.requireNonNull(constants$2891.const$3,"gtk_tool_item_get_relief_style");
    }
    /**
     * {@snippet :
     * enum GtkReliefStyle gtk_tool_item_get_relief_style(struct _GtkToolItem* tool_item);
     * }
     */
    public static int gtk_tool_item_get_relief_style(MemorySegment tool_item) {
        var mh$ = gtk_tool_item_get_relief_style$MH();
        try {
            return (int)mh$.invokeExact(tool_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_get_text_alignment$MH() {
        return RuntimeHelper.requireNonNull(constants$2891.const$4,"gtk_tool_item_get_text_alignment");
    }
    /**
     * {@snippet :
     * float gtk_tool_item_get_text_alignment(struct _GtkToolItem* tool_item);
     * }
     */
    public static float gtk_tool_item_get_text_alignment(MemorySegment tool_item) {
        var mh$ = gtk_tool_item_get_text_alignment$MH();
        try {
            return (float)mh$.invokeExact(tool_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_get_text_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$2891.const$5,"gtk_tool_item_get_text_orientation");
    }
    /**
     * {@snippet :
     * enum GtkOrientation gtk_tool_item_get_text_orientation(struct _GtkToolItem* tool_item);
     * }
     */
    public static int gtk_tool_item_get_text_orientation(MemorySegment tool_item) {
        var mh$ = gtk_tool_item_get_text_orientation$MH();
        try {
            return (int)mh$.invokeExact(tool_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_get_text_size_group$MH() {
        return RuntimeHelper.requireNonNull(constants$2892.const$0,"gtk_tool_item_get_text_size_group");
    }
    /**
     * {@snippet :
     * struct _GtkSizeGroup* gtk_tool_item_get_text_size_group(struct _GtkToolItem* tool_item);
     * }
     */
    public static MemorySegment gtk_tool_item_get_text_size_group(MemorySegment tool_item) {
        var mh$ = gtk_tool_item_get_text_size_group$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tool_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_retrieve_proxy_menu_item$MH() {
        return RuntimeHelper.requireNonNull(constants$2892.const$1,"gtk_tool_item_retrieve_proxy_menu_item");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_tool_item_retrieve_proxy_menu_item(struct _GtkToolItem* tool_item);
     * }
     */
    public static MemorySegment gtk_tool_item_retrieve_proxy_menu_item(MemorySegment tool_item) {
        var mh$ = gtk_tool_item_retrieve_proxy_menu_item$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tool_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_get_proxy_menu_item$MH() {
        return RuntimeHelper.requireNonNull(constants$2892.const$2,"gtk_tool_item_get_proxy_menu_item");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_tool_item_get_proxy_menu_item(struct _GtkToolItem* tool_item, char* menu_item_id);
     * }
     */
    public static MemorySegment gtk_tool_item_get_proxy_menu_item(MemorySegment tool_item, MemorySegment menu_item_id) {
        var mh$ = gtk_tool_item_get_proxy_menu_item$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tool_item, menu_item_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_set_proxy_menu_item$MH() {
        return RuntimeHelper.requireNonNull(constants$2892.const$3,"gtk_tool_item_set_proxy_menu_item");
    }
    /**
     * {@snippet :
     * void gtk_tool_item_set_proxy_menu_item(struct _GtkToolItem* tool_item, char* menu_item_id, struct _GtkWidget* menu_item);
     * }
     */
    public static void gtk_tool_item_set_proxy_menu_item(MemorySegment tool_item, MemorySegment menu_item_id, MemorySegment menu_item) {
        var mh$ = gtk_tool_item_set_proxy_menu_item$MH();
        try {
            mh$.invokeExact(tool_item, menu_item_id, menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_rebuild_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$2892.const$4,"gtk_tool_item_rebuild_menu");
    }
    /**
     * {@snippet :
     * void gtk_tool_item_rebuild_menu(struct _GtkToolItem* tool_item);
     * }
     */
    public static void gtk_tool_item_rebuild_menu(MemorySegment tool_item) {
        var mh$ = gtk_tool_item_rebuild_menu$MH();
        try {
            mh$.invokeExact(tool_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_item_toolbar_reconfigured$MH() {
        return RuntimeHelper.requireNonNull(constants$2892.const$5,"gtk_tool_item_toolbar_reconfigured");
    }
    /**
     * {@snippet :
     * void gtk_tool_item_toolbar_reconfigured(struct _GtkToolItem* tool_item);
     * }
     */
    public static void gtk_tool_item_toolbar_reconfigured(MemorySegment tool_item) {
        var mh$ = gtk_tool_item_toolbar_reconfigured$MH();
        try {
            mh$.invokeExact(tool_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gtk_tool_item_create_menu_proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$2893.const$0,"_gtk_tool_item_create_menu_proxy");
    }
    /**
     * {@snippet :
     * int _gtk_tool_item_create_menu_proxy(struct _GtkToolItem* tool_item);
     * }
     */
    public static int _gtk_tool_item_create_menu_proxy(MemorySegment tool_item) {
        var mh$ = _gtk_tool_item_create_menu_proxy$MH();
        try {
            return (int)mh$.invokeExact(tool_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2895.const$3,"gtk_tool_button_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_tool_button_get_type();
     * }
     */
    public static long gtk_tool_button_get_type() {
        var mh$ = gtk_tool_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2895.const$4,"gtk_tool_button_new");
    }
    /**
     * {@snippet :
     * struct _GtkToolItem* gtk_tool_button_new(struct _GtkWidget* icon_widget, char* label);
     * }
     */
    public static MemorySegment gtk_tool_button_new(MemorySegment icon_widget, MemorySegment label) {
        var mh$ = gtk_tool_button_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_widget, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_button_new_from_stock$MH() {
        return RuntimeHelper.requireNonNull(constants$2895.const$5,"gtk_tool_button_new_from_stock");
    }
    /**
     * {@snippet :
     * struct _GtkToolItem* gtk_tool_button_new_from_stock(char* stock_id);
     * }
     */
    public static MemorySegment gtk_tool_button_new_from_stock(MemorySegment stock_id) {
        var mh$ = gtk_tool_button_new_from_stock$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stock_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_button_set_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2896.const$0,"gtk_tool_button_set_label");
    }
    /**
     * {@snippet :
     * void gtk_tool_button_set_label(struct _GtkToolButton* button, char* label);
     * }
     */
    public static void gtk_tool_button_set_label(MemorySegment button, MemorySegment label) {
        var mh$ = gtk_tool_button_set_label$MH();
        try {
            mh$.invokeExact(button, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_button_get_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2896.const$1,"gtk_tool_button_get_label");
    }
    /**
     * {@snippet :
     * char* gtk_tool_button_get_label(struct _GtkToolButton* button);
     * }
     */
    public static MemorySegment gtk_tool_button_get_label(MemorySegment button) {
        var mh$ = gtk_tool_button_get_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_button_set_use_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$2896.const$2,"gtk_tool_button_set_use_underline");
    }
    /**
     * {@snippet :
     * void gtk_tool_button_set_use_underline(struct _GtkToolButton* button, int use_underline);
     * }
     */
    public static void gtk_tool_button_set_use_underline(MemorySegment button, int use_underline) {
        var mh$ = gtk_tool_button_set_use_underline$MH();
        try {
            mh$.invokeExact(button, use_underline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_button_get_use_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$2896.const$3,"gtk_tool_button_get_use_underline");
    }
    /**
     * {@snippet :
     * int gtk_tool_button_get_use_underline(struct _GtkToolButton* button);
     * }
     */
    public static int gtk_tool_button_get_use_underline(MemorySegment button) {
        var mh$ = gtk_tool_button_get_use_underline$MH();
        try {
            return (int)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_button_set_stock_id$MH() {
        return RuntimeHelper.requireNonNull(constants$2896.const$4,"gtk_tool_button_set_stock_id");
    }
    /**
     * {@snippet :
     * void gtk_tool_button_set_stock_id(struct _GtkToolButton* button, char* stock_id);
     * }
     */
    public static void gtk_tool_button_set_stock_id(MemorySegment button, MemorySegment stock_id) {
        var mh$ = gtk_tool_button_set_stock_id$MH();
        try {
            mh$.invokeExact(button, stock_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_button_get_stock_id$MH() {
        return RuntimeHelper.requireNonNull(constants$2896.const$5,"gtk_tool_button_get_stock_id");
    }
    /**
     * {@snippet :
     * char* gtk_tool_button_get_stock_id(struct _GtkToolButton* button);
     * }
     */
    public static MemorySegment gtk_tool_button_get_stock_id(MemorySegment button) {
        var mh$ = gtk_tool_button_get_stock_id$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_button_set_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2897.const$0,"gtk_tool_button_set_icon_name");
    }
    /**
     * {@snippet :
     * void gtk_tool_button_set_icon_name(struct _GtkToolButton* button, char* icon_name);
     * }
     */
    public static void gtk_tool_button_set_icon_name(MemorySegment button, MemorySegment icon_name) {
        var mh$ = gtk_tool_button_set_icon_name$MH();
        try {
            mh$.invokeExact(button, icon_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_button_get_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2897.const$1,"gtk_tool_button_get_icon_name");
    }
    /**
     * {@snippet :
     * char* gtk_tool_button_get_icon_name(struct _GtkToolButton* button);
     * }
     */
    public static MemorySegment gtk_tool_button_get_icon_name(MemorySegment button) {
        var mh$ = gtk_tool_button_get_icon_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_button_set_icon_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2897.const$2,"gtk_tool_button_set_icon_widget");
    }
    /**
     * {@snippet :
     * void gtk_tool_button_set_icon_widget(struct _GtkToolButton* button, struct _GtkWidget* icon_widget);
     * }
     */
    public static void gtk_tool_button_set_icon_widget(MemorySegment button, MemorySegment icon_widget) {
        var mh$ = gtk_tool_button_set_icon_widget$MH();
        try {
            mh$.invokeExact(button, icon_widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_button_get_icon_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2897.const$3,"gtk_tool_button_get_icon_widget");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_tool_button_get_icon_widget(struct _GtkToolButton* button);
     * }
     */
    public static MemorySegment gtk_tool_button_get_icon_widget(MemorySegment button) {
        var mh$ = gtk_tool_button_get_icon_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_button_set_label_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2897.const$4,"gtk_tool_button_set_label_widget");
    }
    /**
     * {@snippet :
     * void gtk_tool_button_set_label_widget(struct _GtkToolButton* button, struct _GtkWidget* label_widget);
     * }
     */
    public static void gtk_tool_button_set_label_widget(MemorySegment button, MemorySegment label_widget) {
        var mh$ = gtk_tool_button_set_label_widget$MH();
        try {
            mh$.invokeExact(button, label_widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tool_button_get_label_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2897.const$5,"gtk_tool_button_get_label_widget");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_tool_button_get_label_widget(struct _GtkToolButton* button);
     * }
     */
    public static MemorySegment gtk_tool_button_get_label_widget(MemorySegment button) {
        var mh$ = gtk_tool_button_get_label_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gtk_tool_button_get_button$MH() {
        return RuntimeHelper.requireNonNull(constants$2898.const$0,"_gtk_tool_button_get_button");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* _gtk_tool_button_get_button(struct _GtkToolButton* button);
     * }
     */
    public static MemorySegment _gtk_tool_button_get_button(MemorySegment button) {
        var mh$ = _gtk_tool_button_get_button$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_tool_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2900.const$2,"gtk_menu_tool_button_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_menu_tool_button_get_type();
     * }
     */
    public static long gtk_menu_tool_button_get_type() {
        var mh$ = gtk_menu_tool_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_tool_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2900.const$3,"gtk_menu_tool_button_new");
    }
    /**
     * {@snippet :
     * struct _GtkToolItem* gtk_menu_tool_button_new(struct _GtkWidget* icon_widget, char* label);
     * }
     */
    public static MemorySegment gtk_menu_tool_button_new(MemorySegment icon_widget, MemorySegment label) {
        var mh$ = gtk_menu_tool_button_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(icon_widget, label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_tool_button_new_from_stock$MH() {
        return RuntimeHelper.requireNonNull(constants$2900.const$4,"gtk_menu_tool_button_new_from_stock");
    }
    /**
     * {@snippet :
     * struct _GtkToolItem* gtk_menu_tool_button_new_from_stock(char* stock_id);
     * }
     */
    public static MemorySegment gtk_menu_tool_button_new_from_stock(MemorySegment stock_id) {
        var mh$ = gtk_menu_tool_button_new_from_stock$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(stock_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_tool_button_set_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$2900.const$5,"gtk_menu_tool_button_set_menu");
    }
    /**
     * {@snippet :
     * void gtk_menu_tool_button_set_menu(struct _GtkMenuToolButton* button, struct _GtkWidget* menu);
     * }
     */
    public static void gtk_menu_tool_button_set_menu(MemorySegment button, MemorySegment menu) {
        var mh$ = gtk_menu_tool_button_set_menu$MH();
        try {
            mh$.invokeExact(button, menu);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_tool_button_get_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$2901.const$0,"gtk_menu_tool_button_get_menu");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_menu_tool_button_get_menu(struct _GtkMenuToolButton* button);
     * }
     */
    public static MemorySegment gtk_menu_tool_button_get_menu(MemorySegment button) {
        var mh$ = gtk_menu_tool_button_get_menu$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_tool_button_set_arrow_tooltip_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2901.const$1,"gtk_menu_tool_button_set_arrow_tooltip_text");
    }
    /**
     * {@snippet :
     * void gtk_menu_tool_button_set_arrow_tooltip_text(struct _GtkMenuToolButton* button, char* text);
     * }
     */
    public static void gtk_menu_tool_button_set_arrow_tooltip_text(MemorySegment button, MemorySegment text) {
        var mh$ = gtk_menu_tool_button_set_arrow_tooltip_text$MH();
        try {
            mh$.invokeExact(button, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_tool_button_set_arrow_tooltip_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$2901.const$2,"gtk_menu_tool_button_set_arrow_tooltip_markup");
    }
    /**
     * {@snippet :
     * void gtk_menu_tool_button_set_arrow_tooltip_markup(struct _GtkMenuToolButton* button, char* markup);
     * }
     */
    public static void gtk_menu_tool_button_set_arrow_tooltip_markup(MemorySegment button, MemorySegment markup) {
        var mh$ = gtk_menu_tool_button_set_arrow_tooltip_markup$MH();
        try {
            mh$.invokeExact(button, markup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkButtonsType.GTK_BUTTONS_NONE = 0;
     * }
     */
    public static int GTK_BUTTONS_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkButtonsType.GTK_BUTTONS_OK = 1;
     * }
     */
    public static int GTK_BUTTONS_OK() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkButtonsType.GTK_BUTTONS_CLOSE = 2;
     * }
     */
    public static int GTK_BUTTONS_CLOSE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkButtonsType.GTK_BUTTONS_CANCEL = 3;
     * }
     */
    public static int GTK_BUTTONS_CANCEL() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkButtonsType.GTK_BUTTONS_YES_NO = 4;
     * }
     */
    public static int GTK_BUTTONS_YES_NO() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkButtonsType.GTK_BUTTONS_OK_CANCEL = 5;
     * }
     */
    public static int GTK_BUTTONS_OK_CANCEL() {
        return (int)5L;
    }
    public static MethodHandle gtk_message_dialog_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2903.const$2,"gtk_message_dialog_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_message_dialog_get_type();
     * }
     */
    public static long gtk_message_dialog_get_type() {
        var mh$ = gtk_message_dialog_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_message_dialog_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2903.const$3,"gtk_message_dialog_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_message_dialog_new(struct _GtkWindow* parent, enum GtkDialogFlags flags, enum GtkMessageType type, enum GtkButtonsType buttons, char* message_format,...);
     * }
     */
    public static MemorySegment gtk_message_dialog_new(MemorySegment parent, int flags, int type, int buttons, MemorySegment message_format, Object... x5) {
        var mh$ = gtk_message_dialog_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(parent, flags, type, buttons, message_format, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_message_dialog_new_with_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$2903.const$4,"gtk_message_dialog_new_with_markup");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_message_dialog_new_with_markup(struct _GtkWindow* parent, enum GtkDialogFlags flags, enum GtkMessageType type, enum GtkButtonsType buttons, char* message_format,...);
     * }
     */
    public static MemorySegment gtk_message_dialog_new_with_markup(MemorySegment parent, int flags, int type, int buttons, MemorySegment message_format, Object... x5) {
        var mh$ = gtk_message_dialog_new_with_markup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(parent, flags, type, buttons, message_format, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_message_dialog_set_image$MH() {
        return RuntimeHelper.requireNonNull(constants$2903.const$5,"gtk_message_dialog_set_image");
    }
    /**
     * {@snippet :
     * void gtk_message_dialog_set_image(struct _GtkMessageDialog* dialog, struct _GtkWidget* image);
     * }
     */
    public static void gtk_message_dialog_set_image(MemorySegment dialog, MemorySegment image) {
        var mh$ = gtk_message_dialog_set_image$MH();
        try {
            mh$.invokeExact(dialog, image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_message_dialog_get_image$MH() {
        return RuntimeHelper.requireNonNull(constants$2904.const$0,"gtk_message_dialog_get_image");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_message_dialog_get_image(struct _GtkMessageDialog* dialog);
     * }
     */
    public static MemorySegment gtk_message_dialog_get_image(MemorySegment dialog) {
        var mh$ = gtk_message_dialog_get_image$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(dialog);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_message_dialog_set_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$2904.const$1,"gtk_message_dialog_set_markup");
    }
    /**
     * {@snippet :
     * void gtk_message_dialog_set_markup(struct _GtkMessageDialog* message_dialog, char* str);
     * }
     */
    public static void gtk_message_dialog_set_markup(MemorySegment message_dialog, MemorySegment str) {
        var mh$ = gtk_message_dialog_set_markup$MH();
        try {
            mh$.invokeExact(message_dialog, str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_message_dialog_format_secondary_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2904.const$2,"gtk_message_dialog_format_secondary_text");
    }
    /**
     * {@snippet :
     * void gtk_message_dialog_format_secondary_text(struct _GtkMessageDialog* message_dialog, char* message_format,...);
     * }
     */
    public static void gtk_message_dialog_format_secondary_text(MemorySegment message_dialog, MemorySegment message_format, Object... x2) {
        var mh$ = gtk_message_dialog_format_secondary_text$MH();
        try {
            mh$.invokeExact(message_dialog, message_format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_message_dialog_format_secondary_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$2904.const$3,"gtk_message_dialog_format_secondary_markup");
    }
    /**
     * {@snippet :
     * void gtk_message_dialog_format_secondary_markup(struct _GtkMessageDialog* message_dialog, char* message_format,...);
     * }
     */
    public static void gtk_message_dialog_format_secondary_markup(MemorySegment message_dialog, MemorySegment message_format, Object... x2) {
        var mh$ = gtk_message_dialog_format_secondary_markup$MH();
        try {
            mh$.invokeExact(message_dialog, message_format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_message_dialog_get_message_area$MH() {
        return RuntimeHelper.requireNonNull(constants$2904.const$4,"gtk_message_dialog_get_message_area");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_message_dialog_get_message_area(struct _GtkMessageDialog* message_dialog);
     * }
     */
    public static MemorySegment gtk_message_dialog_get_message_area(MemorySegment message_dialog) {
        var mh$ = gtk_message_dialog_get_message_area$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(message_dialog);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkButtonRole.GTK_BUTTON_ROLE_NORMAL = 0;
     * }
     */
    public static int GTK_BUTTON_ROLE_NORMAL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkButtonRole.GTK_BUTTON_ROLE_CHECK = 1;
     * }
     */
    public static int GTK_BUTTON_ROLE_CHECK() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkButtonRole.GTK_BUTTON_ROLE_RADIO = 2;
     * }
     */
    public static int GTK_BUTTON_ROLE_RADIO() {
        return (int)2L;
    }
    public static MethodHandle gtk_model_button_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2904.const$5,"gtk_model_button_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_model_button_get_type();
     * }
     */
    public static long gtk_model_button_get_type() {
        var mh$ = gtk_model_button_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_model_button_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2905.const$0,"gtk_model_button_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_model_button_new();
     * }
     */
    public static MemorySegment gtk_model_button_new() {
        var mh$ = gtk_model_button_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_mount_operation_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2907.const$2,"gtk_mount_operation_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_mount_operation_get_type();
     * }
     */
    public static long gtk_mount_operation_get_type() {
        var mh$ = gtk_mount_operation_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_mount_operation_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2907.const$3,"gtk_mount_operation_new");
    }
    /**
     * {@snippet :
     * struct _GMountOperation* gtk_mount_operation_new(struct _GtkWindow* parent);
     * }
     */
    public static MemorySegment gtk_mount_operation_new(MemorySegment parent) {
        var mh$ = gtk_mount_operation_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_mount_operation_is_showing$MH() {
        return RuntimeHelper.requireNonNull(constants$2907.const$4,"gtk_mount_operation_is_showing");
    }
    /**
     * {@snippet :
     * int gtk_mount_operation_is_showing(struct _GtkMountOperation* op);
     * }
     */
    public static int gtk_mount_operation_is_showing(MemorySegment op) {
        var mh$ = gtk_mount_operation_is_showing$MH();
        try {
            return (int)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_mount_operation_set_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$2907.const$5,"gtk_mount_operation_set_parent");
    }
    /**
     * {@snippet :
     * void gtk_mount_operation_set_parent(struct _GtkMountOperation* op, struct _GtkWindow* parent);
     * }
     */
    public static void gtk_mount_operation_set_parent(MemorySegment op, MemorySegment parent) {
        var mh$ = gtk_mount_operation_set_parent$MH();
        try {
            mh$.invokeExact(op, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_mount_operation_get_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$2908.const$0,"gtk_mount_operation_get_parent");
    }
    /**
     * {@snippet :
     * struct _GtkWindow* gtk_mount_operation_get_parent(struct _GtkMountOperation* op);
     * }
     */
    public static MemorySegment gtk_mount_operation_get_parent(MemorySegment op) {
        var mh$ = gtk_mount_operation_get_parent$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_mount_operation_set_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$2908.const$1,"gtk_mount_operation_set_screen");
    }
    /**
     * {@snippet :
     * void gtk_mount_operation_set_screen(struct _GtkMountOperation* op, struct _GdkScreen* screen);
     * }
     */
    public static void gtk_mount_operation_set_screen(MemorySegment op, MemorySegment screen) {
        var mh$ = gtk_mount_operation_set_screen$MH();
        try {
            mh$.invokeExact(op, screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_mount_operation_get_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$2908.const$2,"gtk_mount_operation_get_screen");
    }
    /**
     * {@snippet :
     * struct _GdkScreen* gtk_mount_operation_get_screen(struct _GtkMountOperation* op);
     * }
     */
    public static MemorySegment gtk_mount_operation_get_screen(MemorySegment op) {
        var mh$ = gtk_mount_operation_get_screen$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkNotebookTab.GTK_NOTEBOOK_TAB_FIRST = 0;
     * }
     */
    public static int GTK_NOTEBOOK_TAB_FIRST() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkNotebookTab.GTK_NOTEBOOK_TAB_LAST = 1;
     * }
     */
    public static int GTK_NOTEBOOK_TAB_LAST() {
        return (int)1L;
    }
    public static MethodHandle gtk_notebook_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2915.const$4,"gtk_notebook_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_notebook_get_type();
     * }
     */
    public static long gtk_notebook_get_type() {
        var mh$ = gtk_notebook_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2915.const$5,"gtk_notebook_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_notebook_new();
     * }
     */
    public static MemorySegment gtk_notebook_new() {
        var mh$ = gtk_notebook_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_append_page$MH() {
        return RuntimeHelper.requireNonNull(constants$2916.const$0,"gtk_notebook_append_page");
    }
    /**
     * {@snippet :
     * int gtk_notebook_append_page(struct _GtkNotebook* notebook, struct _GtkWidget* child, struct _GtkWidget* tab_label);
     * }
     */
    public static int gtk_notebook_append_page(MemorySegment notebook, MemorySegment child, MemorySegment tab_label) {
        var mh$ = gtk_notebook_append_page$MH();
        try {
            return (int)mh$.invokeExact(notebook, child, tab_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_append_page_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$2916.const$1,"gtk_notebook_append_page_menu");
    }
    /**
     * {@snippet :
     * int gtk_notebook_append_page_menu(struct _GtkNotebook* notebook, struct _GtkWidget* child, struct _GtkWidget* tab_label, struct _GtkWidget* menu_label);
     * }
     */
    public static int gtk_notebook_append_page_menu(MemorySegment notebook, MemorySegment child, MemorySegment tab_label, MemorySegment menu_label) {
        var mh$ = gtk_notebook_append_page_menu$MH();
        try {
            return (int)mh$.invokeExact(notebook, child, tab_label, menu_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_prepend_page$MH() {
        return RuntimeHelper.requireNonNull(constants$2916.const$2,"gtk_notebook_prepend_page");
    }
    /**
     * {@snippet :
     * int gtk_notebook_prepend_page(struct _GtkNotebook* notebook, struct _GtkWidget* child, struct _GtkWidget* tab_label);
     * }
     */
    public static int gtk_notebook_prepend_page(MemorySegment notebook, MemorySegment child, MemorySegment tab_label) {
        var mh$ = gtk_notebook_prepend_page$MH();
        try {
            return (int)mh$.invokeExact(notebook, child, tab_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_prepend_page_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$2916.const$3,"gtk_notebook_prepend_page_menu");
    }
    /**
     * {@snippet :
     * int gtk_notebook_prepend_page_menu(struct _GtkNotebook* notebook, struct _GtkWidget* child, struct _GtkWidget* tab_label, struct _GtkWidget* menu_label);
     * }
     */
    public static int gtk_notebook_prepend_page_menu(MemorySegment notebook, MemorySegment child, MemorySegment tab_label, MemorySegment menu_label) {
        var mh$ = gtk_notebook_prepend_page_menu$MH();
        try {
            return (int)mh$.invokeExact(notebook, child, tab_label, menu_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_insert_page$MH() {
        return RuntimeHelper.requireNonNull(constants$2916.const$4,"gtk_notebook_insert_page");
    }
    /**
     * {@snippet :
     * int gtk_notebook_insert_page(struct _GtkNotebook* notebook, struct _GtkWidget* child, struct _GtkWidget* tab_label, int position);
     * }
     */
    public static int gtk_notebook_insert_page(MemorySegment notebook, MemorySegment child, MemorySegment tab_label, int position) {
        var mh$ = gtk_notebook_insert_page$MH();
        try {
            return (int)mh$.invokeExact(notebook, child, tab_label, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_insert_page_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$2916.const$5,"gtk_notebook_insert_page_menu");
    }
    /**
     * {@snippet :
     * int gtk_notebook_insert_page_menu(struct _GtkNotebook* notebook, struct _GtkWidget* child, struct _GtkWidget* tab_label, struct _GtkWidget* menu_label, int position);
     * }
     */
    public static int gtk_notebook_insert_page_menu(MemorySegment notebook, MemorySegment child, MemorySegment tab_label, MemorySegment menu_label, int position) {
        var mh$ = gtk_notebook_insert_page_menu$MH();
        try {
            return (int)mh$.invokeExact(notebook, child, tab_label, menu_label, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_remove_page$MH() {
        return RuntimeHelper.requireNonNull(constants$2917.const$0,"gtk_notebook_remove_page");
    }
    /**
     * {@snippet :
     * void gtk_notebook_remove_page(struct _GtkNotebook* notebook, int page_num);
     * }
     */
    public static void gtk_notebook_remove_page(MemorySegment notebook, int page_num) {
        var mh$ = gtk_notebook_remove_page$MH();
        try {
            mh$.invokeExact(notebook, page_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_set_group_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2917.const$1,"gtk_notebook_set_group_name");
    }
    /**
     * {@snippet :
     * void gtk_notebook_set_group_name(struct _GtkNotebook* notebook, char* group_name);
     * }
     */
    public static void gtk_notebook_set_group_name(MemorySegment notebook, MemorySegment group_name) {
        var mh$ = gtk_notebook_set_group_name$MH();
        try {
            mh$.invokeExact(notebook, group_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_get_group_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2917.const$2,"gtk_notebook_get_group_name");
    }
    /**
     * {@snippet :
     * char* gtk_notebook_get_group_name(struct _GtkNotebook* notebook);
     * }
     */
    public static MemorySegment gtk_notebook_get_group_name(MemorySegment notebook) {
        var mh$ = gtk_notebook_get_group_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(notebook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_get_current_page$MH() {
        return RuntimeHelper.requireNonNull(constants$2917.const$3,"gtk_notebook_get_current_page");
    }
    /**
     * {@snippet :
     * int gtk_notebook_get_current_page(struct _GtkNotebook* notebook);
     * }
     */
    public static int gtk_notebook_get_current_page(MemorySegment notebook) {
        var mh$ = gtk_notebook_get_current_page$MH();
        try {
            return (int)mh$.invokeExact(notebook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_get_nth_page$MH() {
        return RuntimeHelper.requireNonNull(constants$2917.const$4,"gtk_notebook_get_nth_page");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_notebook_get_nth_page(struct _GtkNotebook* notebook, int page_num);
     * }
     */
    public static MemorySegment gtk_notebook_get_nth_page(MemorySegment notebook, int page_num) {
        var mh$ = gtk_notebook_get_nth_page$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(notebook, page_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_get_n_pages$MH() {
        return RuntimeHelper.requireNonNull(constants$2917.const$5,"gtk_notebook_get_n_pages");
    }
    /**
     * {@snippet :
     * int gtk_notebook_get_n_pages(struct _GtkNotebook* notebook);
     * }
     */
    public static int gtk_notebook_get_n_pages(MemorySegment notebook) {
        var mh$ = gtk_notebook_get_n_pages$MH();
        try {
            return (int)mh$.invokeExact(notebook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_page_num$MH() {
        return RuntimeHelper.requireNonNull(constants$2918.const$0,"gtk_notebook_page_num");
    }
    /**
     * {@snippet :
     * int gtk_notebook_page_num(struct _GtkNotebook* notebook, struct _GtkWidget* child);
     * }
     */
    public static int gtk_notebook_page_num(MemorySegment notebook, MemorySegment child) {
        var mh$ = gtk_notebook_page_num$MH();
        try {
            return (int)mh$.invokeExact(notebook, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_set_current_page$MH() {
        return RuntimeHelper.requireNonNull(constants$2918.const$1,"gtk_notebook_set_current_page");
    }
    /**
     * {@snippet :
     * void gtk_notebook_set_current_page(struct _GtkNotebook* notebook, int page_num);
     * }
     */
    public static void gtk_notebook_set_current_page(MemorySegment notebook, int page_num) {
        var mh$ = gtk_notebook_set_current_page$MH();
        try {
            mh$.invokeExact(notebook, page_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_next_page$MH() {
        return RuntimeHelper.requireNonNull(constants$2918.const$2,"gtk_notebook_next_page");
    }
    /**
     * {@snippet :
     * void gtk_notebook_next_page(struct _GtkNotebook* notebook);
     * }
     */
    public static void gtk_notebook_next_page(MemorySegment notebook) {
        var mh$ = gtk_notebook_next_page$MH();
        try {
            mh$.invokeExact(notebook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_prev_page$MH() {
        return RuntimeHelper.requireNonNull(constants$2918.const$3,"gtk_notebook_prev_page");
    }
    /**
     * {@snippet :
     * void gtk_notebook_prev_page(struct _GtkNotebook* notebook);
     * }
     */
    public static void gtk_notebook_prev_page(MemorySegment notebook) {
        var mh$ = gtk_notebook_prev_page$MH();
        try {
            mh$.invokeExact(notebook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_set_show_border$MH() {
        return RuntimeHelper.requireNonNull(constants$2918.const$4,"gtk_notebook_set_show_border");
    }
    /**
     * {@snippet :
     * void gtk_notebook_set_show_border(struct _GtkNotebook* notebook, int show_border);
     * }
     */
    public static void gtk_notebook_set_show_border(MemorySegment notebook, int show_border) {
        var mh$ = gtk_notebook_set_show_border$MH();
        try {
            mh$.invokeExact(notebook, show_border);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_get_show_border$MH() {
        return RuntimeHelper.requireNonNull(constants$2918.const$5,"gtk_notebook_get_show_border");
    }
    /**
     * {@snippet :
     * int gtk_notebook_get_show_border(struct _GtkNotebook* notebook);
     * }
     */
    public static int gtk_notebook_get_show_border(MemorySegment notebook) {
        var mh$ = gtk_notebook_get_show_border$MH();
        try {
            return (int)mh$.invokeExact(notebook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_set_show_tabs$MH() {
        return RuntimeHelper.requireNonNull(constants$2919.const$0,"gtk_notebook_set_show_tabs");
    }
    /**
     * {@snippet :
     * void gtk_notebook_set_show_tabs(struct _GtkNotebook* notebook, int show_tabs);
     * }
     */
    public static void gtk_notebook_set_show_tabs(MemorySegment notebook, int show_tabs) {
        var mh$ = gtk_notebook_set_show_tabs$MH();
        try {
            mh$.invokeExact(notebook, show_tabs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_get_show_tabs$MH() {
        return RuntimeHelper.requireNonNull(constants$2919.const$1,"gtk_notebook_get_show_tabs");
    }
    /**
     * {@snippet :
     * int gtk_notebook_get_show_tabs(struct _GtkNotebook* notebook);
     * }
     */
    public static int gtk_notebook_get_show_tabs(MemorySegment notebook) {
        var mh$ = gtk_notebook_get_show_tabs$MH();
        try {
            return (int)mh$.invokeExact(notebook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_set_tab_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$2919.const$2,"gtk_notebook_set_tab_pos");
    }
    /**
     * {@snippet :
     * void gtk_notebook_set_tab_pos(struct _GtkNotebook* notebook, enum GtkPositionType pos);
     * }
     */
    public static void gtk_notebook_set_tab_pos(MemorySegment notebook, int pos) {
        var mh$ = gtk_notebook_set_tab_pos$MH();
        try {
            mh$.invokeExact(notebook, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_get_tab_pos$MH() {
        return RuntimeHelper.requireNonNull(constants$2919.const$3,"gtk_notebook_get_tab_pos");
    }
    /**
     * {@snippet :
     * enum GtkPositionType gtk_notebook_get_tab_pos(struct _GtkNotebook* notebook);
     * }
     */
    public static int gtk_notebook_get_tab_pos(MemorySegment notebook) {
        var mh$ = gtk_notebook_get_tab_pos$MH();
        try {
            return (int)mh$.invokeExact(notebook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_set_scrollable$MH() {
        return RuntimeHelper.requireNonNull(constants$2919.const$4,"gtk_notebook_set_scrollable");
    }
    /**
     * {@snippet :
     * void gtk_notebook_set_scrollable(struct _GtkNotebook* notebook, int scrollable);
     * }
     */
    public static void gtk_notebook_set_scrollable(MemorySegment notebook, int scrollable) {
        var mh$ = gtk_notebook_set_scrollable$MH();
        try {
            mh$.invokeExact(notebook, scrollable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_get_scrollable$MH() {
        return RuntimeHelper.requireNonNull(constants$2919.const$5,"gtk_notebook_get_scrollable");
    }
    /**
     * {@snippet :
     * int gtk_notebook_get_scrollable(struct _GtkNotebook* notebook);
     * }
     */
    public static int gtk_notebook_get_scrollable(MemorySegment notebook) {
        var mh$ = gtk_notebook_get_scrollable$MH();
        try {
            return (int)mh$.invokeExact(notebook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_get_tab_hborder$MH() {
        return RuntimeHelper.requireNonNull(constants$2920.const$0,"gtk_notebook_get_tab_hborder");
    }
    /**
     * {@snippet :
     * unsigned short gtk_notebook_get_tab_hborder(struct _GtkNotebook* notebook);
     * }
     */
    public static short gtk_notebook_get_tab_hborder(MemorySegment notebook) {
        var mh$ = gtk_notebook_get_tab_hborder$MH();
        try {
            return (short)mh$.invokeExact(notebook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_get_tab_vborder$MH() {
        return RuntimeHelper.requireNonNull(constants$2920.const$1,"gtk_notebook_get_tab_vborder");
    }
    /**
     * {@snippet :
     * unsigned short gtk_notebook_get_tab_vborder(struct _GtkNotebook* notebook);
     * }
     */
    public static short gtk_notebook_get_tab_vborder(MemorySegment notebook) {
        var mh$ = gtk_notebook_get_tab_vborder$MH();
        try {
            return (short)mh$.invokeExact(notebook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_popup_enable$MH() {
        return RuntimeHelper.requireNonNull(constants$2920.const$2,"gtk_notebook_popup_enable");
    }
    /**
     * {@snippet :
     * void gtk_notebook_popup_enable(struct _GtkNotebook* notebook);
     * }
     */
    public static void gtk_notebook_popup_enable(MemorySegment notebook) {
        var mh$ = gtk_notebook_popup_enable$MH();
        try {
            mh$.invokeExact(notebook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_popup_disable$MH() {
        return RuntimeHelper.requireNonNull(constants$2920.const$3,"gtk_notebook_popup_disable");
    }
    /**
     * {@snippet :
     * void gtk_notebook_popup_disable(struct _GtkNotebook* notebook);
     * }
     */
    public static void gtk_notebook_popup_disable(MemorySegment notebook) {
        var mh$ = gtk_notebook_popup_disable$MH();
        try {
            mh$.invokeExact(notebook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_get_tab_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2920.const$4,"gtk_notebook_get_tab_label");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_notebook_get_tab_label(struct _GtkNotebook* notebook, struct _GtkWidget* child);
     * }
     */
    public static MemorySegment gtk_notebook_get_tab_label(MemorySegment notebook, MemorySegment child) {
        var mh$ = gtk_notebook_get_tab_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(notebook, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_set_tab_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2920.const$5,"gtk_notebook_set_tab_label");
    }
    /**
     * {@snippet :
     * void gtk_notebook_set_tab_label(struct _GtkNotebook* notebook, struct _GtkWidget* child, struct _GtkWidget* tab_label);
     * }
     */
    public static void gtk_notebook_set_tab_label(MemorySegment notebook, MemorySegment child, MemorySegment tab_label) {
        var mh$ = gtk_notebook_set_tab_label$MH();
        try {
            mh$.invokeExact(notebook, child, tab_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_set_tab_label_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2921.const$0,"gtk_notebook_set_tab_label_text");
    }
    /**
     * {@snippet :
     * void gtk_notebook_set_tab_label_text(struct _GtkNotebook* notebook, struct _GtkWidget* child, char* tab_text);
     * }
     */
    public static void gtk_notebook_set_tab_label_text(MemorySegment notebook, MemorySegment child, MemorySegment tab_text) {
        var mh$ = gtk_notebook_set_tab_label_text$MH();
        try {
            mh$.invokeExact(notebook, child, tab_text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_get_tab_label_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2921.const$1,"gtk_notebook_get_tab_label_text");
    }
    /**
     * {@snippet :
     * char* gtk_notebook_get_tab_label_text(struct _GtkNotebook* notebook, struct _GtkWidget* child);
     * }
     */
    public static MemorySegment gtk_notebook_get_tab_label_text(MemorySegment notebook, MemorySegment child) {
        var mh$ = gtk_notebook_get_tab_label_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(notebook, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_get_menu_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2921.const$2,"gtk_notebook_get_menu_label");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_notebook_get_menu_label(struct _GtkNotebook* notebook, struct _GtkWidget* child);
     * }
     */
    public static MemorySegment gtk_notebook_get_menu_label(MemorySegment notebook, MemorySegment child) {
        var mh$ = gtk_notebook_get_menu_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(notebook, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_set_menu_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2921.const$3,"gtk_notebook_set_menu_label");
    }
    /**
     * {@snippet :
     * void gtk_notebook_set_menu_label(struct _GtkNotebook* notebook, struct _GtkWidget* child, struct _GtkWidget* menu_label);
     * }
     */
    public static void gtk_notebook_set_menu_label(MemorySegment notebook, MemorySegment child, MemorySegment menu_label) {
        var mh$ = gtk_notebook_set_menu_label$MH();
        try {
            mh$.invokeExact(notebook, child, menu_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_set_menu_label_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2921.const$4,"gtk_notebook_set_menu_label_text");
    }
    /**
     * {@snippet :
     * void gtk_notebook_set_menu_label_text(struct _GtkNotebook* notebook, struct _GtkWidget* child, char* menu_text);
     * }
     */
    public static void gtk_notebook_set_menu_label_text(MemorySegment notebook, MemorySegment child, MemorySegment menu_text) {
        var mh$ = gtk_notebook_set_menu_label_text$MH();
        try {
            mh$.invokeExact(notebook, child, menu_text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_get_menu_label_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2921.const$5,"gtk_notebook_get_menu_label_text");
    }
    /**
     * {@snippet :
     * char* gtk_notebook_get_menu_label_text(struct _GtkNotebook* notebook, struct _GtkWidget* child);
     * }
     */
    public static MemorySegment gtk_notebook_get_menu_label_text(MemorySegment notebook, MemorySegment child) {
        var mh$ = gtk_notebook_get_menu_label_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(notebook, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_reorder_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2922.const$0,"gtk_notebook_reorder_child");
    }
    /**
     * {@snippet :
     * void gtk_notebook_reorder_child(struct _GtkNotebook* notebook, struct _GtkWidget* child, int position);
     * }
     */
    public static void gtk_notebook_reorder_child(MemorySegment notebook, MemorySegment child, int position) {
        var mh$ = gtk_notebook_reorder_child$MH();
        try {
            mh$.invokeExact(notebook, child, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_get_tab_reorderable$MH() {
        return RuntimeHelper.requireNonNull(constants$2922.const$1,"gtk_notebook_get_tab_reorderable");
    }
    /**
     * {@snippet :
     * int gtk_notebook_get_tab_reorderable(struct _GtkNotebook* notebook, struct _GtkWidget* child);
     * }
     */
    public static int gtk_notebook_get_tab_reorderable(MemorySegment notebook, MemorySegment child) {
        var mh$ = gtk_notebook_get_tab_reorderable$MH();
        try {
            return (int)mh$.invokeExact(notebook, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_set_tab_reorderable$MH() {
        return RuntimeHelper.requireNonNull(constants$2922.const$2,"gtk_notebook_set_tab_reorderable");
    }
    /**
     * {@snippet :
     * void gtk_notebook_set_tab_reorderable(struct _GtkNotebook* notebook, struct _GtkWidget* child, int reorderable);
     * }
     */
    public static void gtk_notebook_set_tab_reorderable(MemorySegment notebook, MemorySegment child, int reorderable) {
        var mh$ = gtk_notebook_set_tab_reorderable$MH();
        try {
            mh$.invokeExact(notebook, child, reorderable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_get_tab_detachable$MH() {
        return RuntimeHelper.requireNonNull(constants$2922.const$3,"gtk_notebook_get_tab_detachable");
    }
    /**
     * {@snippet :
     * int gtk_notebook_get_tab_detachable(struct _GtkNotebook* notebook, struct _GtkWidget* child);
     * }
     */
    public static int gtk_notebook_get_tab_detachable(MemorySegment notebook, MemorySegment child) {
        var mh$ = gtk_notebook_get_tab_detachable$MH();
        try {
            return (int)mh$.invokeExact(notebook, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_set_tab_detachable$MH() {
        return RuntimeHelper.requireNonNull(constants$2922.const$4,"gtk_notebook_set_tab_detachable");
    }
    /**
     * {@snippet :
     * void gtk_notebook_set_tab_detachable(struct _GtkNotebook* notebook, struct _GtkWidget* child, int detachable);
     * }
     */
    public static void gtk_notebook_set_tab_detachable(MemorySegment notebook, MemorySegment child, int detachable) {
        var mh$ = gtk_notebook_set_tab_detachable$MH();
        try {
            mh$.invokeExact(notebook, child, detachable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_detach_tab$MH() {
        return RuntimeHelper.requireNonNull(constants$2922.const$5,"gtk_notebook_detach_tab");
    }
    /**
     * {@snippet :
     * void gtk_notebook_detach_tab(struct _GtkNotebook* notebook, struct _GtkWidget* child);
     * }
     */
    public static void gtk_notebook_detach_tab(MemorySegment notebook, MemorySegment child) {
        var mh$ = gtk_notebook_detach_tab$MH();
        try {
            mh$.invokeExact(notebook, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_get_action_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2923.const$0,"gtk_notebook_get_action_widget");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_notebook_get_action_widget(struct _GtkNotebook* notebook, enum GtkPackType pack_type);
     * }
     */
    public static MemorySegment gtk_notebook_get_action_widget(MemorySegment notebook, int pack_type) {
        var mh$ = gtk_notebook_get_action_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(notebook, pack_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_notebook_set_action_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2923.const$1,"gtk_notebook_set_action_widget");
    }
    /**
     * {@snippet :
     * void gtk_notebook_set_action_widget(struct _GtkNotebook* notebook, struct _GtkWidget* widget, enum GtkPackType pack_type);
     * }
     */
    public static void gtk_notebook_set_action_widget(MemorySegment notebook, MemorySegment widget, int pack_type) {
        var mh$ = gtk_notebook_set_action_widget$MH();
        try {
            mh$.invokeExact(notebook, widget, pack_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_offscreen_window_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2925.const$0,"gtk_offscreen_window_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_offscreen_window_get_type();
     * }
     */
    public static long gtk_offscreen_window_get_type() {
        var mh$ = gtk_offscreen_window_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_offscreen_window_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2925.const$1,"gtk_offscreen_window_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_offscreen_window_new();
     * }
     */
    public static MemorySegment gtk_offscreen_window_new() {
        var mh$ = gtk_offscreen_window_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_offscreen_window_get_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$2925.const$2,"gtk_offscreen_window_get_surface");
    }
    /**
     * {@snippet :
     * struct _cairo_surface* gtk_offscreen_window_get_surface(struct _GtkOffscreenWindow* offscreen);
     * }
     */
    public static MemorySegment gtk_offscreen_window_get_surface(MemorySegment offscreen) {
        var mh$ = gtk_offscreen_window_get_surface$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(offscreen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_offscreen_window_get_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$2925.const$3,"gtk_offscreen_window_get_pixbuf");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gtk_offscreen_window_get_pixbuf(struct _GtkOffscreenWindow* offscreen);
     * }
     */
    public static MemorySegment gtk_offscreen_window_get_pixbuf(MemorySegment offscreen) {
        var mh$ = gtk_offscreen_window_get_pixbuf$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(offscreen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_orientable_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2925.const$5,"gtk_orientable_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_orientable_get_type();
     * }
     */
    public static long gtk_orientable_get_type() {
        var mh$ = gtk_orientable_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_orientable_set_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$2926.const$0,"gtk_orientable_set_orientation");
    }
    /**
     * {@snippet :
     * void gtk_orientable_set_orientation(struct _GtkOrientable* orientable, enum GtkOrientation orientation);
     * }
     */
    public static void gtk_orientable_set_orientation(MemorySegment orientable, int orientation) {
        var mh$ = gtk_orientable_set_orientation$MH();
        try {
            mh$.invokeExact(orientable, orientation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_orientable_get_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$2926.const$1,"gtk_orientable_get_orientation");
    }
    /**
     * {@snippet :
     * enum GtkOrientation gtk_orientable_get_orientation(struct _GtkOrientable* orientable);
     * }
     */
    public static int gtk_orientable_get_orientation(MemorySegment orientable) {
        var mh$ = gtk_orientable_get_orientation$MH();
        try {
            return (int)mh$.invokeExact(orientable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_overlay_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2929.const$5,"gtk_overlay_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_overlay_get_type();
     * }
     */
    public static long gtk_overlay_get_type() {
        var mh$ = gtk_overlay_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_overlay_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2930.const$0,"gtk_overlay_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_overlay_new();
     * }
     */
    public static MemorySegment gtk_overlay_new() {
        var mh$ = gtk_overlay_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_overlay_add_overlay$MH() {
        return RuntimeHelper.requireNonNull(constants$2930.const$1,"gtk_overlay_add_overlay");
    }
    /**
     * {@snippet :
     * void gtk_overlay_add_overlay(struct _GtkOverlay* overlay, struct _GtkWidget* widget);
     * }
     */
    public static void gtk_overlay_add_overlay(MemorySegment overlay, MemorySegment widget) {
        var mh$ = gtk_overlay_add_overlay$MH();
        try {
            mh$.invokeExact(overlay, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_overlay_reorder_overlay$MH() {
        return RuntimeHelper.requireNonNull(constants$2930.const$2,"gtk_overlay_reorder_overlay");
    }
    /**
     * {@snippet :
     * void gtk_overlay_reorder_overlay(struct _GtkOverlay* overlay, struct _GtkWidget* child, int index_);
     * }
     */
    public static void gtk_overlay_reorder_overlay(MemorySegment overlay, MemorySegment child, int index_) {
        var mh$ = gtk_overlay_reorder_overlay$MH();
        try {
            mh$.invokeExact(overlay, child, index_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_overlay_get_overlay_pass_through$MH() {
        return RuntimeHelper.requireNonNull(constants$2930.const$3,"gtk_overlay_get_overlay_pass_through");
    }
    /**
     * {@snippet :
     * int gtk_overlay_get_overlay_pass_through(struct _GtkOverlay* overlay, struct _GtkWidget* widget);
     * }
     */
    public static int gtk_overlay_get_overlay_pass_through(MemorySegment overlay, MemorySegment widget) {
        var mh$ = gtk_overlay_get_overlay_pass_through$MH();
        try {
            return (int)mh$.invokeExact(overlay, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_overlay_set_overlay_pass_through$MH() {
        return RuntimeHelper.requireNonNull(constants$2930.const$4,"gtk_overlay_set_overlay_pass_through");
    }
    /**
     * {@snippet :
     * void gtk_overlay_set_overlay_pass_through(struct _GtkOverlay* overlay, struct _GtkWidget* widget, int pass_through);
     * }
     */
    public static void gtk_overlay_set_overlay_pass_through(MemorySegment overlay, MemorySegment widget, int pass_through) {
        var mh$ = gtk_overlay_set_overlay_pass_through$MH();
        try {
            mh$.invokeExact(overlay, widget, pass_through);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkPadActionType.GTK_PAD_ACTION_BUTTON = 0;
     * }
     */
    public static int GTK_PAD_ACTION_BUTTON() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkPadActionType.GTK_PAD_ACTION_RING = 1;
     * }
     */
    public static int GTK_PAD_ACTION_RING() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkPadActionType.GTK_PAD_ACTION_STRIP = 2;
     * }
     */
    public static int GTK_PAD_ACTION_STRIP() {
        return (int)2L;
    }
    public static MethodHandle gtk_pad_controller_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2931.const$5,"gtk_pad_controller_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_pad_controller_get_type();
     * }
     */
    public static long gtk_pad_controller_get_type() {
        var mh$ = gtk_pad_controller_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_pad_controller_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2932.const$0,"gtk_pad_controller_new");
    }
    /**
     * {@snippet :
     * struct _GtkPadController* gtk_pad_controller_new(struct _GtkWindow* window, struct _GActionGroup* group, struct _GdkDevice* pad);
     * }
     */
    public static MemorySegment gtk_pad_controller_new(MemorySegment window, MemorySegment group, MemorySegment pad) {
        var mh$ = gtk_pad_controller_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window, group, pad);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_pad_controller_set_action_entries$MH() {
        return RuntimeHelper.requireNonNull(constants$2932.const$1,"gtk_pad_controller_set_action_entries");
    }
    /**
     * {@snippet :
     * void gtk_pad_controller_set_action_entries(struct _GtkPadController* controller, struct _GtkPadActionEntry* entries, int n_entries);
     * }
     */
    public static void gtk_pad_controller_set_action_entries(MemorySegment controller, MemorySegment entries, int n_entries) {
        var mh$ = gtk_pad_controller_set_action_entries$MH();
        try {
            mh$.invokeExact(controller, entries, n_entries);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_pad_controller_set_action$MH() {
        return RuntimeHelper.requireNonNull(constants$2932.const$2,"gtk_pad_controller_set_action");
    }
    /**
     * {@snippet :
     * void gtk_pad_controller_set_action(struct _GtkPadController* controller, enum GtkPadActionType type, int index, int mode, char* label, char* action_name);
     * }
     */
    public static void gtk_pad_controller_set_action(MemorySegment controller, int type, int index, int mode, MemorySegment label, MemorySegment action_name) {
        var mh$ = gtk_pad_controller_set_action$MH();
        try {
            mh$.invokeExact(controller, type, index, mode, label, action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2932.const$3,"gtk_paper_size_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_paper_size_get_type();
     * }
     */
    public static long gtk_paper_size_get_type() {
        var mh$ = gtk_paper_size_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2932.const$4,"gtk_paper_size_new");
    }
    /**
     * {@snippet :
     * struct _GtkPaperSize* gtk_paper_size_new(char* name);
     * }
     */
    public static MemorySegment gtk_paper_size_new(MemorySegment name) {
        var mh$ = gtk_paper_size_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_new_from_ppd$MH() {
        return RuntimeHelper.requireNonNull(constants$2932.const$5,"gtk_paper_size_new_from_ppd");
    }
    /**
     * {@snippet :
     * struct _GtkPaperSize* gtk_paper_size_new_from_ppd(char* ppd_name, char* ppd_display_name, double width, double height);
     * }
     */
    public static MemorySegment gtk_paper_size_new_from_ppd(MemorySegment ppd_name, MemorySegment ppd_display_name, double width, double height) {
        var mh$ = gtk_paper_size_new_from_ppd$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(ppd_name, ppd_display_name, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_new_from_ipp$MH() {
        return RuntimeHelper.requireNonNull(constants$2933.const$0,"gtk_paper_size_new_from_ipp");
    }
    /**
     * {@snippet :
     * struct _GtkPaperSize* gtk_paper_size_new_from_ipp(char* ipp_name, double width, double height);
     * }
     */
    public static MemorySegment gtk_paper_size_new_from_ipp(MemorySegment ipp_name, double width, double height) {
        var mh$ = gtk_paper_size_new_from_ipp$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(ipp_name, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_new_custom$MH() {
        return RuntimeHelper.requireNonNull(constants$2933.const$2,"gtk_paper_size_new_custom");
    }
    /**
     * {@snippet :
     * struct _GtkPaperSize* gtk_paper_size_new_custom(char* name, char* display_name, double width, double height, enum GtkUnit unit);
     * }
     */
    public static MemorySegment gtk_paper_size_new_custom(MemorySegment name, MemorySegment display_name, double width, double height, int unit) {
        var mh$ = gtk_paper_size_new_custom$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name, display_name, width, height, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$2933.const$3,"gtk_paper_size_copy");
    }
    /**
     * {@snippet :
     * struct _GtkPaperSize* gtk_paper_size_copy(struct _GtkPaperSize* other);
     * }
     */
    public static MemorySegment gtk_paper_size_copy(MemorySegment other) {
        var mh$ = gtk_paper_size_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_free$MH() {
        return RuntimeHelper.requireNonNull(constants$2933.const$4,"gtk_paper_size_free");
    }
    /**
     * {@snippet :
     * void gtk_paper_size_free(struct _GtkPaperSize* size);
     * }
     */
    public static void gtk_paper_size_free(MemorySegment size) {
        var mh$ = gtk_paper_size_free$MH();
        try {
            mh$.invokeExact(size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_is_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$2933.const$5,"gtk_paper_size_is_equal");
    }
    /**
     * {@snippet :
     * int gtk_paper_size_is_equal(struct _GtkPaperSize* size1, struct _GtkPaperSize* size2);
     * }
     */
    public static int gtk_paper_size_is_equal(MemorySegment size1, MemorySegment size2) {
        var mh$ = gtk_paper_size_is_equal$MH();
        try {
            return (int)mh$.invokeExact(size1, size2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_get_paper_sizes$MH() {
        return RuntimeHelper.requireNonNull(constants$2934.const$0,"gtk_paper_size_get_paper_sizes");
    }
    /**
     * {@snippet :
     * struct _GList* gtk_paper_size_get_paper_sizes(int include_custom);
     * }
     */
    public static MemorySegment gtk_paper_size_get_paper_sizes(int include_custom) {
        var mh$ = gtk_paper_size_get_paper_sizes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(include_custom);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2934.const$1,"gtk_paper_size_get_name");
    }
    /**
     * {@snippet :
     * char* gtk_paper_size_get_name(struct _GtkPaperSize* size);
     * }
     */
    public static MemorySegment gtk_paper_size_get_name(MemorySegment size) {
        var mh$ = gtk_paper_size_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_get_display_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2934.const$2,"gtk_paper_size_get_display_name");
    }
    /**
     * {@snippet :
     * char* gtk_paper_size_get_display_name(struct _GtkPaperSize* size);
     * }
     */
    public static MemorySegment gtk_paper_size_get_display_name(MemorySegment size) {
        var mh$ = gtk_paper_size_get_display_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_get_ppd_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2934.const$3,"gtk_paper_size_get_ppd_name");
    }
    /**
     * {@snippet :
     * char* gtk_paper_size_get_ppd_name(struct _GtkPaperSize* size);
     * }
     */
    public static MemorySegment gtk_paper_size_get_ppd_name(MemorySegment size) {
        var mh$ = gtk_paper_size_get_ppd_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_get_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2934.const$5,"gtk_paper_size_get_width");
    }
    /**
     * {@snippet :
     * double gtk_paper_size_get_width(struct _GtkPaperSize* size, enum GtkUnit unit);
     * }
     */
    public static double gtk_paper_size_get_width(MemorySegment size, int unit) {
        var mh$ = gtk_paper_size_get_width$MH();
        try {
            return (double)mh$.invokeExact(size, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_get_height$MH() {
        return RuntimeHelper.requireNonNull(constants$2935.const$0,"gtk_paper_size_get_height");
    }
    /**
     * {@snippet :
     * double gtk_paper_size_get_height(struct _GtkPaperSize* size, enum GtkUnit unit);
     * }
     */
    public static double gtk_paper_size_get_height(MemorySegment size, int unit) {
        var mh$ = gtk_paper_size_get_height$MH();
        try {
            return (double)mh$.invokeExact(size, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_is_custom$MH() {
        return RuntimeHelper.requireNonNull(constants$2935.const$1,"gtk_paper_size_is_custom");
    }
    /**
     * {@snippet :
     * int gtk_paper_size_is_custom(struct _GtkPaperSize* size);
     * }
     */
    public static int gtk_paper_size_is_custom(MemorySegment size) {
        var mh$ = gtk_paper_size_is_custom$MH();
        try {
            return (int)mh$.invokeExact(size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_is_ipp$MH() {
        return RuntimeHelper.requireNonNull(constants$2935.const$2,"gtk_paper_size_is_ipp");
    }
    /**
     * {@snippet :
     * int gtk_paper_size_is_ipp(struct _GtkPaperSize* size);
     * }
     */
    public static int gtk_paper_size_is_ipp(MemorySegment size) {
        var mh$ = gtk_paper_size_is_ipp$MH();
        try {
            return (int)mh$.invokeExact(size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_set_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2935.const$4,"gtk_paper_size_set_size");
    }
    /**
     * {@snippet :
     * void gtk_paper_size_set_size(struct _GtkPaperSize* size, double width, double height, enum GtkUnit unit);
     * }
     */
    public static void gtk_paper_size_set_size(MemorySegment size, double width, double height, int unit) {
        var mh$ = gtk_paper_size_set_size$MH();
        try {
            mh$.invokeExact(size, width, height, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_get_default_top_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$2935.const$5,"gtk_paper_size_get_default_top_margin");
    }
    /**
     * {@snippet :
     * double gtk_paper_size_get_default_top_margin(struct _GtkPaperSize* size, enum GtkUnit unit);
     * }
     */
    public static double gtk_paper_size_get_default_top_margin(MemorySegment size, int unit) {
        var mh$ = gtk_paper_size_get_default_top_margin$MH();
        try {
            return (double)mh$.invokeExact(size, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_get_default_bottom_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$2936.const$0,"gtk_paper_size_get_default_bottom_margin");
    }
    /**
     * {@snippet :
     * double gtk_paper_size_get_default_bottom_margin(struct _GtkPaperSize* size, enum GtkUnit unit);
     * }
     */
    public static double gtk_paper_size_get_default_bottom_margin(MemorySegment size, int unit) {
        var mh$ = gtk_paper_size_get_default_bottom_margin$MH();
        try {
            return (double)mh$.invokeExact(size, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_get_default_left_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$2936.const$1,"gtk_paper_size_get_default_left_margin");
    }
    /**
     * {@snippet :
     * double gtk_paper_size_get_default_left_margin(struct _GtkPaperSize* size, enum GtkUnit unit);
     * }
     */
    public static double gtk_paper_size_get_default_left_margin(MemorySegment size, int unit) {
        var mh$ = gtk_paper_size_get_default_left_margin$MH();
        try {
            return (double)mh$.invokeExact(size, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_get_default_right_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$2936.const$2,"gtk_paper_size_get_default_right_margin");
    }
    /**
     * {@snippet :
     * double gtk_paper_size_get_default_right_margin(struct _GtkPaperSize* size, enum GtkUnit unit);
     * }
     */
    public static double gtk_paper_size_get_default_right_margin(MemorySegment size, int unit) {
        var mh$ = gtk_paper_size_get_default_right_margin$MH();
        try {
            return (double)mh$.invokeExact(size, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$2936.const$3,"gtk_paper_size_get_default");
    }
    /**
     * {@snippet :
     * char* gtk_paper_size_get_default();
     * }
     */
    public static MemorySegment gtk_paper_size_get_default() {
        var mh$ = gtk_paper_size_get_default$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_new_from_key_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2936.const$4,"gtk_paper_size_new_from_key_file");
    }
    /**
     * {@snippet :
     * struct _GtkPaperSize* gtk_paper_size_new_from_key_file(struct _GKeyFile* key_file, char* group_name, struct _GError** error);
     * }
     */
    public static MemorySegment gtk_paper_size_new_from_key_file(MemorySegment key_file, MemorySegment group_name, MemorySegment error) {
        var mh$ = gtk_paper_size_new_from_key_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key_file, group_name, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_to_key_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2936.const$5,"gtk_paper_size_to_key_file");
    }
    /**
     * {@snippet :
     * void gtk_paper_size_to_key_file(struct _GtkPaperSize* size, struct _GKeyFile* key_file, char* group_name);
     * }
     */
    public static void gtk_paper_size_to_key_file(MemorySegment size, MemorySegment key_file, MemorySegment group_name) {
        var mh$ = gtk_paper_size_to_key_file$MH();
        try {
            mh$.invokeExact(size, key_file, group_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_new_from_gvariant$MH() {
        return RuntimeHelper.requireNonNull(constants$2937.const$0,"gtk_paper_size_new_from_gvariant");
    }
    /**
     * {@snippet :
     * struct _GtkPaperSize* gtk_paper_size_new_from_gvariant(struct _GVariant* variant);
     * }
     */
    public static MemorySegment gtk_paper_size_new_from_gvariant(MemorySegment variant) {
        var mh$ = gtk_paper_size_new_from_gvariant$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(variant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paper_size_to_gvariant$MH() {
        return RuntimeHelper.requireNonNull(constants$2937.const$1,"gtk_paper_size_to_gvariant");
    }
    /**
     * {@snippet :
     * struct _GVariant* gtk_paper_size_to_gvariant(struct _GtkPaperSize* paper_size);
     * }
     */
    public static MemorySegment gtk_paper_size_to_gvariant(MemorySegment paper_size) {
        var mh$ = gtk_paper_size_to_gvariant$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(paper_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2937.const$2,"gtk_page_setup_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_page_setup_get_type();
     * }
     */
    public static long gtk_page_setup_get_type() {
        var mh$ = gtk_page_setup_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2937.const$3,"gtk_page_setup_new");
    }
    /**
     * {@snippet :
     * struct _GtkPageSetup* gtk_page_setup_new();
     * }
     */
    public static MemorySegment gtk_page_setup_new() {
        var mh$ = gtk_page_setup_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$2937.const$4,"gtk_page_setup_copy");
    }
    /**
     * {@snippet :
     * struct _GtkPageSetup* gtk_page_setup_copy(struct _GtkPageSetup* other);
     * }
     */
    public static MemorySegment gtk_page_setup_copy(MemorySegment other) {
        var mh$ = gtk_page_setup_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_get_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$2937.const$5,"gtk_page_setup_get_orientation");
    }
    /**
     * {@snippet :
     * enum GtkPageOrientation gtk_page_setup_get_orientation(struct _GtkPageSetup* setup);
     * }
     */
    public static int gtk_page_setup_get_orientation(MemorySegment setup) {
        var mh$ = gtk_page_setup_get_orientation$MH();
        try {
            return (int)mh$.invokeExact(setup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_set_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$2938.const$0,"gtk_page_setup_set_orientation");
    }
    /**
     * {@snippet :
     * void gtk_page_setup_set_orientation(struct _GtkPageSetup* setup, enum GtkPageOrientation orientation);
     * }
     */
    public static void gtk_page_setup_set_orientation(MemorySegment setup, int orientation) {
        var mh$ = gtk_page_setup_set_orientation$MH();
        try {
            mh$.invokeExact(setup, orientation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_get_paper_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2938.const$1,"gtk_page_setup_get_paper_size");
    }
    /**
     * {@snippet :
     * struct _GtkPaperSize* gtk_page_setup_get_paper_size(struct _GtkPageSetup* setup);
     * }
     */
    public static MemorySegment gtk_page_setup_get_paper_size(MemorySegment setup) {
        var mh$ = gtk_page_setup_get_paper_size$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(setup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_set_paper_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2938.const$2,"gtk_page_setup_set_paper_size");
    }
    /**
     * {@snippet :
     * void gtk_page_setup_set_paper_size(struct _GtkPageSetup* setup, struct _GtkPaperSize* size);
     * }
     */
    public static void gtk_page_setup_set_paper_size(MemorySegment setup, MemorySegment size) {
        var mh$ = gtk_page_setup_set_paper_size$MH();
        try {
            mh$.invokeExact(setup, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_get_top_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$2938.const$3,"gtk_page_setup_get_top_margin");
    }
    /**
     * {@snippet :
     * double gtk_page_setup_get_top_margin(struct _GtkPageSetup* setup, enum GtkUnit unit);
     * }
     */
    public static double gtk_page_setup_get_top_margin(MemorySegment setup, int unit) {
        var mh$ = gtk_page_setup_get_top_margin$MH();
        try {
            return (double)mh$.invokeExact(setup, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_set_top_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$2938.const$5,"gtk_page_setup_set_top_margin");
    }
    /**
     * {@snippet :
     * void gtk_page_setup_set_top_margin(struct _GtkPageSetup* setup, double margin, enum GtkUnit unit);
     * }
     */
    public static void gtk_page_setup_set_top_margin(MemorySegment setup, double margin, int unit) {
        var mh$ = gtk_page_setup_set_top_margin$MH();
        try {
            mh$.invokeExact(setup, margin, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_get_bottom_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$2939.const$0,"gtk_page_setup_get_bottom_margin");
    }
    /**
     * {@snippet :
     * double gtk_page_setup_get_bottom_margin(struct _GtkPageSetup* setup, enum GtkUnit unit);
     * }
     */
    public static double gtk_page_setup_get_bottom_margin(MemorySegment setup, int unit) {
        var mh$ = gtk_page_setup_get_bottom_margin$MH();
        try {
            return (double)mh$.invokeExact(setup, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_set_bottom_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$2939.const$1,"gtk_page_setup_set_bottom_margin");
    }
    /**
     * {@snippet :
     * void gtk_page_setup_set_bottom_margin(struct _GtkPageSetup* setup, double margin, enum GtkUnit unit);
     * }
     */
    public static void gtk_page_setup_set_bottom_margin(MemorySegment setup, double margin, int unit) {
        var mh$ = gtk_page_setup_set_bottom_margin$MH();
        try {
            mh$.invokeExact(setup, margin, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_get_left_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$2939.const$2,"gtk_page_setup_get_left_margin");
    }
    /**
     * {@snippet :
     * double gtk_page_setup_get_left_margin(struct _GtkPageSetup* setup, enum GtkUnit unit);
     * }
     */
    public static double gtk_page_setup_get_left_margin(MemorySegment setup, int unit) {
        var mh$ = gtk_page_setup_get_left_margin$MH();
        try {
            return (double)mh$.invokeExact(setup, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_set_left_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$2939.const$3,"gtk_page_setup_set_left_margin");
    }
    /**
     * {@snippet :
     * void gtk_page_setup_set_left_margin(struct _GtkPageSetup* setup, double margin, enum GtkUnit unit);
     * }
     */
    public static void gtk_page_setup_set_left_margin(MemorySegment setup, double margin, int unit) {
        var mh$ = gtk_page_setup_set_left_margin$MH();
        try {
            mh$.invokeExact(setup, margin, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_get_right_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$2939.const$4,"gtk_page_setup_get_right_margin");
    }
    /**
     * {@snippet :
     * double gtk_page_setup_get_right_margin(struct _GtkPageSetup* setup, enum GtkUnit unit);
     * }
     */
    public static double gtk_page_setup_get_right_margin(MemorySegment setup, int unit) {
        var mh$ = gtk_page_setup_get_right_margin$MH();
        try {
            return (double)mh$.invokeExact(setup, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_set_right_margin$MH() {
        return RuntimeHelper.requireNonNull(constants$2939.const$5,"gtk_page_setup_set_right_margin");
    }
    /**
     * {@snippet :
     * void gtk_page_setup_set_right_margin(struct _GtkPageSetup* setup, double margin, enum GtkUnit unit);
     * }
     */
    public static void gtk_page_setup_set_right_margin(MemorySegment setup, double margin, int unit) {
        var mh$ = gtk_page_setup_set_right_margin$MH();
        try {
            mh$.invokeExact(setup, margin, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_set_paper_size_and_default_margins$MH() {
        return RuntimeHelper.requireNonNull(constants$2940.const$0,"gtk_page_setup_set_paper_size_and_default_margins");
    }
    /**
     * {@snippet :
     * void gtk_page_setup_set_paper_size_and_default_margins(struct _GtkPageSetup* setup, struct _GtkPaperSize* size);
     * }
     */
    public static void gtk_page_setup_set_paper_size_and_default_margins(MemorySegment setup, MemorySegment size) {
        var mh$ = gtk_page_setup_set_paper_size_and_default_margins$MH();
        try {
            mh$.invokeExact(setup, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_get_paper_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2940.const$1,"gtk_page_setup_get_paper_width");
    }
    /**
     * {@snippet :
     * double gtk_page_setup_get_paper_width(struct _GtkPageSetup* setup, enum GtkUnit unit);
     * }
     */
    public static double gtk_page_setup_get_paper_width(MemorySegment setup, int unit) {
        var mh$ = gtk_page_setup_get_paper_width$MH();
        try {
            return (double)mh$.invokeExact(setup, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_get_paper_height$MH() {
        return RuntimeHelper.requireNonNull(constants$2940.const$2,"gtk_page_setup_get_paper_height");
    }
    /**
     * {@snippet :
     * double gtk_page_setup_get_paper_height(struct _GtkPageSetup* setup, enum GtkUnit unit);
     * }
     */
    public static double gtk_page_setup_get_paper_height(MemorySegment setup, int unit) {
        var mh$ = gtk_page_setup_get_paper_height$MH();
        try {
            return (double)mh$.invokeExact(setup, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_get_page_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2940.const$3,"gtk_page_setup_get_page_width");
    }
    /**
     * {@snippet :
     * double gtk_page_setup_get_page_width(struct _GtkPageSetup* setup, enum GtkUnit unit);
     * }
     */
    public static double gtk_page_setup_get_page_width(MemorySegment setup, int unit) {
        var mh$ = gtk_page_setup_get_page_width$MH();
        try {
            return (double)mh$.invokeExact(setup, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_get_page_height$MH() {
        return RuntimeHelper.requireNonNull(constants$2940.const$4,"gtk_page_setup_get_page_height");
    }
    /**
     * {@snippet :
     * double gtk_page_setup_get_page_height(struct _GtkPageSetup* setup, enum GtkUnit unit);
     * }
     */
    public static double gtk_page_setup_get_page_height(MemorySegment setup, int unit) {
        var mh$ = gtk_page_setup_get_page_height$MH();
        try {
            return (double)mh$.invokeExact(setup, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_new_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2940.const$5,"gtk_page_setup_new_from_file");
    }
    /**
     * {@snippet :
     * struct _GtkPageSetup* gtk_page_setup_new_from_file(char* file_name, struct _GError** error);
     * }
     */
    public static MemorySegment gtk_page_setup_new_from_file(MemorySegment file_name, MemorySegment error) {
        var mh$ = gtk_page_setup_new_from_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file_name, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_load_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2941.const$0,"gtk_page_setup_load_file");
    }
    /**
     * {@snippet :
     * int gtk_page_setup_load_file(struct _GtkPageSetup* setup, char* file_name, struct _GError** error);
     * }
     */
    public static int gtk_page_setup_load_file(MemorySegment setup, MemorySegment file_name, MemorySegment error) {
        var mh$ = gtk_page_setup_load_file$MH();
        try {
            return (int)mh$.invokeExact(setup, file_name, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_to_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2941.const$1,"gtk_page_setup_to_file");
    }
    /**
     * {@snippet :
     * int gtk_page_setup_to_file(struct _GtkPageSetup* setup, char* file_name, struct _GError** error);
     * }
     */
    public static int gtk_page_setup_to_file(MemorySegment setup, MemorySegment file_name, MemorySegment error) {
        var mh$ = gtk_page_setup_to_file$MH();
        try {
            return (int)mh$.invokeExact(setup, file_name, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_new_from_key_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2941.const$2,"gtk_page_setup_new_from_key_file");
    }
    /**
     * {@snippet :
     * struct _GtkPageSetup* gtk_page_setup_new_from_key_file(struct _GKeyFile* key_file, char* group_name, struct _GError** error);
     * }
     */
    public static MemorySegment gtk_page_setup_new_from_key_file(MemorySegment key_file, MemorySegment group_name, MemorySegment error) {
        var mh$ = gtk_page_setup_new_from_key_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key_file, group_name, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_load_key_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2941.const$3,"gtk_page_setup_load_key_file");
    }
    /**
     * {@snippet :
     * int gtk_page_setup_load_key_file(struct _GtkPageSetup* setup, struct _GKeyFile* key_file, char* group_name, struct _GError** error);
     * }
     */
    public static int gtk_page_setup_load_key_file(MemorySegment setup, MemorySegment key_file, MemorySegment group_name, MemorySegment error) {
        var mh$ = gtk_page_setup_load_key_file$MH();
        try {
            return (int)mh$.invokeExact(setup, key_file, group_name, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_to_key_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2941.const$4,"gtk_page_setup_to_key_file");
    }
    /**
     * {@snippet :
     * void gtk_page_setup_to_key_file(struct _GtkPageSetup* setup, struct _GKeyFile* key_file, char* group_name);
     * }
     */
    public static void gtk_page_setup_to_key_file(MemorySegment setup, MemorySegment key_file, MemorySegment group_name) {
        var mh$ = gtk_page_setup_to_key_file$MH();
        try {
            mh$.invokeExact(setup, key_file, group_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_to_gvariant$MH() {
        return RuntimeHelper.requireNonNull(constants$2941.const$5,"gtk_page_setup_to_gvariant");
    }
    /**
     * {@snippet :
     * struct _GVariant* gtk_page_setup_to_gvariant(struct _GtkPageSetup* setup);
     * }
     */
    public static MemorySegment gtk_page_setup_to_gvariant(MemorySegment setup) {
        var mh$ = gtk_page_setup_to_gvariant$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(setup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_page_setup_new_from_gvariant$MH() {
        return RuntimeHelper.requireNonNull(constants$2942.const$0,"gtk_page_setup_new_from_gvariant");
    }
    /**
     * {@snippet :
     * struct _GtkPageSetup* gtk_page_setup_new_from_gvariant(struct _GVariant* variant);
     * }
     */
    public static MemorySegment gtk_page_setup_new_from_gvariant(MemorySegment variant) {
        var mh$ = gtk_page_setup_new_from_gvariant$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(variant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paned_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2946.const$0,"gtk_paned_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_paned_get_type();
     * }
     */
    public static long gtk_paned_get_type() {
        var mh$ = gtk_paned_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paned_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2946.const$1,"gtk_paned_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_paned_new(enum GtkOrientation orientation);
     * }
     */
    public static MemorySegment gtk_paned_new(int orientation) {
        var mh$ = gtk_paned_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(orientation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paned_add1$MH() {
        return RuntimeHelper.requireNonNull(constants$2946.const$2,"gtk_paned_add1");
    }
    /**
     * {@snippet :
     * void gtk_paned_add1(struct _GtkPaned* paned, struct _GtkWidget* child);
     * }
     */
    public static void gtk_paned_add1(MemorySegment paned, MemorySegment child) {
        var mh$ = gtk_paned_add1$MH();
        try {
            mh$.invokeExact(paned, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paned_add2$MH() {
        return RuntimeHelper.requireNonNull(constants$2946.const$3,"gtk_paned_add2");
    }
    /**
     * {@snippet :
     * void gtk_paned_add2(struct _GtkPaned* paned, struct _GtkWidget* child);
     * }
     */
    public static void gtk_paned_add2(MemorySegment paned, MemorySegment child) {
        var mh$ = gtk_paned_add2$MH();
        try {
            mh$.invokeExact(paned, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paned_pack1$MH() {
        return RuntimeHelper.requireNonNull(constants$2946.const$4,"gtk_paned_pack1");
    }
    /**
     * {@snippet :
     * void gtk_paned_pack1(struct _GtkPaned* paned, struct _GtkWidget* child, int resize, int shrink);
     * }
     */
    public static void gtk_paned_pack1(MemorySegment paned, MemorySegment child, int resize, int shrink) {
        var mh$ = gtk_paned_pack1$MH();
        try {
            mh$.invokeExact(paned, child, resize, shrink);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paned_pack2$MH() {
        return RuntimeHelper.requireNonNull(constants$2946.const$5,"gtk_paned_pack2");
    }
    /**
     * {@snippet :
     * void gtk_paned_pack2(struct _GtkPaned* paned, struct _GtkWidget* child, int resize, int shrink);
     * }
     */
    public static void gtk_paned_pack2(MemorySegment paned, MemorySegment child, int resize, int shrink) {
        var mh$ = gtk_paned_pack2$MH();
        try {
            mh$.invokeExact(paned, child, resize, shrink);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paned_get_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2947.const$0,"gtk_paned_get_position");
    }
    /**
     * {@snippet :
     * int gtk_paned_get_position(struct _GtkPaned* paned);
     * }
     */
    public static int gtk_paned_get_position(MemorySegment paned) {
        var mh$ = gtk_paned_get_position$MH();
        try {
            return (int)mh$.invokeExact(paned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paned_set_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2947.const$1,"gtk_paned_set_position");
    }
    /**
     * {@snippet :
     * void gtk_paned_set_position(struct _GtkPaned* paned, int position);
     * }
     */
    public static void gtk_paned_set_position(MemorySegment paned, int position) {
        var mh$ = gtk_paned_set_position$MH();
        try {
            mh$.invokeExact(paned, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paned_get_child1$MH() {
        return RuntimeHelper.requireNonNull(constants$2947.const$2,"gtk_paned_get_child1");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_paned_get_child1(struct _GtkPaned* paned);
     * }
     */
    public static MemorySegment gtk_paned_get_child1(MemorySegment paned) {
        var mh$ = gtk_paned_get_child1$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(paned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paned_get_child2$MH() {
        return RuntimeHelper.requireNonNull(constants$2947.const$3,"gtk_paned_get_child2");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_paned_get_child2(struct _GtkPaned* paned);
     * }
     */
    public static MemorySegment gtk_paned_get_child2(MemorySegment paned) {
        var mh$ = gtk_paned_get_child2$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(paned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paned_get_handle_window$MH() {
        return RuntimeHelper.requireNonNull(constants$2947.const$4,"gtk_paned_get_handle_window");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gtk_paned_get_handle_window(struct _GtkPaned* paned);
     * }
     */
    public static MemorySegment gtk_paned_get_handle_window(MemorySegment paned) {
        var mh$ = gtk_paned_get_handle_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(paned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paned_set_wide_handle$MH() {
        return RuntimeHelper.requireNonNull(constants$2947.const$5,"gtk_paned_set_wide_handle");
    }
    /**
     * {@snippet :
     * void gtk_paned_set_wide_handle(struct _GtkPaned* paned, int wide);
     * }
     */
    public static void gtk_paned_set_wide_handle(MemorySegment paned, int wide) {
        var mh$ = gtk_paned_set_wide_handle$MH();
        try {
            mh$.invokeExact(paned, wide);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_paned_get_wide_handle$MH() {
        return RuntimeHelper.requireNonNull(constants$2948.const$0,"gtk_paned_get_wide_handle");
    }
    /**
     * {@snippet :
     * int gtk_paned_get_wide_handle(struct _GtkPaned* paned);
     * }
     */
    public static int gtk_paned_get_wide_handle(MemorySegment paned) {
        var mh$ = gtk_paned_get_wide_handle$MH();
        try {
            return (int)mh$.invokeExact(paned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkPlacesOpenFlags.GTK_PLACES_OPEN_NORMAL = 1;
     * }
     */
    public static int GTK_PLACES_OPEN_NORMAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkPlacesOpenFlags.GTK_PLACES_OPEN_NEW_TAB = 2;
     * }
     */
    public static int GTK_PLACES_OPEN_NEW_TAB() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkPlacesOpenFlags.GTK_PLACES_OPEN_NEW_WINDOW = 4;
     * }
     */
    public static int GTK_PLACES_OPEN_NEW_WINDOW() {
        return (int)4L;
    }
    public static MethodHandle gtk_places_sidebar_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2948.const$1,"gtk_places_sidebar_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_places_sidebar_get_type();
     * }
     */
    public static long gtk_places_sidebar_get_type() {
        var mh$ = gtk_places_sidebar_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_places_sidebar_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2948.const$2,"gtk_places_sidebar_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_places_sidebar_new();
     * }
     */
    public static MemorySegment gtk_places_sidebar_new() {
        var mh$ = gtk_places_sidebar_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_places_sidebar_get_open_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$2948.const$3,"gtk_places_sidebar_get_open_flags");
    }
    /**
     * {@snippet :
     * enum GtkPlacesOpenFlags gtk_places_sidebar_get_open_flags(struct _GtkPlacesSidebar* sidebar);
     * }
     */
    public static int gtk_places_sidebar_get_open_flags(MemorySegment sidebar) {
        var mh$ = gtk_places_sidebar_get_open_flags$MH();
        try {
            return (int)mh$.invokeExact(sidebar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_places_sidebar_set_open_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$2948.const$4,"gtk_places_sidebar_set_open_flags");
    }
    /**
     * {@snippet :
     * void gtk_places_sidebar_set_open_flags(struct _GtkPlacesSidebar* sidebar, enum GtkPlacesOpenFlags flags);
     * }
     */
    public static void gtk_places_sidebar_set_open_flags(MemorySegment sidebar, int flags) {
        var mh$ = gtk_places_sidebar_set_open_flags$MH();
        try {
            mh$.invokeExact(sidebar, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_places_sidebar_get_location$MH() {
        return RuntimeHelper.requireNonNull(constants$2948.const$5,"gtk_places_sidebar_get_location");
    }
    /**
     * {@snippet :
     * struct _GFile* gtk_places_sidebar_get_location(struct _GtkPlacesSidebar* sidebar);
     * }
     */
    public static MemorySegment gtk_places_sidebar_get_location(MemorySegment sidebar) {
        var mh$ = gtk_places_sidebar_get_location$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(sidebar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_places_sidebar_set_location$MH() {
        return RuntimeHelper.requireNonNull(constants$2949.const$0,"gtk_places_sidebar_set_location");
    }
    /**
     * {@snippet :
     * void gtk_places_sidebar_set_location(struct _GtkPlacesSidebar* sidebar, struct _GFile* location);
     * }
     */
    public static void gtk_places_sidebar_set_location(MemorySegment sidebar, MemorySegment location) {
        var mh$ = gtk_places_sidebar_set_location$MH();
        try {
            mh$.invokeExact(sidebar, location);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_places_sidebar_get_show_recent$MH() {
        return RuntimeHelper.requireNonNull(constants$2949.const$1,"gtk_places_sidebar_get_show_recent");
    }
    /**
     * {@snippet :
     * int gtk_places_sidebar_get_show_recent(struct _GtkPlacesSidebar* sidebar);
     * }
     */
    public static int gtk_places_sidebar_get_show_recent(MemorySegment sidebar) {
        var mh$ = gtk_places_sidebar_get_show_recent$MH();
        try {
            return (int)mh$.invokeExact(sidebar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_places_sidebar_set_show_recent$MH() {
        return RuntimeHelper.requireNonNull(constants$2949.const$2,"gtk_places_sidebar_set_show_recent");
    }
    /**
     * {@snippet :
     * void gtk_places_sidebar_set_show_recent(struct _GtkPlacesSidebar* sidebar, int show_recent);
     * }
     */
    public static void gtk_places_sidebar_set_show_recent(MemorySegment sidebar, int show_recent) {
        var mh$ = gtk_places_sidebar_set_show_recent$MH();
        try {
            mh$.invokeExact(sidebar, show_recent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_places_sidebar_get_show_desktop$MH() {
        return RuntimeHelper.requireNonNull(constants$2949.const$3,"gtk_places_sidebar_get_show_desktop");
    }
    /**
     * {@snippet :
     * int gtk_places_sidebar_get_show_desktop(struct _GtkPlacesSidebar* sidebar);
     * }
     */
    public static int gtk_places_sidebar_get_show_desktop(MemorySegment sidebar) {
        var mh$ = gtk_places_sidebar_get_show_desktop$MH();
        try {
            return (int)mh$.invokeExact(sidebar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_places_sidebar_set_show_desktop$MH() {
        return RuntimeHelper.requireNonNull(constants$2949.const$4,"gtk_places_sidebar_set_show_desktop");
    }
    /**
     * {@snippet :
     * void gtk_places_sidebar_set_show_desktop(struct _GtkPlacesSidebar* sidebar, int show_desktop);
     * }
     */
    public static void gtk_places_sidebar_set_show_desktop(MemorySegment sidebar, int show_desktop) {
        var mh$ = gtk_places_sidebar_set_show_desktop$MH();
        try {
            mh$.invokeExact(sidebar, show_desktop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_places_sidebar_get_show_connect_to_server$MH() {
        return RuntimeHelper.requireNonNull(constants$2949.const$5,"gtk_places_sidebar_get_show_connect_to_server");
    }
    /**
     * {@snippet :
     * int gtk_places_sidebar_get_show_connect_to_server(struct _GtkPlacesSidebar* sidebar);
     * }
     */
    public static int gtk_places_sidebar_get_show_connect_to_server(MemorySegment sidebar) {
        var mh$ = gtk_places_sidebar_get_show_connect_to_server$MH();
        try {
            return (int)mh$.invokeExact(sidebar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_places_sidebar_set_show_connect_to_server$MH() {
        return RuntimeHelper.requireNonNull(constants$2950.const$0,"gtk_places_sidebar_set_show_connect_to_server");
    }
    /**
     * {@snippet :
     * void gtk_places_sidebar_set_show_connect_to_server(struct _GtkPlacesSidebar* sidebar, int show_connect_to_server);
     * }
     */
    public static void gtk_places_sidebar_set_show_connect_to_server(MemorySegment sidebar, int show_connect_to_server) {
        var mh$ = gtk_places_sidebar_set_show_connect_to_server$MH();
        try {
            mh$.invokeExact(sidebar, show_connect_to_server);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_places_sidebar_get_show_enter_location$MH() {
        return RuntimeHelper.requireNonNull(constants$2950.const$1,"gtk_places_sidebar_get_show_enter_location");
    }
    /**
     * {@snippet :
     * int gtk_places_sidebar_get_show_enter_location(struct _GtkPlacesSidebar* sidebar);
     * }
     */
    public static int gtk_places_sidebar_get_show_enter_location(MemorySegment sidebar) {
        var mh$ = gtk_places_sidebar_get_show_enter_location$MH();
        try {
            return (int)mh$.invokeExact(sidebar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_places_sidebar_set_show_enter_location$MH() {
        return RuntimeHelper.requireNonNull(constants$2950.const$2,"gtk_places_sidebar_set_show_enter_location");
    }
    /**
     * {@snippet :
     * void gtk_places_sidebar_set_show_enter_location(struct _GtkPlacesSidebar* sidebar, int show_enter_location);
     * }
     */
    public static void gtk_places_sidebar_set_show_enter_location(MemorySegment sidebar, int show_enter_location) {
        var mh$ = gtk_places_sidebar_set_show_enter_location$MH();
        try {
            mh$.invokeExact(sidebar, show_enter_location);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_places_sidebar_set_local_only$MH() {
        return RuntimeHelper.requireNonNull(constants$2950.const$3,"gtk_places_sidebar_set_local_only");
    }
    /**
     * {@snippet :
     * void gtk_places_sidebar_set_local_only(struct _GtkPlacesSidebar* sidebar, int local_only);
     * }
     */
    public static void gtk_places_sidebar_set_local_only(MemorySegment sidebar, int local_only) {
        var mh$ = gtk_places_sidebar_set_local_only$MH();
        try {
            mh$.invokeExact(sidebar, local_only);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_places_sidebar_get_local_only$MH() {
        return RuntimeHelper.requireNonNull(constants$2950.const$4,"gtk_places_sidebar_get_local_only");
    }
    /**
     * {@snippet :
     * int gtk_places_sidebar_get_local_only(struct _GtkPlacesSidebar* sidebar);
     * }
     */
    public static int gtk_places_sidebar_get_local_only(MemorySegment sidebar) {
        var mh$ = gtk_places_sidebar_get_local_only$MH();
        try {
            return (int)mh$.invokeExact(sidebar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_places_sidebar_add_shortcut$MH() {
        return RuntimeHelper.requireNonNull(constants$2950.const$5,"gtk_places_sidebar_add_shortcut");
    }
    /**
     * {@snippet :
     * void gtk_places_sidebar_add_shortcut(struct _GtkPlacesSidebar* sidebar, struct _GFile* location);
     * }
     */
    public static void gtk_places_sidebar_add_shortcut(MemorySegment sidebar, MemorySegment location) {
        var mh$ = gtk_places_sidebar_add_shortcut$MH();
        try {
            mh$.invokeExact(sidebar, location);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_places_sidebar_remove_shortcut$MH() {
        return RuntimeHelper.requireNonNull(constants$2951.const$0,"gtk_places_sidebar_remove_shortcut");
    }
    /**
     * {@snippet :
     * void gtk_places_sidebar_remove_shortcut(struct _GtkPlacesSidebar* sidebar, struct _GFile* location);
     * }
     */
    public static void gtk_places_sidebar_remove_shortcut(MemorySegment sidebar, MemorySegment location) {
        var mh$ = gtk_places_sidebar_remove_shortcut$MH();
        try {
            mh$.invokeExact(sidebar, location);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_places_sidebar_list_shortcuts$MH() {
        return RuntimeHelper.requireNonNull(constants$2951.const$1,"gtk_places_sidebar_list_shortcuts");
    }
    /**
     * {@snippet :
     * struct _GSList* gtk_places_sidebar_list_shortcuts(struct _GtkPlacesSidebar* sidebar);
     * }
     */
    public static MemorySegment gtk_places_sidebar_list_shortcuts(MemorySegment sidebar) {
        var mh$ = gtk_places_sidebar_list_shortcuts$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(sidebar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_places_sidebar_get_nth_bookmark$MH() {
        return RuntimeHelper.requireNonNull(constants$2951.const$2,"gtk_places_sidebar_get_nth_bookmark");
    }
    /**
     * {@snippet :
     * struct _GFile* gtk_places_sidebar_get_nth_bookmark(struct _GtkPlacesSidebar* sidebar, int n);
     * }
     */
    public static MemorySegment gtk_places_sidebar_get_nth_bookmark(MemorySegment sidebar, int n) {
        var mh$ = gtk_places_sidebar_get_nth_bookmark$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(sidebar, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_places_sidebar_set_drop_targets_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$2951.const$3,"gtk_places_sidebar_set_drop_targets_visible");
    }
    /**
     * {@snippet :
     * void gtk_places_sidebar_set_drop_targets_visible(struct _GtkPlacesSidebar* sidebar, int visible, struct _GdkDragContext* context);
     * }
     */
    public static void gtk_places_sidebar_set_drop_targets_visible(MemorySegment sidebar, int visible, MemorySegment context) {
        var mh$ = gtk_places_sidebar_set_drop_targets_visible$MH();
        try {
            mh$.invokeExact(sidebar, visible, context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_places_sidebar_get_show_trash$MH() {
        return RuntimeHelper.requireNonNull(constants$2951.const$4,"gtk_places_sidebar_get_show_trash");
    }
    /**
     * {@snippet :
     * int gtk_places_sidebar_get_show_trash(struct _GtkPlacesSidebar* sidebar);
     * }
     */
    public static int gtk_places_sidebar_get_show_trash(MemorySegment sidebar) {
        var mh$ = gtk_places_sidebar_get_show_trash$MH();
        try {
            return (int)mh$.invokeExact(sidebar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_places_sidebar_set_show_trash$MH() {
        return RuntimeHelper.requireNonNull(constants$2951.const$5,"gtk_places_sidebar_set_show_trash");
    }
    /**
     * {@snippet :
     * void gtk_places_sidebar_set_show_trash(struct _GtkPlacesSidebar* sidebar, int show_trash);
     * }
     */
    public static void gtk_places_sidebar_set_show_trash(MemorySegment sidebar, int show_trash) {
        var mh$ = gtk_places_sidebar_set_show_trash$MH();
        try {
            mh$.invokeExact(sidebar, show_trash);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_places_sidebar_set_show_other_locations$MH() {
        return RuntimeHelper.requireNonNull(constants$2952.const$0,"gtk_places_sidebar_set_show_other_locations");
    }
    /**
     * {@snippet :
     * void gtk_places_sidebar_set_show_other_locations(struct _GtkPlacesSidebar* sidebar, int show_other_locations);
     * }
     */
    public static void gtk_places_sidebar_set_show_other_locations(MemorySegment sidebar, int show_other_locations) {
        var mh$ = gtk_places_sidebar_set_show_other_locations$MH();
        try {
            mh$.invokeExact(sidebar, show_other_locations);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_places_sidebar_get_show_other_locations$MH() {
        return RuntimeHelper.requireNonNull(constants$2952.const$1,"gtk_places_sidebar_get_show_other_locations");
    }
    /**
     * {@snippet :
     * int gtk_places_sidebar_get_show_other_locations(struct _GtkPlacesSidebar* sidebar);
     * }
     */
    public static int gtk_places_sidebar_get_show_other_locations(MemorySegment sidebar) {
        var mh$ = gtk_places_sidebar_get_show_other_locations$MH();
        try {
            return (int)mh$.invokeExact(sidebar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_places_sidebar_set_show_starred_location$MH() {
        return RuntimeHelper.requireNonNull(constants$2952.const$2,"gtk_places_sidebar_set_show_starred_location");
    }
    /**
     * {@snippet :
     * void gtk_places_sidebar_set_show_starred_location(struct _GtkPlacesSidebar* sidebar, int show_starred_location);
     * }
     */
    public static void gtk_places_sidebar_set_show_starred_location(MemorySegment sidebar, int show_starred_location) {
        var mh$ = gtk_places_sidebar_set_show_starred_location$MH();
        try {
            mh$.invokeExact(sidebar, show_starred_location);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_places_sidebar_get_show_starred_location$MH() {
        return RuntimeHelper.requireNonNull(constants$2952.const$3,"gtk_places_sidebar_get_show_starred_location");
    }
    /**
     * {@snippet :
     * int gtk_places_sidebar_get_show_starred_location(struct _GtkPlacesSidebar* sidebar);
     * }
     */
    public static int gtk_places_sidebar_get_show_starred_location(MemorySegment sidebar) {
        var mh$ = gtk_places_sidebar_get_show_starred_location$MH();
        try {
            return (int)mh$.invokeExact(sidebar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_menu_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2952.const$5,"gtk_popover_menu_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_popover_menu_get_type();
     * }
     */
    public static long gtk_popover_menu_get_type() {
        var mh$ = gtk_popover_menu_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_menu_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2953.const$0,"gtk_popover_menu_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_popover_menu_new();
     * }
     */
    public static MemorySegment gtk_popover_menu_new() {
        var mh$ = gtk_popover_menu_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_popover_menu_open_submenu$MH() {
        return RuntimeHelper.requireNonNull(constants$2953.const$1,"gtk_popover_menu_open_submenu");
    }
    /**
     * {@snippet :
     * void gtk_popover_menu_open_submenu(struct _GtkPopoverMenu* popover, char* name);
     * }
     */
    public static void gtk_popover_menu_open_submenu(MemorySegment popover, MemorySegment name) {
        var mh$ = gtk_popover_menu_open_submenu$MH();
        try {
            mh$.invokeExact(popover, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_context_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2953.const$2,"gtk_print_context_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_print_context_get_type();
     * }
     */
    public static long gtk_print_context_get_type() {
        var mh$ = gtk_print_context_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_context_get_cairo_context$MH() {
        return RuntimeHelper.requireNonNull(constants$2953.const$3,"gtk_print_context_get_cairo_context");
    }
    /**
     * {@snippet :
     * struct _cairo* gtk_print_context_get_cairo_context(struct _GtkPrintContext* context);
     * }
     */
    public static MemorySegment gtk_print_context_get_cairo_context(MemorySegment context) {
        var mh$ = gtk_print_context_get_cairo_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_context_get_page_setup$MH() {
        return RuntimeHelper.requireNonNull(constants$2953.const$4,"gtk_print_context_get_page_setup");
    }
    /**
     * {@snippet :
     * struct _GtkPageSetup* gtk_print_context_get_page_setup(struct _GtkPrintContext* context);
     * }
     */
    public static MemorySegment gtk_print_context_get_page_setup(MemorySegment context) {
        var mh$ = gtk_print_context_get_page_setup$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_context_get_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2953.const$5,"gtk_print_context_get_width");
    }
    /**
     * {@snippet :
     * double gtk_print_context_get_width(struct _GtkPrintContext* context);
     * }
     */
    public static double gtk_print_context_get_width(MemorySegment context) {
        var mh$ = gtk_print_context_get_width$MH();
        try {
            return (double)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_context_get_height$MH() {
        return RuntimeHelper.requireNonNull(constants$2954.const$0,"gtk_print_context_get_height");
    }
    /**
     * {@snippet :
     * double gtk_print_context_get_height(struct _GtkPrintContext* context);
     * }
     */
    public static double gtk_print_context_get_height(MemorySegment context) {
        var mh$ = gtk_print_context_get_height$MH();
        try {
            return (double)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_context_get_dpi_x$MH() {
        return RuntimeHelper.requireNonNull(constants$2954.const$1,"gtk_print_context_get_dpi_x");
    }
    /**
     * {@snippet :
     * double gtk_print_context_get_dpi_x(struct _GtkPrintContext* context);
     * }
     */
    public static double gtk_print_context_get_dpi_x(MemorySegment context) {
        var mh$ = gtk_print_context_get_dpi_x$MH();
        try {
            return (double)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_context_get_dpi_y$MH() {
        return RuntimeHelper.requireNonNull(constants$2954.const$2,"gtk_print_context_get_dpi_y");
    }
    /**
     * {@snippet :
     * double gtk_print_context_get_dpi_y(struct _GtkPrintContext* context);
     * }
     */
    public static double gtk_print_context_get_dpi_y(MemorySegment context) {
        var mh$ = gtk_print_context_get_dpi_y$MH();
        try {
            return (double)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_context_get_hard_margins$MH() {
        return RuntimeHelper.requireNonNull(constants$2954.const$3,"gtk_print_context_get_hard_margins");
    }
    /**
     * {@snippet :
     * int gtk_print_context_get_hard_margins(struct _GtkPrintContext* context, double* top, double* bottom, double* left, double* right);
     * }
     */
    public static int gtk_print_context_get_hard_margins(MemorySegment context, MemorySegment top, MemorySegment bottom, MemorySegment left, MemorySegment right) {
        var mh$ = gtk_print_context_get_hard_margins$MH();
        try {
            return (int)mh$.invokeExact(context, top, bottom, left, right);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_context_get_pango_fontmap$MH() {
        return RuntimeHelper.requireNonNull(constants$2954.const$4,"gtk_print_context_get_pango_fontmap");
    }
    /**
     * {@snippet :
     * struct _PangoFontMap* gtk_print_context_get_pango_fontmap(struct _GtkPrintContext* context);
     * }
     */
    public static MemorySegment gtk_print_context_get_pango_fontmap(MemorySegment context) {
        var mh$ = gtk_print_context_get_pango_fontmap$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_context_create_pango_context$MH() {
        return RuntimeHelper.requireNonNull(constants$2954.const$5,"gtk_print_context_create_pango_context");
    }
    /**
     * {@snippet :
     * struct _PangoContext* gtk_print_context_create_pango_context(struct _GtkPrintContext* context);
     * }
     */
    public static MemorySegment gtk_print_context_create_pango_context(MemorySegment context) {
        var mh$ = gtk_print_context_create_pango_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_context_create_pango_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$2955.const$0,"gtk_print_context_create_pango_layout");
    }
    /**
     * {@snippet :
     * struct _PangoLayout* gtk_print_context_create_pango_layout(struct _GtkPrintContext* context);
     * }
     */
    public static MemorySegment gtk_print_context_create_pango_layout(MemorySegment context) {
        var mh$ = gtk_print_context_create_pango_layout$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_context_set_cairo_context$MH() {
        return RuntimeHelper.requireNonNull(constants$2955.const$1,"gtk_print_context_set_cairo_context");
    }
    /**
     * {@snippet :
     * void gtk_print_context_set_cairo_context(struct _GtkPrintContext* context, struct _cairo* cr, double dpi_x, double dpi_y);
     * }
     */
    public static void gtk_print_context_set_cairo_context(MemorySegment context, MemorySegment cr, double dpi_x, double dpi_y) {
        var mh$ = gtk_print_context_set_cairo_context$MH();
        try {
            mh$.invokeExact(context, cr, dpi_x, dpi_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2956.const$0,"gtk_print_settings_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_print_settings_get_type();
     * }
     */
    public static long gtk_print_settings_get_type() {
        var mh$ = gtk_print_settings_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2956.const$1,"gtk_print_settings_new");
    }
    /**
     * {@snippet :
     * struct _GtkPrintSettings* gtk_print_settings_new();
     * }
     */
    public static MemorySegment gtk_print_settings_new() {
        var mh$ = gtk_print_settings_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$2956.const$2,"gtk_print_settings_copy");
    }
    /**
     * {@snippet :
     * struct _GtkPrintSettings* gtk_print_settings_copy(struct _GtkPrintSettings* other);
     * }
     */
    public static MemorySegment gtk_print_settings_copy(MemorySegment other) {
        var mh$ = gtk_print_settings_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_new_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2956.const$3,"gtk_print_settings_new_from_file");
    }
    /**
     * {@snippet :
     * struct _GtkPrintSettings* gtk_print_settings_new_from_file(char* file_name, struct _GError** error);
     * }
     */
    public static MemorySegment gtk_print_settings_new_from_file(MemorySegment file_name, MemorySegment error) {
        var mh$ = gtk_print_settings_new_from_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(file_name, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_load_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2956.const$4,"gtk_print_settings_load_file");
    }
    /**
     * {@snippet :
     * int gtk_print_settings_load_file(struct _GtkPrintSettings* settings, char* file_name, struct _GError** error);
     * }
     */
    public static int gtk_print_settings_load_file(MemorySegment settings, MemorySegment file_name, MemorySegment error) {
        var mh$ = gtk_print_settings_load_file$MH();
        try {
            return (int)mh$.invokeExact(settings, file_name, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_to_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2956.const$5,"gtk_print_settings_to_file");
    }
    /**
     * {@snippet :
     * int gtk_print_settings_to_file(struct _GtkPrintSettings* settings, char* file_name, struct _GError** error);
     * }
     */
    public static int gtk_print_settings_to_file(MemorySegment settings, MemorySegment file_name, MemorySegment error) {
        var mh$ = gtk_print_settings_to_file$MH();
        try {
            return (int)mh$.invokeExact(settings, file_name, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_new_from_key_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2957.const$0,"gtk_print_settings_new_from_key_file");
    }
    /**
     * {@snippet :
     * struct _GtkPrintSettings* gtk_print_settings_new_from_key_file(struct _GKeyFile* key_file, char* group_name, struct _GError** error);
     * }
     */
    public static MemorySegment gtk_print_settings_new_from_key_file(MemorySegment key_file, MemorySegment group_name, MemorySegment error) {
        var mh$ = gtk_print_settings_new_from_key_file$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(key_file, group_name, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_load_key_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2957.const$1,"gtk_print_settings_load_key_file");
    }
    /**
     * {@snippet :
     * int gtk_print_settings_load_key_file(struct _GtkPrintSettings* settings, struct _GKeyFile* key_file, char* group_name, struct _GError** error);
     * }
     */
    public static int gtk_print_settings_load_key_file(MemorySegment settings, MemorySegment key_file, MemorySegment group_name, MemorySegment error) {
        var mh$ = gtk_print_settings_load_key_file$MH();
        try {
            return (int)mh$.invokeExact(settings, key_file, group_name, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_to_key_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2957.const$2,"gtk_print_settings_to_key_file");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_to_key_file(struct _GtkPrintSettings* settings, struct _GKeyFile* key_file, char* group_name);
     * }
     */
    public static void gtk_print_settings_to_key_file(MemorySegment settings, MemorySegment key_file, MemorySegment group_name) {
        var mh$ = gtk_print_settings_to_key_file$MH();
        try {
            mh$.invokeExact(settings, key_file, group_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_has_key$MH() {
        return RuntimeHelper.requireNonNull(constants$2957.const$3,"gtk_print_settings_has_key");
    }
    /**
     * {@snippet :
     * int gtk_print_settings_has_key(struct _GtkPrintSettings* settings, char* key);
     * }
     */
    public static int gtk_print_settings_has_key(MemorySegment settings, MemorySegment key) {
        var mh$ = gtk_print_settings_has_key$MH();
        try {
            return (int)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get$MH() {
        return RuntimeHelper.requireNonNull(constants$2957.const$4,"gtk_print_settings_get");
    }
    /**
     * {@snippet :
     * char* gtk_print_settings_get(struct _GtkPrintSettings* settings, char* key);
     * }
     */
    public static MemorySegment gtk_print_settings_get(MemorySegment settings, MemorySegment key) {
        var mh$ = gtk_print_settings_get$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set$MH() {
        return RuntimeHelper.requireNonNull(constants$2957.const$5,"gtk_print_settings_set");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set(struct _GtkPrintSettings* settings, char* key, char* value);
     * }
     */
    public static void gtk_print_settings_set(MemorySegment settings, MemorySegment key, MemorySegment value) {
        var mh$ = gtk_print_settings_set$MH();
        try {
            mh$.invokeExact(settings, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_unset$MH() {
        return RuntimeHelper.requireNonNull(constants$2958.const$0,"gtk_print_settings_unset");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_unset(struct _GtkPrintSettings* settings, char* key);
     * }
     */
    public static void gtk_print_settings_unset(MemorySegment settings, MemorySegment key) {
        var mh$ = gtk_print_settings_unset$MH();
        try {
            mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$2958.const$2,"gtk_print_settings_foreach");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_foreach(struct _GtkPrintSettings* settings, void (*func)(char*,char*,void*), void* user_data);
     * }
     */
    public static void gtk_print_settings_foreach(MemorySegment settings, MemorySegment func, MemorySegment user_data) {
        var mh$ = gtk_print_settings_foreach$MH();
        try {
            mh$.invokeExact(settings, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_bool$MH() {
        return RuntimeHelper.requireNonNull(constants$2958.const$3,"gtk_print_settings_get_bool");
    }
    /**
     * {@snippet :
     * int gtk_print_settings_get_bool(struct _GtkPrintSettings* settings, char* key);
     * }
     */
    public static int gtk_print_settings_get_bool(MemorySegment settings, MemorySegment key) {
        var mh$ = gtk_print_settings_get_bool$MH();
        try {
            return (int)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_bool$MH() {
        return RuntimeHelper.requireNonNull(constants$2958.const$4,"gtk_print_settings_set_bool");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_bool(struct _GtkPrintSettings* settings, char* key, int value);
     * }
     */
    public static void gtk_print_settings_set_bool(MemorySegment settings, MemorySegment key, int value) {
        var mh$ = gtk_print_settings_set_bool$MH();
        try {
            mh$.invokeExact(settings, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_double$MH() {
        return RuntimeHelper.requireNonNull(constants$2958.const$5,"gtk_print_settings_get_double");
    }
    /**
     * {@snippet :
     * double gtk_print_settings_get_double(struct _GtkPrintSettings* settings, char* key);
     * }
     */
    public static double gtk_print_settings_get_double(MemorySegment settings, MemorySegment key) {
        var mh$ = gtk_print_settings_get_double$MH();
        try {
            return (double)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_double_with_default$MH() {
        return RuntimeHelper.requireNonNull(constants$2959.const$1,"gtk_print_settings_get_double_with_default");
    }
    /**
     * {@snippet :
     * double gtk_print_settings_get_double_with_default(struct _GtkPrintSettings* settings, char* key, double def);
     * }
     */
    public static double gtk_print_settings_get_double_with_default(MemorySegment settings, MemorySegment key, double def) {
        var mh$ = gtk_print_settings_get_double_with_default$MH();
        try {
            return (double)mh$.invokeExact(settings, key, def);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_double$MH() {
        return RuntimeHelper.requireNonNull(constants$2959.const$2,"gtk_print_settings_set_double");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_double(struct _GtkPrintSettings* settings, char* key, double value);
     * }
     */
    public static void gtk_print_settings_set_double(MemorySegment settings, MemorySegment key, double value) {
        var mh$ = gtk_print_settings_set_double$MH();
        try {
            mh$.invokeExact(settings, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_length$MH() {
        return RuntimeHelper.requireNonNull(constants$2959.const$4,"gtk_print_settings_get_length");
    }
    /**
     * {@snippet :
     * double gtk_print_settings_get_length(struct _GtkPrintSettings* settings, char* key, enum GtkUnit unit);
     * }
     */
    public static double gtk_print_settings_get_length(MemorySegment settings, MemorySegment key, int unit) {
        var mh$ = gtk_print_settings_get_length$MH();
        try {
            return (double)mh$.invokeExact(settings, key, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_length$MH() {
        return RuntimeHelper.requireNonNull(constants$2959.const$6,"gtk_print_settings_set_length");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_length(struct _GtkPrintSettings* settings, char* key, double value, enum GtkUnit unit);
     * }
     */
    public static void gtk_print_settings_set_length(MemorySegment settings, MemorySegment key, double value, int unit) {
        var mh$ = gtk_print_settings_set_length$MH();
        try {
            mh$.invokeExact(settings, key, value, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_int$MH() {
        return RuntimeHelper.requireNonNull(constants$2960.const$0,"gtk_print_settings_get_int");
    }
    /**
     * {@snippet :
     * int gtk_print_settings_get_int(struct _GtkPrintSettings* settings, char* key);
     * }
     */
    public static int gtk_print_settings_get_int(MemorySegment settings, MemorySegment key) {
        var mh$ = gtk_print_settings_get_int$MH();
        try {
            return (int)mh$.invokeExact(settings, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_int_with_default$MH() {
        return RuntimeHelper.requireNonNull(constants$2960.const$1,"gtk_print_settings_get_int_with_default");
    }
    /**
     * {@snippet :
     * int gtk_print_settings_get_int_with_default(struct _GtkPrintSettings* settings, char* key, int def);
     * }
     */
    public static int gtk_print_settings_get_int_with_default(MemorySegment settings, MemorySegment key, int def) {
        var mh$ = gtk_print_settings_get_int_with_default$MH();
        try {
            return (int)mh$.invokeExact(settings, key, def);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_int$MH() {
        return RuntimeHelper.requireNonNull(constants$2960.const$2,"gtk_print_settings_set_int");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_int(struct _GtkPrintSettings* settings, char* key, int value);
     * }
     */
    public static void gtk_print_settings_set_int(MemorySegment settings, MemorySegment key, int value) {
        var mh$ = gtk_print_settings_set_int$MH();
        try {
            mh$.invokeExact(settings, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_printer$MH() {
        return RuntimeHelper.requireNonNull(constants$2960.const$3,"gtk_print_settings_get_printer");
    }
    /**
     * {@snippet :
     * char* gtk_print_settings_get_printer(struct _GtkPrintSettings* settings);
     * }
     */
    public static MemorySegment gtk_print_settings_get_printer(MemorySegment settings) {
        var mh$ = gtk_print_settings_get_printer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_printer$MH() {
        return RuntimeHelper.requireNonNull(constants$2960.const$4,"gtk_print_settings_set_printer");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_printer(struct _GtkPrintSettings* settings, char* printer);
     * }
     */
    public static void gtk_print_settings_set_printer(MemorySegment settings, MemorySegment printer) {
        var mh$ = gtk_print_settings_set_printer$MH();
        try {
            mh$.invokeExact(settings, printer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$2960.const$5,"gtk_print_settings_get_orientation");
    }
    /**
     * {@snippet :
     * enum GtkPageOrientation gtk_print_settings_get_orientation(struct _GtkPrintSettings* settings);
     * }
     */
    public static int gtk_print_settings_get_orientation(MemorySegment settings) {
        var mh$ = gtk_print_settings_get_orientation$MH();
        try {
            return (int)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_orientation$MH() {
        return RuntimeHelper.requireNonNull(constants$2961.const$0,"gtk_print_settings_set_orientation");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_orientation(struct _GtkPrintSettings* settings, enum GtkPageOrientation orientation);
     * }
     */
    public static void gtk_print_settings_set_orientation(MemorySegment settings, int orientation) {
        var mh$ = gtk_print_settings_set_orientation$MH();
        try {
            mh$.invokeExact(settings, orientation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_paper_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2961.const$1,"gtk_print_settings_get_paper_size");
    }
    /**
     * {@snippet :
     * struct _GtkPaperSize* gtk_print_settings_get_paper_size(struct _GtkPrintSettings* settings);
     * }
     */
    public static MemorySegment gtk_print_settings_get_paper_size(MemorySegment settings) {
        var mh$ = gtk_print_settings_get_paper_size$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_paper_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2961.const$2,"gtk_print_settings_set_paper_size");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_paper_size(struct _GtkPrintSettings* settings, struct _GtkPaperSize* paper_size);
     * }
     */
    public static void gtk_print_settings_set_paper_size(MemorySegment settings, MemorySegment paper_size) {
        var mh$ = gtk_print_settings_set_paper_size$MH();
        try {
            mh$.invokeExact(settings, paper_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_paper_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2961.const$3,"gtk_print_settings_get_paper_width");
    }
    /**
     * {@snippet :
     * double gtk_print_settings_get_paper_width(struct _GtkPrintSettings* settings, enum GtkUnit unit);
     * }
     */
    public static double gtk_print_settings_get_paper_width(MemorySegment settings, int unit) {
        var mh$ = gtk_print_settings_get_paper_width$MH();
        try {
            return (double)mh$.invokeExact(settings, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_paper_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2961.const$4,"gtk_print_settings_set_paper_width");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_paper_width(struct _GtkPrintSettings* settings, double width, enum GtkUnit unit);
     * }
     */
    public static void gtk_print_settings_set_paper_width(MemorySegment settings, double width, int unit) {
        var mh$ = gtk_print_settings_set_paper_width$MH();
        try {
            mh$.invokeExact(settings, width, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_paper_height$MH() {
        return RuntimeHelper.requireNonNull(constants$2961.const$5,"gtk_print_settings_get_paper_height");
    }
    /**
     * {@snippet :
     * double gtk_print_settings_get_paper_height(struct _GtkPrintSettings* settings, enum GtkUnit unit);
     * }
     */
    public static double gtk_print_settings_get_paper_height(MemorySegment settings, int unit) {
        var mh$ = gtk_print_settings_get_paper_height$MH();
        try {
            return (double)mh$.invokeExact(settings, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_paper_height$MH() {
        return RuntimeHelper.requireNonNull(constants$2962.const$0,"gtk_print_settings_set_paper_height");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_paper_height(struct _GtkPrintSettings* settings, double height, enum GtkUnit unit);
     * }
     */
    public static void gtk_print_settings_set_paper_height(MemorySegment settings, double height, int unit) {
        var mh$ = gtk_print_settings_set_paper_height$MH();
        try {
            mh$.invokeExact(settings, height, unit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_use_color$MH() {
        return RuntimeHelper.requireNonNull(constants$2962.const$1,"gtk_print_settings_get_use_color");
    }
    /**
     * {@snippet :
     * int gtk_print_settings_get_use_color(struct _GtkPrintSettings* settings);
     * }
     */
    public static int gtk_print_settings_get_use_color(MemorySegment settings) {
        var mh$ = gtk_print_settings_get_use_color$MH();
        try {
            return (int)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_use_color$MH() {
        return RuntimeHelper.requireNonNull(constants$2962.const$2,"gtk_print_settings_set_use_color");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_use_color(struct _GtkPrintSettings* settings, int use_color);
     * }
     */
    public static void gtk_print_settings_set_use_color(MemorySegment settings, int use_color) {
        var mh$ = gtk_print_settings_set_use_color$MH();
        try {
            mh$.invokeExact(settings, use_color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_get_collate$MH() {
        return RuntimeHelper.requireNonNull(constants$2962.const$3,"gtk_print_settings_get_collate");
    }
    /**
     * {@snippet :
     * int gtk_print_settings_get_collate(struct _GtkPrintSettings* settings);
     * }
     */
    public static int gtk_print_settings_get_collate(MemorySegment settings) {
        var mh$ = gtk_print_settings_get_collate$MH();
        try {
            return (int)mh$.invokeExact(settings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_print_settings_set_collate$MH() {
        return RuntimeHelper.requireNonNull(constants$2962.const$4,"gtk_print_settings_set_collate");
    }
    /**
     * {@snippet :
     * void gtk_print_settings_set_collate(struct _GtkPrintSettings* settings, int collate);
     * }
     */
    public static void gtk_print_settings_set_collate(MemorySegment settings, int collate) {
        var mh$ = gtk_print_settings_set_collate$MH();
        try {
            mh$.invokeExact(settings, collate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


