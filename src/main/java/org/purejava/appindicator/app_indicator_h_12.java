// Generated by jextract

package org.purejava.appindicator;

import java.lang.foreign.AddressLayout;
import java.lang.foreign.MemorySegment;
import java.lang.invoke.MethodHandle;
public class app_indicator_h_12 extends app_indicator_h_11 {

    /**
     * {@snippet :
     * enum _cairo_operator.CAIRO_OPERATOR_DARKEN = 17;
     * }
     */
    public static int CAIRO_OPERATOR_DARKEN() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum _cairo_operator.CAIRO_OPERATOR_LIGHTEN = 18;
     * }
     */
    public static int CAIRO_OPERATOR_LIGHTEN() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum _cairo_operator.CAIRO_OPERATOR_COLOR_DODGE = 19;
     * }
     */
    public static int CAIRO_OPERATOR_COLOR_DODGE() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum _cairo_operator.CAIRO_OPERATOR_COLOR_BURN = 20;
     * }
     */
    public static int CAIRO_OPERATOR_COLOR_BURN() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum _cairo_operator.CAIRO_OPERATOR_HARD_LIGHT = 21;
     * }
     */
    public static int CAIRO_OPERATOR_HARD_LIGHT() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * enum _cairo_operator.CAIRO_OPERATOR_SOFT_LIGHT = 22;
     * }
     */
    public static int CAIRO_OPERATOR_SOFT_LIGHT() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * enum _cairo_operator.CAIRO_OPERATOR_DIFFERENCE = 23;
     * }
     */
    public static int CAIRO_OPERATOR_DIFFERENCE() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * enum _cairo_operator.CAIRO_OPERATOR_EXCLUSION = 24;
     * }
     */
    public static int CAIRO_OPERATOR_EXCLUSION() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * enum _cairo_operator.CAIRO_OPERATOR_HSL_HUE = 25;
     * }
     */
    public static int CAIRO_OPERATOR_HSL_HUE() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * enum _cairo_operator.CAIRO_OPERATOR_HSL_SATURATION = 26;
     * }
     */
    public static int CAIRO_OPERATOR_HSL_SATURATION() {
        return (int)26L;
    }
    /**
     * {@snippet :
     * enum _cairo_operator.CAIRO_OPERATOR_HSL_COLOR = 27;
     * }
     */
    public static int CAIRO_OPERATOR_HSL_COLOR() {
        return (int)27L;
    }
    /**
     * {@snippet :
     * enum _cairo_operator.CAIRO_OPERATOR_HSL_LUMINOSITY = 28;
     * }
     */
    public static int CAIRO_OPERATOR_HSL_LUMINOSITY() {
        return (int)28L;
    }
    public static MethodHandle cairo_set_operator$MH() {
        return RuntimeHelper.requireNonNull(constants$1682.const$1,"cairo_set_operator");
    }
    /**
     * {@snippet :
     * void cairo_set_operator(struct _cairo* cr, enum _cairo_operator op);
     * }
     */
    public static void cairo_set_operator(MemorySegment cr, int op) {
        var mh$ = cairo_set_operator$MH();
        try {
            mh$.invokeExact(cr, op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_set_source$MH() {
        return RuntimeHelper.requireNonNull(constants$1682.const$2,"cairo_set_source");
    }
    /**
     * {@snippet :
     * void cairo_set_source(struct _cairo* cr, struct _cairo_pattern* source);
     * }
     */
    public static void cairo_set_source(MemorySegment cr, MemorySegment source) {
        var mh$ = cairo_set_source$MH();
        try {
            mh$.invokeExact(cr, source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_set_source_rgb$MH() {
        return RuntimeHelper.requireNonNull(constants$1682.const$4,"cairo_set_source_rgb");
    }
    /**
     * {@snippet :
     * void cairo_set_source_rgb(struct _cairo* cr, double red, double green, double blue);
     * }
     */
    public static void cairo_set_source_rgb(MemorySegment cr, double red, double green, double blue) {
        var mh$ = cairo_set_source_rgb$MH();
        try {
            mh$.invokeExact(cr, red, green, blue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_set_source_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$1682.const$6,"cairo_set_source_rgba");
    }
    /**
     * {@snippet :
     * void cairo_set_source_rgba(struct _cairo* cr, double red, double green, double blue, double alpha);
     * }
     */
    public static void cairo_set_source_rgba(MemorySegment cr, double red, double green, double blue, double alpha) {
        var mh$ = cairo_set_source_rgba$MH();
        try {
            mh$.invokeExact(cr, red, green, blue, alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_set_source_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$1683.const$1,"cairo_set_source_surface");
    }
    /**
     * {@snippet :
     * void cairo_set_source_surface(struct _cairo* cr, struct _cairo_surface* surface, double x, double y);
     * }
     */
    public static void cairo_set_source_surface(MemorySegment cr, MemorySegment surface, double x, double y) {
        var mh$ = cairo_set_source_surface$MH();
        try {
            mh$.invokeExact(cr, surface, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_set_tolerance$MH() {
        return RuntimeHelper.requireNonNull(constants$1683.const$2,"cairo_set_tolerance");
    }
    /**
     * {@snippet :
     * void cairo_set_tolerance(struct _cairo* cr, double tolerance);
     * }
     */
    public static void cairo_set_tolerance(MemorySegment cr, double tolerance) {
        var mh$ = cairo_set_tolerance$MH();
        try {
            mh$.invokeExact(cr, tolerance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum _cairo_antialias.CAIRO_ANTIALIAS_DEFAULT = 0;
     * }
     */
    public static int CAIRO_ANTIALIAS_DEFAULT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _cairo_antialias.CAIRO_ANTIALIAS_NONE = 1;
     * }
     */
    public static int CAIRO_ANTIALIAS_NONE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _cairo_antialias.CAIRO_ANTIALIAS_GRAY = 2;
     * }
     */
    public static int CAIRO_ANTIALIAS_GRAY() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _cairo_antialias.CAIRO_ANTIALIAS_SUBPIXEL = 3;
     * }
     */
    public static int CAIRO_ANTIALIAS_SUBPIXEL() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _cairo_antialias.CAIRO_ANTIALIAS_FAST = 4;
     * }
     */
    public static int CAIRO_ANTIALIAS_FAST() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _cairo_antialias.CAIRO_ANTIALIAS_GOOD = 5;
     * }
     */
    public static int CAIRO_ANTIALIAS_GOOD() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum _cairo_antialias.CAIRO_ANTIALIAS_BEST = 6;
     * }
     */
    public static int CAIRO_ANTIALIAS_BEST() {
        return (int)6L;
    }
    public static MethodHandle cairo_set_antialias$MH() {
        return RuntimeHelper.requireNonNull(constants$1683.const$3,"cairo_set_antialias");
    }
    /**
     * {@snippet :
     * void cairo_set_antialias(struct _cairo* cr, enum _cairo_antialias antialias);
     * }
     */
    public static void cairo_set_antialias(MemorySegment cr, int antialias) {
        var mh$ = cairo_set_antialias$MH();
        try {
            mh$.invokeExact(cr, antialias);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum _cairo_fill_rule.CAIRO_FILL_RULE_WINDING = 0;
     * }
     */
    public static int CAIRO_FILL_RULE_WINDING() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _cairo_fill_rule.CAIRO_FILL_RULE_EVEN_ODD = 1;
     * }
     */
    public static int CAIRO_FILL_RULE_EVEN_ODD() {
        return (int)1L;
    }
    public static MethodHandle cairo_set_fill_rule$MH() {
        return RuntimeHelper.requireNonNull(constants$1683.const$4,"cairo_set_fill_rule");
    }
    /**
     * {@snippet :
     * void cairo_set_fill_rule(struct _cairo* cr, enum _cairo_fill_rule fill_rule);
     * }
     */
    public static void cairo_set_fill_rule(MemorySegment cr, int fill_rule) {
        var mh$ = cairo_set_fill_rule$MH();
        try {
            mh$.invokeExact(cr, fill_rule);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_set_line_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1683.const$5,"cairo_set_line_width");
    }
    /**
     * {@snippet :
     * void cairo_set_line_width(struct _cairo* cr, double width);
     * }
     */
    public static void cairo_set_line_width(MemorySegment cr, double width) {
        var mh$ = cairo_set_line_width$MH();
        try {
            mh$.invokeExact(cr, width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_set_hairline$MH() {
        return RuntimeHelper.requireNonNull(constants$1684.const$0,"cairo_set_hairline");
    }
    /**
     * {@snippet :
     * void cairo_set_hairline(struct _cairo* cr, int set_hairline);
     * }
     */
    public static void cairo_set_hairline(MemorySegment cr, int set_hairline) {
        var mh$ = cairo_set_hairline$MH();
        try {
            mh$.invokeExact(cr, set_hairline);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum _cairo_line_cap.CAIRO_LINE_CAP_BUTT = 0;
     * }
     */
    public static int CAIRO_LINE_CAP_BUTT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _cairo_line_cap.CAIRO_LINE_CAP_ROUND = 1;
     * }
     */
    public static int CAIRO_LINE_CAP_ROUND() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _cairo_line_cap.CAIRO_LINE_CAP_SQUARE = 2;
     * }
     */
    public static int CAIRO_LINE_CAP_SQUARE() {
        return (int)2L;
    }
    public static MethodHandle cairo_set_line_cap$MH() {
        return RuntimeHelper.requireNonNull(constants$1684.const$1,"cairo_set_line_cap");
    }
    /**
     * {@snippet :
     * void cairo_set_line_cap(struct _cairo* cr, enum _cairo_line_cap line_cap);
     * }
     */
    public static void cairo_set_line_cap(MemorySegment cr, int line_cap) {
        var mh$ = cairo_set_line_cap$MH();
        try {
            mh$.invokeExact(cr, line_cap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum _cairo_line_join.CAIRO_LINE_JOIN_MITER = 0;
     * }
     */
    public static int CAIRO_LINE_JOIN_MITER() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _cairo_line_join.CAIRO_LINE_JOIN_ROUND = 1;
     * }
     */
    public static int CAIRO_LINE_JOIN_ROUND() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _cairo_line_join.CAIRO_LINE_JOIN_BEVEL = 2;
     * }
     */
    public static int CAIRO_LINE_JOIN_BEVEL() {
        return (int)2L;
    }
    public static MethodHandle cairo_set_line_join$MH() {
        return RuntimeHelper.requireNonNull(constants$1684.const$2,"cairo_set_line_join");
    }
    /**
     * {@snippet :
     * void cairo_set_line_join(struct _cairo* cr, enum _cairo_line_join line_join);
     * }
     */
    public static void cairo_set_line_join(MemorySegment cr, int line_join) {
        var mh$ = cairo_set_line_join$MH();
        try {
            mh$.invokeExact(cr, line_join);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_set_dash$MH() {
        return RuntimeHelper.requireNonNull(constants$1684.const$4,"cairo_set_dash");
    }
    /**
     * {@snippet :
     * void cairo_set_dash(struct _cairo* cr, double* dashes, int num_dashes, double offset);
     * }
     */
    public static void cairo_set_dash(MemorySegment cr, MemorySegment dashes, int num_dashes, double offset) {
        var mh$ = cairo_set_dash$MH();
        try {
            mh$.invokeExact(cr, dashes, num_dashes, offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_set_miter_limit$MH() {
        return RuntimeHelper.requireNonNull(constants$1684.const$5,"cairo_set_miter_limit");
    }
    /**
     * {@snippet :
     * void cairo_set_miter_limit(struct _cairo* cr, double limit);
     * }
     */
    public static void cairo_set_miter_limit(MemorySegment cr, double limit) {
        var mh$ = cairo_set_miter_limit$MH();
        try {
            mh$.invokeExact(cr, limit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_translate$MH() {
        return RuntimeHelper.requireNonNull(constants$1685.const$0,"cairo_translate");
    }
    /**
     * {@snippet :
     * void cairo_translate(struct _cairo* cr, double tx, double ty);
     * }
     */
    public static void cairo_translate(MemorySegment cr, double tx, double ty) {
        var mh$ = cairo_translate$MH();
        try {
            mh$.invokeExact(cr, tx, ty);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1685.const$1,"cairo_scale");
    }
    /**
     * {@snippet :
     * void cairo_scale(struct _cairo* cr, double sx, double sy);
     * }
     */
    public static void cairo_scale(MemorySegment cr, double sx, double sy) {
        var mh$ = cairo_scale$MH();
        try {
            mh$.invokeExact(cr, sx, sy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_rotate$MH() {
        return RuntimeHelper.requireNonNull(constants$1685.const$2,"cairo_rotate");
    }
    /**
     * {@snippet :
     * void cairo_rotate(struct _cairo* cr, double angle);
     * }
     */
    public static void cairo_rotate(MemorySegment cr, double angle) {
        var mh$ = cairo_rotate$MH();
        try {
            mh$.invokeExact(cr, angle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_transform$MH() {
        return RuntimeHelper.requireNonNull(constants$1685.const$3,"cairo_transform");
    }
    /**
     * {@snippet :
     * void cairo_transform(struct _cairo* cr, struct _cairo_matrix* matrix);
     * }
     */
    public static void cairo_transform(MemorySegment cr, MemorySegment matrix) {
        var mh$ = cairo_transform$MH();
        try {
            mh$.invokeExact(cr, matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_set_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1685.const$4,"cairo_set_matrix");
    }
    /**
     * {@snippet :
     * void cairo_set_matrix(struct _cairo* cr, struct _cairo_matrix* matrix);
     * }
     */
    public static void cairo_set_matrix(MemorySegment cr, MemorySegment matrix) {
        var mh$ = cairo_set_matrix$MH();
        try {
            mh$.invokeExact(cr, matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_identity_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1685.const$5,"cairo_identity_matrix");
    }
    /**
     * {@snippet :
     * void cairo_identity_matrix(struct _cairo* cr);
     * }
     */
    public static void cairo_identity_matrix(MemorySegment cr) {
        var mh$ = cairo_identity_matrix$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_user_to_device$MH() {
        return RuntimeHelper.requireNonNull(constants$1686.const$0,"cairo_user_to_device");
    }
    /**
     * {@snippet :
     * void cairo_user_to_device(struct _cairo* cr, double* x, double* y);
     * }
     */
    public static void cairo_user_to_device(MemorySegment cr, MemorySegment x, MemorySegment y) {
        var mh$ = cairo_user_to_device$MH();
        try {
            mh$.invokeExact(cr, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_user_to_device_distance$MH() {
        return RuntimeHelper.requireNonNull(constants$1686.const$1,"cairo_user_to_device_distance");
    }
    /**
     * {@snippet :
     * void cairo_user_to_device_distance(struct _cairo* cr, double* dx, double* dy);
     * }
     */
    public static void cairo_user_to_device_distance(MemorySegment cr, MemorySegment dx, MemorySegment dy) {
        var mh$ = cairo_user_to_device_distance$MH();
        try {
            mh$.invokeExact(cr, dx, dy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_to_user$MH() {
        return RuntimeHelper.requireNonNull(constants$1686.const$2,"cairo_device_to_user");
    }
    /**
     * {@snippet :
     * void cairo_device_to_user(struct _cairo* cr, double* x, double* y);
     * }
     */
    public static void cairo_device_to_user(MemorySegment cr, MemorySegment x, MemorySegment y) {
        var mh$ = cairo_device_to_user$MH();
        try {
            mh$.invokeExact(cr, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_to_user_distance$MH() {
        return RuntimeHelper.requireNonNull(constants$1686.const$3,"cairo_device_to_user_distance");
    }
    /**
     * {@snippet :
     * void cairo_device_to_user_distance(struct _cairo* cr, double* dx, double* dy);
     * }
     */
    public static void cairo_device_to_user_distance(MemorySegment cr, MemorySegment dx, MemorySegment dy) {
        var mh$ = cairo_device_to_user_distance$MH();
        try {
            mh$.invokeExact(cr, dx, dy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_new_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1686.const$4,"cairo_new_path");
    }
    /**
     * {@snippet :
     * void cairo_new_path(struct _cairo* cr);
     * }
     */
    public static void cairo_new_path(MemorySegment cr) {
        var mh$ = cairo_new_path$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_move_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1686.const$5,"cairo_move_to");
    }
    /**
     * {@snippet :
     * void cairo_move_to(struct _cairo* cr, double x, double y);
     * }
     */
    public static void cairo_move_to(MemorySegment cr, double x, double y) {
        var mh$ = cairo_move_to$MH();
        try {
            mh$.invokeExact(cr, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_new_sub_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1687.const$0,"cairo_new_sub_path");
    }
    /**
     * {@snippet :
     * void cairo_new_sub_path(struct _cairo* cr);
     * }
     */
    public static void cairo_new_sub_path(MemorySegment cr) {
        var mh$ = cairo_new_sub_path$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_line_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1687.const$1,"cairo_line_to");
    }
    /**
     * {@snippet :
     * void cairo_line_to(struct _cairo* cr, double x, double y);
     * }
     */
    public static void cairo_line_to(MemorySegment cr, double x, double y) {
        var mh$ = cairo_line_to$MH();
        try {
            mh$.invokeExact(cr, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_curve_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1687.const$3,"cairo_curve_to");
    }
    /**
     * {@snippet :
     * void cairo_curve_to(struct _cairo* cr, double x1, double y1, double x2, double y2, double x3, double y3);
     * }
     */
    public static void cairo_curve_to(MemorySegment cr, double x1, double y1, double x2, double y2, double x3, double y3) {
        var mh$ = cairo_curve_to$MH();
        try {
            mh$.invokeExact(cr, x1, y1, x2, y2, x3, y3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_arc$MH() {
        return RuntimeHelper.requireNonNull(constants$1687.const$5,"cairo_arc");
    }
    /**
     * {@snippet :
     * void cairo_arc(struct _cairo* cr, double xc, double yc, double radius, double angle1, double angle2);
     * }
     */
    public static void cairo_arc(MemorySegment cr, double xc, double yc, double radius, double angle1, double angle2) {
        var mh$ = cairo_arc$MH();
        try {
            mh$.invokeExact(cr, xc, yc, radius, angle1, angle2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_arc_negative$MH() {
        return RuntimeHelper.requireNonNull(constants$1688.const$0,"cairo_arc_negative");
    }
    /**
     * {@snippet :
     * void cairo_arc_negative(struct _cairo* cr, double xc, double yc, double radius, double angle1, double angle2);
     * }
     */
    public static void cairo_arc_negative(MemorySegment cr, double xc, double yc, double radius, double angle1, double angle2) {
        var mh$ = cairo_arc_negative$MH();
        try {
            mh$.invokeExact(cr, xc, yc, radius, angle1, angle2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_rel_move_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1688.const$1,"cairo_rel_move_to");
    }
    /**
     * {@snippet :
     * void cairo_rel_move_to(struct _cairo* cr, double dx, double dy);
     * }
     */
    public static void cairo_rel_move_to(MemorySegment cr, double dx, double dy) {
        var mh$ = cairo_rel_move_to$MH();
        try {
            mh$.invokeExact(cr, dx, dy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_rel_line_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1688.const$2,"cairo_rel_line_to");
    }
    /**
     * {@snippet :
     * void cairo_rel_line_to(struct _cairo* cr, double dx, double dy);
     * }
     */
    public static void cairo_rel_line_to(MemorySegment cr, double dx, double dy) {
        var mh$ = cairo_rel_line_to$MH();
        try {
            mh$.invokeExact(cr, dx, dy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_rel_curve_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1688.const$3,"cairo_rel_curve_to");
    }
    /**
     * {@snippet :
     * void cairo_rel_curve_to(struct _cairo* cr, double dx1, double dy1, double dx2, double dy2, double dx3, double dy3);
     * }
     */
    public static void cairo_rel_curve_to(MemorySegment cr, double dx1, double dy1, double dx2, double dy2, double dx3, double dy3) {
        var mh$ = cairo_rel_curve_to$MH();
        try {
            mh$.invokeExact(cr, dx1, dy1, dx2, dy2, dx3, dy3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_rectangle$MH() {
        return RuntimeHelper.requireNonNull(constants$1688.const$4,"cairo_rectangle");
    }
    /**
     * {@snippet :
     * void cairo_rectangle(struct _cairo* cr, double x, double y, double width, double height);
     * }
     */
    public static void cairo_rectangle(MemorySegment cr, double x, double y, double width, double height) {
        var mh$ = cairo_rectangle$MH();
        try {
            mh$.invokeExact(cr, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_close_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1688.const$5,"cairo_close_path");
    }
    /**
     * {@snippet :
     * void cairo_close_path(struct _cairo* cr);
     * }
     */
    public static void cairo_close_path(MemorySegment cr) {
        var mh$ = cairo_close_path$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_path_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1689.const$0,"cairo_path_extents");
    }
    /**
     * {@snippet :
     * void cairo_path_extents(struct _cairo* cr, double* x1, double* y1, double* x2, double* y2);
     * }
     */
    public static void cairo_path_extents(MemorySegment cr, MemorySegment x1, MemorySegment y1, MemorySegment x2, MemorySegment y2) {
        var mh$ = cairo_path_extents$MH();
        try {
            mh$.invokeExact(cr, x1, y1, x2, y2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_paint$MH() {
        return RuntimeHelper.requireNonNull(constants$1689.const$1,"cairo_paint");
    }
    /**
     * {@snippet :
     * void cairo_paint(struct _cairo* cr);
     * }
     */
    public static void cairo_paint(MemorySegment cr) {
        var mh$ = cairo_paint$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_paint_with_alpha$MH() {
        return RuntimeHelper.requireNonNull(constants$1689.const$2,"cairo_paint_with_alpha");
    }
    /**
     * {@snippet :
     * void cairo_paint_with_alpha(struct _cairo* cr, double alpha);
     * }
     */
    public static void cairo_paint_with_alpha(MemorySegment cr, double alpha) {
        var mh$ = cairo_paint_with_alpha$MH();
        try {
            mh$.invokeExact(cr, alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_mask$MH() {
        return RuntimeHelper.requireNonNull(constants$1689.const$3,"cairo_mask");
    }
    /**
     * {@snippet :
     * void cairo_mask(struct _cairo* cr, struct _cairo_pattern* pattern);
     * }
     */
    public static void cairo_mask(MemorySegment cr, MemorySegment pattern) {
        var mh$ = cairo_mask$MH();
        try {
            mh$.invokeExact(cr, pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_mask_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$1689.const$4,"cairo_mask_surface");
    }
    /**
     * {@snippet :
     * void cairo_mask_surface(struct _cairo* cr, struct _cairo_surface* surface, double surface_x, double surface_y);
     * }
     */
    public static void cairo_mask_surface(MemorySegment cr, MemorySegment surface, double surface_x, double surface_y) {
        var mh$ = cairo_mask_surface$MH();
        try {
            mh$.invokeExact(cr, surface, surface_x, surface_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_stroke$MH() {
        return RuntimeHelper.requireNonNull(constants$1689.const$5,"cairo_stroke");
    }
    /**
     * {@snippet :
     * void cairo_stroke(struct _cairo* cr);
     * }
     */
    public static void cairo_stroke(MemorySegment cr) {
        var mh$ = cairo_stroke$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_stroke_preserve$MH() {
        return RuntimeHelper.requireNonNull(constants$1690.const$0,"cairo_stroke_preserve");
    }
    /**
     * {@snippet :
     * void cairo_stroke_preserve(struct _cairo* cr);
     * }
     */
    public static void cairo_stroke_preserve(MemorySegment cr) {
        var mh$ = cairo_stroke_preserve$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_fill$MH() {
        return RuntimeHelper.requireNonNull(constants$1690.const$1,"cairo_fill");
    }
    /**
     * {@snippet :
     * void cairo_fill(struct _cairo* cr);
     * }
     */
    public static void cairo_fill(MemorySegment cr) {
        var mh$ = cairo_fill$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_fill_preserve$MH() {
        return RuntimeHelper.requireNonNull(constants$1690.const$2,"cairo_fill_preserve");
    }
    /**
     * {@snippet :
     * void cairo_fill_preserve(struct _cairo* cr);
     * }
     */
    public static void cairo_fill_preserve(MemorySegment cr) {
        var mh$ = cairo_fill_preserve$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_copy_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1690.const$3,"cairo_copy_page");
    }
    /**
     * {@snippet :
     * void cairo_copy_page(struct _cairo* cr);
     * }
     */
    public static void cairo_copy_page(MemorySegment cr) {
        var mh$ = cairo_copy_page$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_show_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1690.const$4,"cairo_show_page");
    }
    /**
     * {@snippet :
     * void cairo_show_page(struct _cairo* cr);
     * }
     */
    public static void cairo_show_page(MemorySegment cr) {
        var mh$ = cairo_show_page$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_in_stroke$MH() {
        return RuntimeHelper.requireNonNull(constants$1690.const$6,"cairo_in_stroke");
    }
    /**
     * {@snippet :
     * int cairo_in_stroke(struct _cairo* cr, double x, double y);
     * }
     */
    public static int cairo_in_stroke(MemorySegment cr, double x, double y) {
        var mh$ = cairo_in_stroke$MH();
        try {
            return (int)mh$.invokeExact(cr, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_in_fill$MH() {
        return RuntimeHelper.requireNonNull(constants$1691.const$0,"cairo_in_fill");
    }
    /**
     * {@snippet :
     * int cairo_in_fill(struct _cairo* cr, double x, double y);
     * }
     */
    public static int cairo_in_fill(MemorySegment cr, double x, double y) {
        var mh$ = cairo_in_fill$MH();
        try {
            return (int)mh$.invokeExact(cr, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_in_clip$MH() {
        return RuntimeHelper.requireNonNull(constants$1691.const$1,"cairo_in_clip");
    }
    /**
     * {@snippet :
     * int cairo_in_clip(struct _cairo* cr, double x, double y);
     * }
     */
    public static int cairo_in_clip(MemorySegment cr, double x, double y) {
        var mh$ = cairo_in_clip$MH();
        try {
            return (int)mh$.invokeExact(cr, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_stroke_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1691.const$2,"cairo_stroke_extents");
    }
    /**
     * {@snippet :
     * void cairo_stroke_extents(struct _cairo* cr, double* x1, double* y1, double* x2, double* y2);
     * }
     */
    public static void cairo_stroke_extents(MemorySegment cr, MemorySegment x1, MemorySegment y1, MemorySegment x2, MemorySegment y2) {
        var mh$ = cairo_stroke_extents$MH();
        try {
            mh$.invokeExact(cr, x1, y1, x2, y2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_fill_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1691.const$3,"cairo_fill_extents");
    }
    /**
     * {@snippet :
     * void cairo_fill_extents(struct _cairo* cr, double* x1, double* y1, double* x2, double* y2);
     * }
     */
    public static void cairo_fill_extents(MemorySegment cr, MemorySegment x1, MemorySegment y1, MemorySegment x2, MemorySegment y2) {
        var mh$ = cairo_fill_extents$MH();
        try {
            mh$.invokeExact(cr, x1, y1, x2, y2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_reset_clip$MH() {
        return RuntimeHelper.requireNonNull(constants$1691.const$4,"cairo_reset_clip");
    }
    /**
     * {@snippet :
     * void cairo_reset_clip(struct _cairo* cr);
     * }
     */
    public static void cairo_reset_clip(MemorySegment cr) {
        var mh$ = cairo_reset_clip$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_clip$MH() {
        return RuntimeHelper.requireNonNull(constants$1691.const$5,"cairo_clip");
    }
    /**
     * {@snippet :
     * void cairo_clip(struct _cairo* cr);
     * }
     */
    public static void cairo_clip(MemorySegment cr) {
        var mh$ = cairo_clip$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_clip_preserve$MH() {
        return RuntimeHelper.requireNonNull(constants$1692.const$0,"cairo_clip_preserve");
    }
    /**
     * {@snippet :
     * void cairo_clip_preserve(struct _cairo* cr);
     * }
     */
    public static void cairo_clip_preserve(MemorySegment cr) {
        var mh$ = cairo_clip_preserve$MH();
        try {
            mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_clip_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1692.const$1,"cairo_clip_extents");
    }
    /**
     * {@snippet :
     * void cairo_clip_extents(struct _cairo* cr, double* x1, double* y1, double* x2, double* y2);
     * }
     */
    public static void cairo_clip_extents(MemorySegment cr, MemorySegment x1, MemorySegment y1, MemorySegment x2, MemorySegment y2) {
        var mh$ = cairo_clip_extents$MH();
        try {
            mh$.invokeExact(cr, x1, y1, x2, y2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_copy_clip_rectangle_list$MH() {
        return RuntimeHelper.requireNonNull(constants$1693.const$5,"cairo_copy_clip_rectangle_list");
    }
    /**
     * {@snippet :
     * struct _cairo_rectangle_list* cairo_copy_clip_rectangle_list(struct _cairo* cr);
     * }
     */
    public static MemorySegment cairo_copy_clip_rectangle_list(MemorySegment cr) {
        var mh$ = cairo_copy_clip_rectangle_list$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_rectangle_list_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1694.const$0,"cairo_rectangle_list_destroy");
    }
    /**
     * {@snippet :
     * void cairo_rectangle_list_destroy(struct _cairo_rectangle_list* rectangle_list);
     * }
     */
    public static void cairo_rectangle_list_destroy(MemorySegment rectangle_list) {
        var mh$ = cairo_rectangle_list_destroy$MH();
        try {
            mh$.invokeExact(rectangle_list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_tag_begin$MH() {
        return RuntimeHelper.requireNonNull(constants$1694.const$1,"cairo_tag_begin");
    }
    /**
     * {@snippet :
     * void cairo_tag_begin(struct _cairo* cr, char* tag_name, char* attributes);
     * }
     */
    public static void cairo_tag_begin(MemorySegment cr, MemorySegment tag_name, MemorySegment attributes) {
        var mh$ = cairo_tag_begin$MH();
        try {
            mh$.invokeExact(cr, tag_name, attributes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_tag_end$MH() {
        return RuntimeHelper.requireNonNull(constants$1694.const$2,"cairo_tag_end");
    }
    /**
     * {@snippet :
     * void cairo_tag_end(struct _cairo* cr, char* tag_name);
     * }
     */
    public static void cairo_tag_end(MemorySegment cr, MemorySegment tag_name) {
        var mh$ = cairo_tag_end$MH();
        try {
            mh$.invokeExact(cr, tag_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_glyph_allocate$MH() {
        return RuntimeHelper.requireNonNull(constants$1695.const$1,"cairo_glyph_allocate");
    }
    /**
     * {@snippet :
     * struct cairo_glyph_t* cairo_glyph_allocate(int num_glyphs);
     * }
     */
    public static MemorySegment cairo_glyph_allocate(int num_glyphs) {
        var mh$ = cairo_glyph_allocate$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(num_glyphs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_glyph_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1695.const$2,"cairo_glyph_free");
    }
    /**
     * {@snippet :
     * void cairo_glyph_free(struct cairo_glyph_t* glyphs);
     * }
     */
    public static void cairo_glyph_free(MemorySegment glyphs) {
        var mh$ = cairo_glyph_free$MH();
        try {
            mh$.invokeExact(glyphs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_text_cluster_allocate$MH() {
        return RuntimeHelper.requireNonNull(constants$1696.const$0,"cairo_text_cluster_allocate");
    }
    /**
     * {@snippet :
     * struct cairo_text_cluster_t* cairo_text_cluster_allocate(int num_clusters);
     * }
     */
    public static MemorySegment cairo_text_cluster_allocate(int num_clusters) {
        var mh$ = cairo_text_cluster_allocate$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(num_clusters);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_text_cluster_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1696.const$1,"cairo_text_cluster_free");
    }
    /**
     * {@snippet :
     * void cairo_text_cluster_free(struct cairo_text_cluster_t* clusters);
     * }
     */
    public static void cairo_text_cluster_free(MemorySegment clusters) {
        var mh$ = cairo_text_cluster_free$MH();
        try {
            mh$.invokeExact(clusters);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum _cairo_text_cluster_flags.CAIRO_TEXT_CLUSTER_FLAG_BACKWARD = 1;
     * }
     */
    public static int CAIRO_TEXT_CLUSTER_FLAG_BACKWARD() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _cairo_font_slant.CAIRO_FONT_SLANT_NORMAL = 0;
     * }
     */
    public static int CAIRO_FONT_SLANT_NORMAL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _cairo_font_slant.CAIRO_FONT_SLANT_ITALIC = 1;
     * }
     */
    public static int CAIRO_FONT_SLANT_ITALIC() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _cairo_font_slant.CAIRO_FONT_SLANT_OBLIQUE = 2;
     * }
     */
    public static int CAIRO_FONT_SLANT_OBLIQUE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _cairo_font_weight.CAIRO_FONT_WEIGHT_NORMAL = 0;
     * }
     */
    public static int CAIRO_FONT_WEIGHT_NORMAL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _cairo_font_weight.CAIRO_FONT_WEIGHT_BOLD = 1;
     * }
     */
    public static int CAIRO_FONT_WEIGHT_BOLD() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _cairo_subpixel_order.CAIRO_SUBPIXEL_ORDER_DEFAULT = 0;
     * }
     */
    public static int CAIRO_SUBPIXEL_ORDER_DEFAULT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _cairo_subpixel_order.CAIRO_SUBPIXEL_ORDER_RGB = 1;
     * }
     */
    public static int CAIRO_SUBPIXEL_ORDER_RGB() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _cairo_subpixel_order.CAIRO_SUBPIXEL_ORDER_BGR = 2;
     * }
     */
    public static int CAIRO_SUBPIXEL_ORDER_BGR() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _cairo_subpixel_order.CAIRO_SUBPIXEL_ORDER_VRGB = 3;
     * }
     */
    public static int CAIRO_SUBPIXEL_ORDER_VRGB() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _cairo_subpixel_order.CAIRO_SUBPIXEL_ORDER_VBGR = 4;
     * }
     */
    public static int CAIRO_SUBPIXEL_ORDER_VBGR() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _cairo_hint_style.CAIRO_HINT_STYLE_DEFAULT = 0;
     * }
     */
    public static int CAIRO_HINT_STYLE_DEFAULT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _cairo_hint_style.CAIRO_HINT_STYLE_NONE = 1;
     * }
     */
    public static int CAIRO_HINT_STYLE_NONE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _cairo_hint_style.CAIRO_HINT_STYLE_SLIGHT = 2;
     * }
     */
    public static int CAIRO_HINT_STYLE_SLIGHT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _cairo_hint_style.CAIRO_HINT_STYLE_MEDIUM = 3;
     * }
     */
    public static int CAIRO_HINT_STYLE_MEDIUM() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _cairo_hint_style.CAIRO_HINT_STYLE_FULL = 4;
     * }
     */
    public static int CAIRO_HINT_STYLE_FULL() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _cairo_hint_metrics.CAIRO_HINT_METRICS_DEFAULT = 0;
     * }
     */
    public static int CAIRO_HINT_METRICS_DEFAULT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _cairo_hint_metrics.CAIRO_HINT_METRICS_OFF = 1;
     * }
     */
    public static int CAIRO_HINT_METRICS_OFF() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _cairo_hint_metrics.CAIRO_HINT_METRICS_ON = 2;
     * }
     */
    public static int CAIRO_HINT_METRICS_ON() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _cairo_color_mode.CAIRO_COLOR_MODE_DEFAULT = 0;
     * }
     */
    public static int CAIRO_COLOR_MODE_DEFAULT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _cairo_color_mode.CAIRO_COLOR_MODE_NO_COLOR = 1;
     * }
     */
    public static int CAIRO_COLOR_MODE_NO_COLOR() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _cairo_color_mode.CAIRO_COLOR_MODE_COLOR = 2;
     * }
     */
    public static int CAIRO_COLOR_MODE_COLOR() {
        return (int)2L;
    }
    public static MethodHandle cairo_font_options_create$MH() {
        return RuntimeHelper.requireNonNull(constants$1698.const$3,"cairo_font_options_create");
    }
    /**
     * {@snippet :
     * struct _cairo_font_options* cairo_font_options_create();
     * }
     */
    public static MemorySegment cairo_font_options_create() {
        var mh$ = cairo_font_options_create$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1698.const$4,"cairo_font_options_copy");
    }
    /**
     * {@snippet :
     * struct _cairo_font_options* cairo_font_options_copy(struct _cairo_font_options* original);
     * }
     */
    public static MemorySegment cairo_font_options_copy(MemorySegment original) {
        var mh$ = cairo_font_options_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(original);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1698.const$5,"cairo_font_options_destroy");
    }
    /**
     * {@snippet :
     * void cairo_font_options_destroy(struct _cairo_font_options* options);
     * }
     */
    public static void cairo_font_options_destroy(MemorySegment options) {
        var mh$ = cairo_font_options_destroy$MH();
        try {
            mh$.invokeExact(options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_status$MH() {
        return RuntimeHelper.requireNonNull(constants$1699.const$0,"cairo_font_options_status");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_font_options_status(struct _cairo_font_options* options);
     * }
     */
    public static int cairo_font_options_status(MemorySegment options) {
        var mh$ = cairo_font_options_status$MH();
        try {
            return (int)mh$.invokeExact(options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_merge$MH() {
        return RuntimeHelper.requireNonNull(constants$1699.const$1,"cairo_font_options_merge");
    }
    /**
     * {@snippet :
     * void cairo_font_options_merge(struct _cairo_font_options* options, struct _cairo_font_options* other);
     * }
     */
    public static void cairo_font_options_merge(MemorySegment options, MemorySegment other) {
        var mh$ = cairo_font_options_merge$MH();
        try {
            mh$.invokeExact(options, other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1699.const$2,"cairo_font_options_equal");
    }
    /**
     * {@snippet :
     * int cairo_font_options_equal(struct _cairo_font_options* options, struct _cairo_font_options* other);
     * }
     */
    public static int cairo_font_options_equal(MemorySegment options, MemorySegment other) {
        var mh$ = cairo_font_options_equal$MH();
        try {
            return (int)mh$.invokeExact(options, other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_hash$MH() {
        return RuntimeHelper.requireNonNull(constants$1699.const$3,"cairo_font_options_hash");
    }
    /**
     * {@snippet :
     * unsigned long cairo_font_options_hash(struct _cairo_font_options* options);
     * }
     */
    public static long cairo_font_options_hash(MemorySegment options) {
        var mh$ = cairo_font_options_hash$MH();
        try {
            return (long)mh$.invokeExact(options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_set_antialias$MH() {
        return RuntimeHelper.requireNonNull(constants$1699.const$4,"cairo_font_options_set_antialias");
    }
    /**
     * {@snippet :
     * void cairo_font_options_set_antialias(struct _cairo_font_options* options, enum _cairo_antialias antialias);
     * }
     */
    public static void cairo_font_options_set_antialias(MemorySegment options, int antialias) {
        var mh$ = cairo_font_options_set_antialias$MH();
        try {
            mh$.invokeExact(options, antialias);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_get_antialias$MH() {
        return RuntimeHelper.requireNonNull(constants$1699.const$5,"cairo_font_options_get_antialias");
    }
    /**
     * {@snippet :
     * enum _cairo_antialias cairo_font_options_get_antialias(struct _cairo_font_options* options);
     * }
     */
    public static int cairo_font_options_get_antialias(MemorySegment options) {
        var mh$ = cairo_font_options_get_antialias$MH();
        try {
            return (int)mh$.invokeExact(options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_set_subpixel_order$MH() {
        return RuntimeHelper.requireNonNull(constants$1700.const$0,"cairo_font_options_set_subpixel_order");
    }
    /**
     * {@snippet :
     * void cairo_font_options_set_subpixel_order(struct _cairo_font_options* options, enum _cairo_subpixel_order subpixel_order);
     * }
     */
    public static void cairo_font_options_set_subpixel_order(MemorySegment options, int subpixel_order) {
        var mh$ = cairo_font_options_set_subpixel_order$MH();
        try {
            mh$.invokeExact(options, subpixel_order);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_get_subpixel_order$MH() {
        return RuntimeHelper.requireNonNull(constants$1700.const$1,"cairo_font_options_get_subpixel_order");
    }
    /**
     * {@snippet :
     * enum _cairo_subpixel_order cairo_font_options_get_subpixel_order(struct _cairo_font_options* options);
     * }
     */
    public static int cairo_font_options_get_subpixel_order(MemorySegment options) {
        var mh$ = cairo_font_options_get_subpixel_order$MH();
        try {
            return (int)mh$.invokeExact(options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_set_hint_style$MH() {
        return RuntimeHelper.requireNonNull(constants$1700.const$2,"cairo_font_options_set_hint_style");
    }
    /**
     * {@snippet :
     * void cairo_font_options_set_hint_style(struct _cairo_font_options* options, enum _cairo_hint_style hint_style);
     * }
     */
    public static void cairo_font_options_set_hint_style(MemorySegment options, int hint_style) {
        var mh$ = cairo_font_options_set_hint_style$MH();
        try {
            mh$.invokeExact(options, hint_style);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_get_hint_style$MH() {
        return RuntimeHelper.requireNonNull(constants$1700.const$3,"cairo_font_options_get_hint_style");
    }
    /**
     * {@snippet :
     * enum _cairo_hint_style cairo_font_options_get_hint_style(struct _cairo_font_options* options);
     * }
     */
    public static int cairo_font_options_get_hint_style(MemorySegment options) {
        var mh$ = cairo_font_options_get_hint_style$MH();
        try {
            return (int)mh$.invokeExact(options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_set_hint_metrics$MH() {
        return RuntimeHelper.requireNonNull(constants$1700.const$4,"cairo_font_options_set_hint_metrics");
    }
    /**
     * {@snippet :
     * void cairo_font_options_set_hint_metrics(struct _cairo_font_options* options, enum _cairo_hint_metrics hint_metrics);
     * }
     */
    public static void cairo_font_options_set_hint_metrics(MemorySegment options, int hint_metrics) {
        var mh$ = cairo_font_options_set_hint_metrics$MH();
        try {
            mh$.invokeExact(options, hint_metrics);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_get_hint_metrics$MH() {
        return RuntimeHelper.requireNonNull(constants$1700.const$5,"cairo_font_options_get_hint_metrics");
    }
    /**
     * {@snippet :
     * enum _cairo_hint_metrics cairo_font_options_get_hint_metrics(struct _cairo_font_options* options);
     * }
     */
    public static int cairo_font_options_get_hint_metrics(MemorySegment options) {
        var mh$ = cairo_font_options_get_hint_metrics$MH();
        try {
            return (int)mh$.invokeExact(options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_get_variations$MH() {
        return RuntimeHelper.requireNonNull(constants$1701.const$0,"cairo_font_options_get_variations");
    }
    /**
     * {@snippet :
     * char* cairo_font_options_get_variations(struct _cairo_font_options* options);
     * }
     */
    public static MemorySegment cairo_font_options_get_variations(MemorySegment options) {
        var mh$ = cairo_font_options_get_variations$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_set_variations$MH() {
        return RuntimeHelper.requireNonNull(constants$1701.const$1,"cairo_font_options_set_variations");
    }
    /**
     * {@snippet :
     * void cairo_font_options_set_variations(struct _cairo_font_options* options, char* variations);
     * }
     */
    public static void cairo_font_options_set_variations(MemorySegment options, MemorySegment variations) {
        var mh$ = cairo_font_options_set_variations$MH();
        try {
            mh$.invokeExact(options, variations);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_set_color_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1701.const$2,"cairo_font_options_set_color_mode");
    }
    /**
     * {@snippet :
     * void cairo_font_options_set_color_mode(struct _cairo_font_options* options, enum _cairo_color_mode color_mode);
     * }
     */
    public static void cairo_font_options_set_color_mode(MemorySegment options, int color_mode) {
        var mh$ = cairo_font_options_set_color_mode$MH();
        try {
            mh$.invokeExact(options, color_mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_get_color_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1701.const$3,"cairo_font_options_get_color_mode");
    }
    /**
     * {@snippet :
     * enum _cairo_color_mode cairo_font_options_get_color_mode(struct _cairo_font_options* options);
     * }
     */
    public static int cairo_font_options_get_color_mode(MemorySegment options) {
        var mh$ = cairo_font_options_get_color_mode$MH();
        try {
            return (int)mh$.invokeExact(options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_get_color_palette$MH() {
        return RuntimeHelper.requireNonNull(constants$1701.const$4,"cairo_font_options_get_color_palette");
    }
    /**
     * {@snippet :
     * unsigned int cairo_font_options_get_color_palette(struct _cairo_font_options* options);
     * }
     */
    public static int cairo_font_options_get_color_palette(MemorySegment options) {
        var mh$ = cairo_font_options_get_color_palette$MH();
        try {
            return (int)mh$.invokeExact(options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_set_color_palette$MH() {
        return RuntimeHelper.requireNonNull(constants$1701.const$5,"cairo_font_options_set_color_palette");
    }
    /**
     * {@snippet :
     * void cairo_font_options_set_color_palette(struct _cairo_font_options* options, unsigned int palette_index);
     * }
     */
    public static void cairo_font_options_set_color_palette(MemorySegment options, int palette_index) {
        var mh$ = cairo_font_options_set_color_palette$MH();
        try {
            mh$.invokeExact(options, palette_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_set_custom_palette_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1702.const$1,"cairo_font_options_set_custom_palette_color");
    }
    /**
     * {@snippet :
     * void cairo_font_options_set_custom_palette_color(struct _cairo_font_options* options, unsigned int index, double red, double green, double blue, double alpha);
     * }
     */
    public static void cairo_font_options_set_custom_palette_color(MemorySegment options, int index, double red, double green, double blue, double alpha) {
        var mh$ = cairo_font_options_set_custom_palette_color$MH();
        try {
            mh$.invokeExact(options, index, red, green, blue, alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_options_get_custom_palette_color$MH() {
        return RuntimeHelper.requireNonNull(constants$1702.const$2,"cairo_font_options_get_custom_palette_color");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_font_options_get_custom_palette_color(struct _cairo_font_options* options, unsigned int index, double* red, double* green, double* blue, double* alpha);
     * }
     */
    public static int cairo_font_options_get_custom_palette_color(MemorySegment options, int index, MemorySegment red, MemorySegment green, MemorySegment blue, MemorySegment alpha) {
        var mh$ = cairo_font_options_get_custom_palette_color$MH();
        try {
            return (int)mh$.invokeExact(options, index, red, green, blue, alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_select_font_face$MH() {
        return RuntimeHelper.requireNonNull(constants$1702.const$3,"cairo_select_font_face");
    }
    /**
     * {@snippet :
     * void cairo_select_font_face(struct _cairo* cr, char* family, enum _cairo_font_slant slant, enum _cairo_font_weight weight);
     * }
     */
    public static void cairo_select_font_face(MemorySegment cr, MemorySegment family, int slant, int weight) {
        var mh$ = cairo_select_font_face$MH();
        try {
            mh$.invokeExact(cr, family, slant, weight);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_set_font_size$MH() {
        return RuntimeHelper.requireNonNull(constants$1702.const$4,"cairo_set_font_size");
    }
    /**
     * {@snippet :
     * void cairo_set_font_size(struct _cairo* cr, double size);
     * }
     */
    public static void cairo_set_font_size(MemorySegment cr, double size) {
        var mh$ = cairo_set_font_size$MH();
        try {
            mh$.invokeExact(cr, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_set_font_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1702.const$5,"cairo_set_font_matrix");
    }
    /**
     * {@snippet :
     * void cairo_set_font_matrix(struct _cairo* cr, struct _cairo_matrix* matrix);
     * }
     */
    public static void cairo_set_font_matrix(MemorySegment cr, MemorySegment matrix) {
        var mh$ = cairo_set_font_matrix$MH();
        try {
            mh$.invokeExact(cr, matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_font_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1703.const$0,"cairo_get_font_matrix");
    }
    /**
     * {@snippet :
     * void cairo_get_font_matrix(struct _cairo* cr, struct _cairo_matrix* matrix);
     * }
     */
    public static void cairo_get_font_matrix(MemorySegment cr, MemorySegment matrix) {
        var mh$ = cairo_get_font_matrix$MH();
        try {
            mh$.invokeExact(cr, matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_set_font_options$MH() {
        return RuntimeHelper.requireNonNull(constants$1703.const$1,"cairo_set_font_options");
    }
    /**
     * {@snippet :
     * void cairo_set_font_options(struct _cairo* cr, struct _cairo_font_options* options);
     * }
     */
    public static void cairo_set_font_options(MemorySegment cr, MemorySegment options) {
        var mh$ = cairo_set_font_options$MH();
        try {
            mh$.invokeExact(cr, options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_font_options$MH() {
        return RuntimeHelper.requireNonNull(constants$1703.const$2,"cairo_get_font_options");
    }
    /**
     * {@snippet :
     * void cairo_get_font_options(struct _cairo* cr, struct _cairo_font_options* options);
     * }
     */
    public static void cairo_get_font_options(MemorySegment cr, MemorySegment options) {
        var mh$ = cairo_get_font_options$MH();
        try {
            mh$.invokeExact(cr, options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_set_font_face$MH() {
        return RuntimeHelper.requireNonNull(constants$1703.const$3,"cairo_set_font_face");
    }
    /**
     * {@snippet :
     * void cairo_set_font_face(struct _cairo* cr, struct _cairo_font_face* font_face);
     * }
     */
    public static void cairo_set_font_face(MemorySegment cr, MemorySegment font_face) {
        var mh$ = cairo_set_font_face$MH();
        try {
            mh$.invokeExact(cr, font_face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_font_face$MH() {
        return RuntimeHelper.requireNonNull(constants$1703.const$4,"cairo_get_font_face");
    }
    /**
     * {@snippet :
     * struct _cairo_font_face* cairo_get_font_face(struct _cairo* cr);
     * }
     */
    public static MemorySegment cairo_get_font_face(MemorySegment cr) {
        var mh$ = cairo_get_font_face$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_set_scaled_font$MH() {
        return RuntimeHelper.requireNonNull(constants$1703.const$5,"cairo_set_scaled_font");
    }
    /**
     * {@snippet :
     * void cairo_set_scaled_font(struct _cairo* cr, struct _cairo_scaled_font* scaled_font);
     * }
     */
    public static void cairo_set_scaled_font(MemorySegment cr, MemorySegment scaled_font) {
        var mh$ = cairo_set_scaled_font$MH();
        try {
            mh$.invokeExact(cr, scaled_font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_scaled_font$MH() {
        return RuntimeHelper.requireNonNull(constants$1704.const$0,"cairo_get_scaled_font");
    }
    /**
     * {@snippet :
     * struct _cairo_scaled_font* cairo_get_scaled_font(struct _cairo* cr);
     * }
     */
    public static MemorySegment cairo_get_scaled_font(MemorySegment cr) {
        var mh$ = cairo_get_scaled_font$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_show_text$MH() {
        return RuntimeHelper.requireNonNull(constants$1704.const$1,"cairo_show_text");
    }
    /**
     * {@snippet :
     * void cairo_show_text(struct _cairo* cr, char* utf8);
     * }
     */
    public static void cairo_show_text(MemorySegment cr, MemorySegment utf8) {
        var mh$ = cairo_show_text$MH();
        try {
            mh$.invokeExact(cr, utf8);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_show_glyphs$MH() {
        return RuntimeHelper.requireNonNull(constants$1704.const$2,"cairo_show_glyphs");
    }
    /**
     * {@snippet :
     * void cairo_show_glyphs(struct _cairo* cr, struct cairo_glyph_t* glyphs, int num_glyphs);
     * }
     */
    public static void cairo_show_glyphs(MemorySegment cr, MemorySegment glyphs, int num_glyphs) {
        var mh$ = cairo_show_glyphs$MH();
        try {
            mh$.invokeExact(cr, glyphs, num_glyphs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_show_text_glyphs$MH() {
        return RuntimeHelper.requireNonNull(constants$1704.const$4,"cairo_show_text_glyphs");
    }
    /**
     * {@snippet :
     * void cairo_show_text_glyphs(struct _cairo* cr, char* utf8, int utf8_len, struct cairo_glyph_t* glyphs, int num_glyphs, struct cairo_text_cluster_t* clusters, int num_clusters, enum _cairo_text_cluster_flags cluster_flags);
     * }
     */
    public static void cairo_show_text_glyphs(MemorySegment cr, MemorySegment utf8, int utf8_len, MemorySegment glyphs, int num_glyphs, MemorySegment clusters, int num_clusters, int cluster_flags) {
        var mh$ = cairo_show_text_glyphs$MH();
        try {
            mh$.invokeExact(cr, utf8, utf8_len, glyphs, num_glyphs, clusters, num_clusters, cluster_flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_text_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1704.const$5,"cairo_text_path");
    }
    /**
     * {@snippet :
     * void cairo_text_path(struct _cairo* cr, char* utf8);
     * }
     */
    public static void cairo_text_path(MemorySegment cr, MemorySegment utf8) {
        var mh$ = cairo_text_path$MH();
        try {
            mh$.invokeExact(cr, utf8);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_glyph_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1705.const$0,"cairo_glyph_path");
    }
    /**
     * {@snippet :
     * void cairo_glyph_path(struct _cairo* cr, struct cairo_glyph_t* glyphs, int num_glyphs);
     * }
     */
    public static void cairo_glyph_path(MemorySegment cr, MemorySegment glyphs, int num_glyphs) {
        var mh$ = cairo_glyph_path$MH();
        try {
            mh$.invokeExact(cr, glyphs, num_glyphs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_text_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1705.const$1,"cairo_text_extents");
    }
    /**
     * {@snippet :
     * void cairo_text_extents(struct _cairo* cr, char* utf8, struct cairo_text_extents_t* extents);
     * }
     */
    public static void cairo_text_extents(MemorySegment cr, MemorySegment utf8, MemorySegment extents) {
        var mh$ = cairo_text_extents$MH();
        try {
            mh$.invokeExact(cr, utf8, extents);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_glyph_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1705.const$2,"cairo_glyph_extents");
    }
    /**
     * {@snippet :
     * void cairo_glyph_extents(struct _cairo* cr, struct cairo_glyph_t* glyphs, int num_glyphs, struct cairo_text_extents_t* extents);
     * }
     */
    public static void cairo_glyph_extents(MemorySegment cr, MemorySegment glyphs, int num_glyphs, MemorySegment extents) {
        var mh$ = cairo_glyph_extents$MH();
        try {
            mh$.invokeExact(cr, glyphs, num_glyphs, extents);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1705.const$3,"cairo_font_extents");
    }
    /**
     * {@snippet :
     * void cairo_font_extents(struct _cairo* cr, struct cairo_font_extents_t* extents);
     * }
     */
    public static void cairo_font_extents(MemorySegment cr, MemorySegment extents) {
        var mh$ = cairo_font_extents$MH();
        try {
            mh$.invokeExact(cr, extents);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_face_reference$MH() {
        return RuntimeHelper.requireNonNull(constants$1705.const$4,"cairo_font_face_reference");
    }
    /**
     * {@snippet :
     * struct _cairo_font_face* cairo_font_face_reference(struct _cairo_font_face* font_face);
     * }
     */
    public static MemorySegment cairo_font_face_reference(MemorySegment font_face) {
        var mh$ = cairo_font_face_reference$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(font_face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_face_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1705.const$5,"cairo_font_face_destroy");
    }
    /**
     * {@snippet :
     * void cairo_font_face_destroy(struct _cairo_font_face* font_face);
     * }
     */
    public static void cairo_font_face_destroy(MemorySegment font_face) {
        var mh$ = cairo_font_face_destroy$MH();
        try {
            mh$.invokeExact(font_face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_face_get_reference_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1706.const$0,"cairo_font_face_get_reference_count");
    }
    /**
     * {@snippet :
     * unsigned int cairo_font_face_get_reference_count(struct _cairo_font_face* font_face);
     * }
     */
    public static int cairo_font_face_get_reference_count(MemorySegment font_face) {
        var mh$ = cairo_font_face_get_reference_count$MH();
        try {
            return (int)mh$.invokeExact(font_face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_face_status$MH() {
        return RuntimeHelper.requireNonNull(constants$1706.const$1,"cairo_font_face_status");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_font_face_status(struct _cairo_font_face* font_face);
     * }
     */
    public static int cairo_font_face_status(MemorySegment font_face) {
        var mh$ = cairo_font_face_status$MH();
        try {
            return (int)mh$.invokeExact(font_face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum _cairo_font_type.CAIRO_FONT_TYPE_TOY = 0;
     * }
     */
    public static int CAIRO_FONT_TYPE_TOY() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _cairo_font_type.CAIRO_FONT_TYPE_FT = 1;
     * }
     */
    public static int CAIRO_FONT_TYPE_FT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _cairo_font_type.CAIRO_FONT_TYPE_WIN32 = 2;
     * }
     */
    public static int CAIRO_FONT_TYPE_WIN32() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _cairo_font_type.CAIRO_FONT_TYPE_QUARTZ = 3;
     * }
     */
    public static int CAIRO_FONT_TYPE_QUARTZ() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _cairo_font_type.CAIRO_FONT_TYPE_USER = 4;
     * }
     */
    public static int CAIRO_FONT_TYPE_USER() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _cairo_font_type.CAIRO_FONT_TYPE_DWRITE = 5;
     * }
     */
    public static int CAIRO_FONT_TYPE_DWRITE() {
        return (int)5L;
    }
    public static MethodHandle cairo_font_face_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1706.const$2,"cairo_font_face_get_type");
    }
    /**
     * {@snippet :
     * enum _cairo_font_type cairo_font_face_get_type(struct _cairo_font_face* font_face);
     * }
     */
    public static int cairo_font_face_get_type(MemorySegment font_face) {
        var mh$ = cairo_font_face_get_type$MH();
        try {
            return (int)mh$.invokeExact(font_face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_face_get_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1706.const$3,"cairo_font_face_get_user_data");
    }
    /**
     * {@snippet :
     * void* cairo_font_face_get_user_data(struct _cairo_font_face* font_face, struct _cairo_user_data_key* key);
     * }
     */
    public static MemorySegment cairo_font_face_get_user_data(MemorySegment font_face, MemorySegment key) {
        var mh$ = cairo_font_face_get_user_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(font_face, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_font_face_set_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1706.const$5,"cairo_font_face_set_user_data");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_font_face_set_user_data(struct _cairo_font_face* font_face, struct _cairo_user_data_key* key, void* user_data, void (*destroy)(void*));
     * }
     */
    public static int cairo_font_face_set_user_data(MemorySegment font_face, MemorySegment key, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = cairo_font_face_set_user_data$MH();
        try {
            return (int)mh$.invokeExact(font_face, key, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scaled_font_create$MH() {
        return RuntimeHelper.requireNonNull(constants$1707.const$0,"cairo_scaled_font_create");
    }
    /**
     * {@snippet :
     * struct _cairo_scaled_font* cairo_scaled_font_create(struct _cairo_font_face* font_face, struct _cairo_matrix* font_matrix, struct _cairo_matrix* ctm, struct _cairo_font_options* options);
     * }
     */
    public static MemorySegment cairo_scaled_font_create(MemorySegment font_face, MemorySegment font_matrix, MemorySegment ctm, MemorySegment options) {
        var mh$ = cairo_scaled_font_create$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(font_face, font_matrix, ctm, options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scaled_font_reference$MH() {
        return RuntimeHelper.requireNonNull(constants$1707.const$1,"cairo_scaled_font_reference");
    }
    /**
     * {@snippet :
     * struct _cairo_scaled_font* cairo_scaled_font_reference(struct _cairo_scaled_font* scaled_font);
     * }
     */
    public static MemorySegment cairo_scaled_font_reference(MemorySegment scaled_font) {
        var mh$ = cairo_scaled_font_reference$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(scaled_font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scaled_font_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1707.const$2,"cairo_scaled_font_destroy");
    }
    /**
     * {@snippet :
     * void cairo_scaled_font_destroy(struct _cairo_scaled_font* scaled_font);
     * }
     */
    public static void cairo_scaled_font_destroy(MemorySegment scaled_font) {
        var mh$ = cairo_scaled_font_destroy$MH();
        try {
            mh$.invokeExact(scaled_font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scaled_font_get_reference_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1707.const$3,"cairo_scaled_font_get_reference_count");
    }
    /**
     * {@snippet :
     * unsigned int cairo_scaled_font_get_reference_count(struct _cairo_scaled_font* scaled_font);
     * }
     */
    public static int cairo_scaled_font_get_reference_count(MemorySegment scaled_font) {
        var mh$ = cairo_scaled_font_get_reference_count$MH();
        try {
            return (int)mh$.invokeExact(scaled_font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scaled_font_status$MH() {
        return RuntimeHelper.requireNonNull(constants$1707.const$4,"cairo_scaled_font_status");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_scaled_font_status(struct _cairo_scaled_font* scaled_font);
     * }
     */
    public static int cairo_scaled_font_status(MemorySegment scaled_font) {
        var mh$ = cairo_scaled_font_status$MH();
        try {
            return (int)mh$.invokeExact(scaled_font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scaled_font_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1707.const$5,"cairo_scaled_font_get_type");
    }
    /**
     * {@snippet :
     * enum _cairo_font_type cairo_scaled_font_get_type(struct _cairo_scaled_font* scaled_font);
     * }
     */
    public static int cairo_scaled_font_get_type(MemorySegment scaled_font) {
        var mh$ = cairo_scaled_font_get_type$MH();
        try {
            return (int)mh$.invokeExact(scaled_font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scaled_font_get_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1708.const$0,"cairo_scaled_font_get_user_data");
    }
    /**
     * {@snippet :
     * void* cairo_scaled_font_get_user_data(struct _cairo_scaled_font* scaled_font, struct _cairo_user_data_key* key);
     * }
     */
    public static MemorySegment cairo_scaled_font_get_user_data(MemorySegment scaled_font, MemorySegment key) {
        var mh$ = cairo_scaled_font_get_user_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(scaled_font, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scaled_font_set_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1708.const$2,"cairo_scaled_font_set_user_data");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_scaled_font_set_user_data(struct _cairo_scaled_font* scaled_font, struct _cairo_user_data_key* key, void* user_data, void (*destroy)(void*));
     * }
     */
    public static int cairo_scaled_font_set_user_data(MemorySegment scaled_font, MemorySegment key, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = cairo_scaled_font_set_user_data$MH();
        try {
            return (int)mh$.invokeExact(scaled_font, key, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scaled_font_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1708.const$3,"cairo_scaled_font_extents");
    }
    /**
     * {@snippet :
     * void cairo_scaled_font_extents(struct _cairo_scaled_font* scaled_font, struct cairo_font_extents_t* extents);
     * }
     */
    public static void cairo_scaled_font_extents(MemorySegment scaled_font, MemorySegment extents) {
        var mh$ = cairo_scaled_font_extents$MH();
        try {
            mh$.invokeExact(scaled_font, extents);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scaled_font_text_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1708.const$4,"cairo_scaled_font_text_extents");
    }
    /**
     * {@snippet :
     * void cairo_scaled_font_text_extents(struct _cairo_scaled_font* scaled_font, char* utf8, struct cairo_text_extents_t* extents);
     * }
     */
    public static void cairo_scaled_font_text_extents(MemorySegment scaled_font, MemorySegment utf8, MemorySegment extents) {
        var mh$ = cairo_scaled_font_text_extents$MH();
        try {
            mh$.invokeExact(scaled_font, utf8, extents);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scaled_font_glyph_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1708.const$5,"cairo_scaled_font_glyph_extents");
    }
    /**
     * {@snippet :
     * void cairo_scaled_font_glyph_extents(struct _cairo_scaled_font* scaled_font, struct cairo_glyph_t* glyphs, int num_glyphs, struct cairo_text_extents_t* extents);
     * }
     */
    public static void cairo_scaled_font_glyph_extents(MemorySegment scaled_font, MemorySegment glyphs, int num_glyphs, MemorySegment extents) {
        var mh$ = cairo_scaled_font_glyph_extents$MH();
        try {
            mh$.invokeExact(scaled_font, glyphs, num_glyphs, extents);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scaled_font_text_to_glyphs$MH() {
        return RuntimeHelper.requireNonNull(constants$1709.const$1,"cairo_scaled_font_text_to_glyphs");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_scaled_font_text_to_glyphs(struct _cairo_scaled_font* scaled_font, double x, double y, char* utf8, int utf8_len, struct cairo_glyph_t** glyphs, int* num_glyphs, struct cairo_text_cluster_t** clusters, int* num_clusters, enum _cairo_text_cluster_flags* cluster_flags);
     * }
     */
    public static int cairo_scaled_font_text_to_glyphs(MemorySegment scaled_font, double x, double y, MemorySegment utf8, int utf8_len, MemorySegment glyphs, MemorySegment num_glyphs, MemorySegment clusters, MemorySegment num_clusters, MemorySegment cluster_flags) {
        var mh$ = cairo_scaled_font_text_to_glyphs$MH();
        try {
            return (int)mh$.invokeExact(scaled_font, x, y, utf8, utf8_len, glyphs, num_glyphs, clusters, num_clusters, cluster_flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scaled_font_get_font_face$MH() {
        return RuntimeHelper.requireNonNull(constants$1709.const$2,"cairo_scaled_font_get_font_face");
    }
    /**
     * {@snippet :
     * struct _cairo_font_face* cairo_scaled_font_get_font_face(struct _cairo_scaled_font* scaled_font);
     * }
     */
    public static MemorySegment cairo_scaled_font_get_font_face(MemorySegment scaled_font) {
        var mh$ = cairo_scaled_font_get_font_face$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(scaled_font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scaled_font_get_font_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1709.const$3,"cairo_scaled_font_get_font_matrix");
    }
    /**
     * {@snippet :
     * void cairo_scaled_font_get_font_matrix(struct _cairo_scaled_font* scaled_font, struct _cairo_matrix* font_matrix);
     * }
     */
    public static void cairo_scaled_font_get_font_matrix(MemorySegment scaled_font, MemorySegment font_matrix) {
        var mh$ = cairo_scaled_font_get_font_matrix$MH();
        try {
            mh$.invokeExact(scaled_font, font_matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scaled_font_get_ctm$MH() {
        return RuntimeHelper.requireNonNull(constants$1709.const$4,"cairo_scaled_font_get_ctm");
    }
    /**
     * {@snippet :
     * void cairo_scaled_font_get_ctm(struct _cairo_scaled_font* scaled_font, struct _cairo_matrix* ctm);
     * }
     */
    public static void cairo_scaled_font_get_ctm(MemorySegment scaled_font, MemorySegment ctm) {
        var mh$ = cairo_scaled_font_get_ctm$MH();
        try {
            mh$.invokeExact(scaled_font, ctm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scaled_font_get_scale_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1709.const$5,"cairo_scaled_font_get_scale_matrix");
    }
    /**
     * {@snippet :
     * void cairo_scaled_font_get_scale_matrix(struct _cairo_scaled_font* scaled_font, struct _cairo_matrix* scale_matrix);
     * }
     */
    public static void cairo_scaled_font_get_scale_matrix(MemorySegment scaled_font, MemorySegment scale_matrix) {
        var mh$ = cairo_scaled_font_get_scale_matrix$MH();
        try {
            mh$.invokeExact(scaled_font, scale_matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_scaled_font_get_font_options$MH() {
        return RuntimeHelper.requireNonNull(constants$1710.const$0,"cairo_scaled_font_get_font_options");
    }
    /**
     * {@snippet :
     * void cairo_scaled_font_get_font_options(struct _cairo_scaled_font* scaled_font, struct _cairo_font_options* options);
     * }
     */
    public static void cairo_scaled_font_get_font_options(MemorySegment scaled_font, MemorySegment options) {
        var mh$ = cairo_scaled_font_get_font_options$MH();
        try {
            mh$.invokeExact(scaled_font, options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_toy_font_face_create$MH() {
        return RuntimeHelper.requireNonNull(constants$1710.const$1,"cairo_toy_font_face_create");
    }
    /**
     * {@snippet :
     * struct _cairo_font_face* cairo_toy_font_face_create(char* family, enum _cairo_font_slant slant, enum _cairo_font_weight weight);
     * }
     */
    public static MemorySegment cairo_toy_font_face_create(MemorySegment family, int slant, int weight) {
        var mh$ = cairo_toy_font_face_create$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(family, slant, weight);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_toy_font_face_get_family$MH() {
        return RuntimeHelper.requireNonNull(constants$1710.const$2,"cairo_toy_font_face_get_family");
    }
    /**
     * {@snippet :
     * char* cairo_toy_font_face_get_family(struct _cairo_font_face* font_face);
     * }
     */
    public static MemorySegment cairo_toy_font_face_get_family(MemorySegment font_face) {
        var mh$ = cairo_toy_font_face_get_family$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(font_face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_toy_font_face_get_slant$MH() {
        return RuntimeHelper.requireNonNull(constants$1710.const$3,"cairo_toy_font_face_get_slant");
    }
    /**
     * {@snippet :
     * enum _cairo_font_slant cairo_toy_font_face_get_slant(struct _cairo_font_face* font_face);
     * }
     */
    public static int cairo_toy_font_face_get_slant(MemorySegment font_face) {
        var mh$ = cairo_toy_font_face_get_slant$MH();
        try {
            return (int)mh$.invokeExact(font_face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_toy_font_face_get_weight$MH() {
        return RuntimeHelper.requireNonNull(constants$1710.const$4,"cairo_toy_font_face_get_weight");
    }
    /**
     * {@snippet :
     * enum _cairo_font_weight cairo_toy_font_face_get_weight(struct _cairo_font_face* font_face);
     * }
     */
    public static int cairo_toy_font_face_get_weight(MemorySegment font_face) {
        var mh$ = cairo_toy_font_face_get_weight$MH();
        try {
            return (int)mh$.invokeExact(font_face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_user_font_face_create$MH() {
        return RuntimeHelper.requireNonNull(constants$1710.const$5,"cairo_user_font_face_create");
    }
    /**
     * {@snippet :
     * struct _cairo_font_face* cairo_user_font_face_create();
     * }
     */
    public static MemorySegment cairo_user_font_face_create() {
        var mh$ = cairo_user_font_face_create$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_user_font_face_set_init_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1712.const$1,"cairo_user_font_face_set_init_func");
    }
    /**
     * {@snippet :
     * void cairo_user_font_face_set_init_func(struct _cairo_font_face* font_face, enum _cairo_status (*init_func)(struct _cairo_scaled_font*,struct _cairo*,struct cairo_font_extents_t*));
     * }
     */
    public static void cairo_user_font_face_set_init_func(MemorySegment font_face, MemorySegment init_func) {
        var mh$ = cairo_user_font_face_set_init_func$MH();
        try {
            mh$.invokeExact(font_face, init_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_user_font_face_set_render_glyph_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1712.const$3,"cairo_user_font_face_set_render_glyph_func");
    }
    /**
     * {@snippet :
     * void cairo_user_font_face_set_render_glyph_func(struct _cairo_font_face* font_face, enum _cairo_status (*render_glyph_func)(struct _cairo_scaled_font*,unsigned long,struct _cairo*,struct cairo_text_extents_t*));
     * }
     */
    public static void cairo_user_font_face_set_render_glyph_func(MemorySegment font_face, MemorySegment render_glyph_func) {
        var mh$ = cairo_user_font_face_set_render_glyph_func$MH();
        try {
            mh$.invokeExact(font_face, render_glyph_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_user_font_face_set_render_color_glyph_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1712.const$5,"cairo_user_font_face_set_render_color_glyph_func");
    }
    /**
     * {@snippet :
     * void cairo_user_font_face_set_render_color_glyph_func(struct _cairo_font_face* font_face, enum _cairo_status (*render_glyph_func)(struct _cairo_scaled_font*,unsigned long,struct _cairo*,struct cairo_text_extents_t*));
     * }
     */
    public static void cairo_user_font_face_set_render_color_glyph_func(MemorySegment font_face, MemorySegment render_glyph_func) {
        var mh$ = cairo_user_font_face_set_render_color_glyph_func$MH();
        try {
            mh$.invokeExact(font_face, render_glyph_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_user_font_face_set_text_to_glyphs_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1713.const$1,"cairo_user_font_face_set_text_to_glyphs_func");
    }
    /**
     * {@snippet :
     * void cairo_user_font_face_set_text_to_glyphs_func(struct _cairo_font_face* font_face, enum _cairo_status (*text_to_glyphs_func)(struct _cairo_scaled_font*,char*,int,struct cairo_glyph_t**,int*,struct cairo_text_cluster_t**,int*,enum _cairo_text_cluster_flags*));
     * }
     */
    public static void cairo_user_font_face_set_text_to_glyphs_func(MemorySegment font_face, MemorySegment text_to_glyphs_func) {
        var mh$ = cairo_user_font_face_set_text_to_glyphs_func$MH();
        try {
            mh$.invokeExact(font_face, text_to_glyphs_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_user_font_face_set_unicode_to_glyph_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1713.const$3,"cairo_user_font_face_set_unicode_to_glyph_func");
    }
    /**
     * {@snippet :
     * void cairo_user_font_face_set_unicode_to_glyph_func(struct _cairo_font_face* font_face, enum _cairo_status (*unicode_to_glyph_func)(struct _cairo_scaled_font*,unsigned long,unsigned long*));
     * }
     */
    public static void cairo_user_font_face_set_unicode_to_glyph_func(MemorySegment font_face, MemorySegment unicode_to_glyph_func) {
        var mh$ = cairo_user_font_face_set_unicode_to_glyph_func$MH();
        try {
            mh$.invokeExact(font_face, unicode_to_glyph_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_user_font_face_get_init_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1713.const$5,"cairo_user_font_face_get_init_func");
    }
    /**
     * {@snippet :
     * enum _cairo_status (*cairo_user_font_face_get_init_func(struct _cairo_font_face* font_face))(struct _cairo_scaled_font*,struct _cairo*,struct cairo_font_extents_t*);
     * }
     */
    public static MemorySegment cairo_user_font_face_get_init_func(MemorySegment font_face) {
        var mh$ = cairo_user_font_face_get_init_func$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(font_face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_user_font_face_get_render_glyph_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1714.const$1,"cairo_user_font_face_get_render_glyph_func");
    }
    /**
     * {@snippet :
     * enum _cairo_status (*cairo_user_font_face_get_render_glyph_func(struct _cairo_font_face* font_face))(struct _cairo_scaled_font*,unsigned long,struct _cairo*,struct cairo_text_extents_t*);
     * }
     */
    public static MemorySegment cairo_user_font_face_get_render_glyph_func(MemorySegment font_face) {
        var mh$ = cairo_user_font_face_get_render_glyph_func$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(font_face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_user_font_face_get_render_color_glyph_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1714.const$3,"cairo_user_font_face_get_render_color_glyph_func");
    }
    /**
     * {@snippet :
     * enum _cairo_status (*cairo_user_font_face_get_render_color_glyph_func(struct _cairo_font_face* font_face))(struct _cairo_scaled_font*,unsigned long,struct _cairo*,struct cairo_text_extents_t*);
     * }
     */
    public static MemorySegment cairo_user_font_face_get_render_color_glyph_func(MemorySegment font_face) {
        var mh$ = cairo_user_font_face_get_render_color_glyph_func$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(font_face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_user_font_face_get_text_to_glyphs_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1714.const$5,"cairo_user_font_face_get_text_to_glyphs_func");
    }
    /**
     * {@snippet :
     * enum _cairo_status (*cairo_user_font_face_get_text_to_glyphs_func(struct _cairo_font_face* font_face))(struct _cairo_scaled_font*,char*,int,struct cairo_glyph_t**,int*,struct cairo_text_cluster_t**,int*,enum _cairo_text_cluster_flags*);
     * }
     */
    public static MemorySegment cairo_user_font_face_get_text_to_glyphs_func(MemorySegment font_face) {
        var mh$ = cairo_user_font_face_get_text_to_glyphs_func$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(font_face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_user_font_face_get_unicode_to_glyph_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1715.const$1,"cairo_user_font_face_get_unicode_to_glyph_func");
    }
    /**
     * {@snippet :
     * enum _cairo_status (*cairo_user_font_face_get_unicode_to_glyph_func(struct _cairo_font_face* font_face))(struct _cairo_scaled_font*,unsigned long,unsigned long*);
     * }
     */
    public static MemorySegment cairo_user_font_face_get_unicode_to_glyph_func(MemorySegment font_face) {
        var mh$ = cairo_user_font_face_get_unicode_to_glyph_func$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(font_face);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_user_scaled_font_get_foreground_marker$MH() {
        return RuntimeHelper.requireNonNull(constants$1715.const$2,"cairo_user_scaled_font_get_foreground_marker");
    }
    /**
     * {@snippet :
     * struct _cairo_pattern* cairo_user_scaled_font_get_foreground_marker(struct _cairo_scaled_font* scaled_font);
     * }
     */
    public static MemorySegment cairo_user_scaled_font_get_foreground_marker(MemorySegment scaled_font) {
        var mh$ = cairo_user_scaled_font_get_foreground_marker$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(scaled_font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_user_scaled_font_get_foreground_source$MH() {
        return RuntimeHelper.requireNonNull(constants$1715.const$3,"cairo_user_scaled_font_get_foreground_source");
    }
    /**
     * {@snippet :
     * struct _cairo_pattern* cairo_user_scaled_font_get_foreground_source(struct _cairo_scaled_font* scaled_font);
     * }
     */
    public static MemorySegment cairo_user_scaled_font_get_foreground_source(MemorySegment scaled_font) {
        var mh$ = cairo_user_scaled_font_get_foreground_source$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(scaled_font);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_operator$MH() {
        return RuntimeHelper.requireNonNull(constants$1715.const$4,"cairo_get_operator");
    }
    /**
     * {@snippet :
     * enum _cairo_operator cairo_get_operator(struct _cairo* cr);
     * }
     */
    public static int cairo_get_operator(MemorySegment cr) {
        var mh$ = cairo_get_operator$MH();
        try {
            return (int)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_source$MH() {
        return RuntimeHelper.requireNonNull(constants$1715.const$5,"cairo_get_source");
    }
    /**
     * {@snippet :
     * struct _cairo_pattern* cairo_get_source(struct _cairo* cr);
     * }
     */
    public static MemorySegment cairo_get_source(MemorySegment cr) {
        var mh$ = cairo_get_source$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_tolerance$MH() {
        return RuntimeHelper.requireNonNull(constants$1716.const$0,"cairo_get_tolerance");
    }
    /**
     * {@snippet :
     * double cairo_get_tolerance(struct _cairo* cr);
     * }
     */
    public static double cairo_get_tolerance(MemorySegment cr) {
        var mh$ = cairo_get_tolerance$MH();
        try {
            return (double)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_antialias$MH() {
        return RuntimeHelper.requireNonNull(constants$1716.const$1,"cairo_get_antialias");
    }
    /**
     * {@snippet :
     * enum _cairo_antialias cairo_get_antialias(struct _cairo* cr);
     * }
     */
    public static int cairo_get_antialias(MemorySegment cr) {
        var mh$ = cairo_get_antialias$MH();
        try {
            return (int)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_has_current_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1716.const$2,"cairo_has_current_point");
    }
    /**
     * {@snippet :
     * int cairo_has_current_point(struct _cairo* cr);
     * }
     */
    public static int cairo_has_current_point(MemorySegment cr) {
        var mh$ = cairo_has_current_point$MH();
        try {
            return (int)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_current_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1716.const$3,"cairo_get_current_point");
    }
    /**
     * {@snippet :
     * void cairo_get_current_point(struct _cairo* cr, double* x, double* y);
     * }
     */
    public static void cairo_get_current_point(MemorySegment cr, MemorySegment x, MemorySegment y) {
        var mh$ = cairo_get_current_point$MH();
        try {
            mh$.invokeExact(cr, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_fill_rule$MH() {
        return RuntimeHelper.requireNonNull(constants$1716.const$4,"cairo_get_fill_rule");
    }
    /**
     * {@snippet :
     * enum _cairo_fill_rule cairo_get_fill_rule(struct _cairo* cr);
     * }
     */
    public static int cairo_get_fill_rule(MemorySegment cr) {
        var mh$ = cairo_get_fill_rule$MH();
        try {
            return (int)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_line_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1716.const$5,"cairo_get_line_width");
    }
    /**
     * {@snippet :
     * double cairo_get_line_width(struct _cairo* cr);
     * }
     */
    public static double cairo_get_line_width(MemorySegment cr) {
        var mh$ = cairo_get_line_width$MH();
        try {
            return (double)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_hairline$MH() {
        return RuntimeHelper.requireNonNull(constants$1717.const$0,"cairo_get_hairline");
    }
    /**
     * {@snippet :
     * int cairo_get_hairline(struct _cairo* cr);
     * }
     */
    public static int cairo_get_hairline(MemorySegment cr) {
        var mh$ = cairo_get_hairline$MH();
        try {
            return (int)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_line_cap$MH() {
        return RuntimeHelper.requireNonNull(constants$1717.const$1,"cairo_get_line_cap");
    }
    /**
     * {@snippet :
     * enum _cairo_line_cap cairo_get_line_cap(struct _cairo* cr);
     * }
     */
    public static int cairo_get_line_cap(MemorySegment cr) {
        var mh$ = cairo_get_line_cap$MH();
        try {
            return (int)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_line_join$MH() {
        return RuntimeHelper.requireNonNull(constants$1717.const$2,"cairo_get_line_join");
    }
    /**
     * {@snippet :
     * enum _cairo_line_join cairo_get_line_join(struct _cairo* cr);
     * }
     */
    public static int cairo_get_line_join(MemorySegment cr) {
        var mh$ = cairo_get_line_join$MH();
        try {
            return (int)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_miter_limit$MH() {
        return RuntimeHelper.requireNonNull(constants$1717.const$3,"cairo_get_miter_limit");
    }
    /**
     * {@snippet :
     * double cairo_get_miter_limit(struct _cairo* cr);
     * }
     */
    public static double cairo_get_miter_limit(MemorySegment cr) {
        var mh$ = cairo_get_miter_limit$MH();
        try {
            return (double)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_dash_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1717.const$4,"cairo_get_dash_count");
    }
    /**
     * {@snippet :
     * int cairo_get_dash_count(struct _cairo* cr);
     * }
     */
    public static int cairo_get_dash_count(MemorySegment cr) {
        var mh$ = cairo_get_dash_count$MH();
        try {
            return (int)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_dash$MH() {
        return RuntimeHelper.requireNonNull(constants$1717.const$5,"cairo_get_dash");
    }
    /**
     * {@snippet :
     * void cairo_get_dash(struct _cairo* cr, double* dashes, double* offset);
     * }
     */
    public static void cairo_get_dash(MemorySegment cr, MemorySegment dashes, MemorySegment offset) {
        var mh$ = cairo_get_dash$MH();
        try {
            mh$.invokeExact(cr, dashes, offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1718.const$0,"cairo_get_matrix");
    }
    /**
     * {@snippet :
     * void cairo_get_matrix(struct _cairo* cr, struct _cairo_matrix* matrix);
     * }
     */
    public static void cairo_get_matrix(MemorySegment cr, MemorySegment matrix) {
        var mh$ = cairo_get_matrix$MH();
        try {
            mh$.invokeExact(cr, matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_target$MH() {
        return RuntimeHelper.requireNonNull(constants$1718.const$1,"cairo_get_target");
    }
    /**
     * {@snippet :
     * struct _cairo_surface* cairo_get_target(struct _cairo* cr);
     * }
     */
    public static MemorySegment cairo_get_target(MemorySegment cr) {
        var mh$ = cairo_get_target$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_get_group_target$MH() {
        return RuntimeHelper.requireNonNull(constants$1718.const$2,"cairo_get_group_target");
    }
    /**
     * {@snippet :
     * struct _cairo_surface* cairo_get_group_target(struct _cairo* cr);
     * }
     */
    public static MemorySegment cairo_get_group_target(MemorySegment cr) {
        var mh$ = cairo_get_group_target$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum _cairo_path_data_type.CAIRO_PATH_MOVE_TO = 0;
     * }
     */
    public static int CAIRO_PATH_MOVE_TO() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _cairo_path_data_type.CAIRO_PATH_LINE_TO = 1;
     * }
     */
    public static int CAIRO_PATH_LINE_TO() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _cairo_path_data_type.CAIRO_PATH_CURVE_TO = 2;
     * }
     */
    public static int CAIRO_PATH_CURVE_TO() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _cairo_path_data_type.CAIRO_PATH_CLOSE_PATH = 3;
     * }
     */
    public static int CAIRO_PATH_CLOSE_PATH() {
        return (int)3L;
    }
    public static MethodHandle cairo_copy_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1720.const$2,"cairo_copy_path");
    }
    /**
     * {@snippet :
     * struct cairo_path* cairo_copy_path(struct _cairo* cr);
     * }
     */
    public static MemorySegment cairo_copy_path(MemorySegment cr) {
        var mh$ = cairo_copy_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_copy_path_flat$MH() {
        return RuntimeHelper.requireNonNull(constants$1720.const$3,"cairo_copy_path_flat");
    }
    /**
     * {@snippet :
     * struct cairo_path* cairo_copy_path_flat(struct _cairo* cr);
     * }
     */
    public static MemorySegment cairo_copy_path_flat(MemorySegment cr) {
        var mh$ = cairo_copy_path_flat$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_append_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1720.const$4,"cairo_append_path");
    }
    /**
     * {@snippet :
     * void cairo_append_path(struct _cairo* cr, struct cairo_path* path);
     * }
     */
    public static void cairo_append_path(MemorySegment cr, MemorySegment path) {
        var mh$ = cairo_append_path$MH();
        try {
            mh$.invokeExact(cr, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_path_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1720.const$5,"cairo_path_destroy");
    }
    /**
     * {@snippet :
     * void cairo_path_destroy(struct cairo_path* path);
     * }
     */
    public static void cairo_path_destroy(MemorySegment path) {
        var mh$ = cairo_path_destroy$MH();
        try {
            mh$.invokeExact(path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_status$MH() {
        return RuntimeHelper.requireNonNull(constants$1721.const$0,"cairo_status");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_status(struct _cairo* cr);
     * }
     */
    public static int cairo_status(MemorySegment cr) {
        var mh$ = cairo_status$MH();
        try {
            return (int)mh$.invokeExact(cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_status_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1721.const$1,"cairo_status_to_string");
    }
    /**
     * {@snippet :
     * char* cairo_status_to_string(enum _cairo_status status);
     * }
     */
    public static MemorySegment cairo_status_to_string(int status) {
        var mh$ = cairo_status_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(status);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_reference$MH() {
        return RuntimeHelper.requireNonNull(constants$1721.const$2,"cairo_device_reference");
    }
    /**
     * {@snippet :
     * struct _cairo_device* cairo_device_reference(struct _cairo_device* device);
     * }
     */
    public static MemorySegment cairo_device_reference(MemorySegment device) {
        var mh$ = cairo_device_reference$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum _cairo_device_type.CAIRO_DEVICE_TYPE_DRM = 0;
     * }
     */
    public static int CAIRO_DEVICE_TYPE_DRM() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _cairo_device_type.CAIRO_DEVICE_TYPE_GL = 1;
     * }
     */
    public static int CAIRO_DEVICE_TYPE_GL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _cairo_device_type.CAIRO_DEVICE_TYPE_SCRIPT = 2;
     * }
     */
    public static int CAIRO_DEVICE_TYPE_SCRIPT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _cairo_device_type.CAIRO_DEVICE_TYPE_XCB = 3;
     * }
     */
    public static int CAIRO_DEVICE_TYPE_XCB() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _cairo_device_type.CAIRO_DEVICE_TYPE_XLIB = 4;
     * }
     */
    public static int CAIRO_DEVICE_TYPE_XLIB() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _cairo_device_type.CAIRO_DEVICE_TYPE_XML = 5;
     * }
     */
    public static int CAIRO_DEVICE_TYPE_XML() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum _cairo_device_type.CAIRO_DEVICE_TYPE_COGL = 6;
     * }
     */
    public static int CAIRO_DEVICE_TYPE_COGL() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum _cairo_device_type.CAIRO_DEVICE_TYPE_WIN32 = 7;
     * }
     */
    public static int CAIRO_DEVICE_TYPE_WIN32() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum _cairo_device_type.CAIRO_DEVICE_TYPE_INVALID = -1;
     * }
     */
    public static int CAIRO_DEVICE_TYPE_INVALID() {
        return (int)-1L;
    }
    public static MethodHandle cairo_device_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1721.const$3,"cairo_device_get_type");
    }
    /**
     * {@snippet :
     * enum _cairo_device_type cairo_device_get_type(struct _cairo_device* device);
     * }
     */
    public static int cairo_device_get_type(MemorySegment device) {
        var mh$ = cairo_device_get_type$MH();
        try {
            return (int)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_status$MH() {
        return RuntimeHelper.requireNonNull(constants$1721.const$4,"cairo_device_status");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_device_status(struct _cairo_device* device);
     * }
     */
    public static int cairo_device_status(MemorySegment device) {
        var mh$ = cairo_device_status$MH();
        try {
            return (int)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_acquire$MH() {
        return RuntimeHelper.requireNonNull(constants$1721.const$5,"cairo_device_acquire");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_device_acquire(struct _cairo_device* device);
     * }
     */
    public static int cairo_device_acquire(MemorySegment device) {
        var mh$ = cairo_device_acquire$MH();
        try {
            return (int)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_release$MH() {
        return RuntimeHelper.requireNonNull(constants$1722.const$0,"cairo_device_release");
    }
    /**
     * {@snippet :
     * void cairo_device_release(struct _cairo_device* device);
     * }
     */
    public static void cairo_device_release(MemorySegment device) {
        var mh$ = cairo_device_release$MH();
        try {
            mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_flush$MH() {
        return RuntimeHelper.requireNonNull(constants$1722.const$1,"cairo_device_flush");
    }
    /**
     * {@snippet :
     * void cairo_device_flush(struct _cairo_device* device);
     * }
     */
    public static void cairo_device_flush(MemorySegment device) {
        var mh$ = cairo_device_flush$MH();
        try {
            mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1722.const$2,"cairo_device_finish");
    }
    /**
     * {@snippet :
     * void cairo_device_finish(struct _cairo_device* device);
     * }
     */
    public static void cairo_device_finish(MemorySegment device) {
        var mh$ = cairo_device_finish$MH();
        try {
            mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1722.const$3,"cairo_device_destroy");
    }
    /**
     * {@snippet :
     * void cairo_device_destroy(struct _cairo_device* device);
     * }
     */
    public static void cairo_device_destroy(MemorySegment device) {
        var mh$ = cairo_device_destroy$MH();
        try {
            mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_get_reference_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1722.const$4,"cairo_device_get_reference_count");
    }
    /**
     * {@snippet :
     * unsigned int cairo_device_get_reference_count(struct _cairo_device* device);
     * }
     */
    public static int cairo_device_get_reference_count(MemorySegment device) {
        var mh$ = cairo_device_get_reference_count$MH();
        try {
            return (int)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_get_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1722.const$5,"cairo_device_get_user_data");
    }
    /**
     * {@snippet :
     * void* cairo_device_get_user_data(struct _cairo_device* device, struct _cairo_user_data_key* key);
     * }
     */
    public static MemorySegment cairo_device_get_user_data(MemorySegment device, MemorySegment key) {
        var mh$ = cairo_device_get_user_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(device, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_set_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1723.const$1,"cairo_device_set_user_data");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_device_set_user_data(struct _cairo_device* device, struct _cairo_user_data_key* key, void* user_data, void (*destroy)(void*));
     * }
     */
    public static int cairo_device_set_user_data(MemorySegment device, MemorySegment key, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = cairo_device_set_user_data$MH();
        try {
            return (int)mh$.invokeExact(device, key, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_create_similar$MH() {
        return RuntimeHelper.requireNonNull(constants$1723.const$3,"cairo_surface_create_similar");
    }
    /**
     * {@snippet :
     * struct _cairo_surface* cairo_surface_create_similar(struct _cairo_surface* other, enum _cairo_content content, int width, int height);
     * }
     */
    public static MemorySegment cairo_surface_create_similar(MemorySegment other, int content, int width, int height) {
        var mh$ = cairo_surface_create_similar$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(other, content, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_create_similar_image$MH() {
        return RuntimeHelper.requireNonNull(constants$1723.const$4,"cairo_surface_create_similar_image");
    }
    /**
     * {@snippet :
     * struct _cairo_surface* cairo_surface_create_similar_image(struct _cairo_surface* other, enum _cairo_format format, int width, int height);
     * }
     */
    public static MemorySegment cairo_surface_create_similar_image(MemorySegment other, int format, int width, int height) {
        var mh$ = cairo_surface_create_similar_image$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(other, format, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_map_to_image$MH() {
        return RuntimeHelper.requireNonNull(constants$1723.const$5,"cairo_surface_map_to_image");
    }
    /**
     * {@snippet :
     * struct _cairo_surface* cairo_surface_map_to_image(struct _cairo_surface* surface, struct _cairo_rectangle_int* extents);
     * }
     */
    public static MemorySegment cairo_surface_map_to_image(MemorySegment surface, MemorySegment extents) {
        var mh$ = cairo_surface_map_to_image$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(surface, extents);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_unmap_image$MH() {
        return RuntimeHelper.requireNonNull(constants$1724.const$0,"cairo_surface_unmap_image");
    }
    /**
     * {@snippet :
     * void cairo_surface_unmap_image(struct _cairo_surface* surface, struct _cairo_surface* image);
     * }
     */
    public static void cairo_surface_unmap_image(MemorySegment surface, MemorySegment image) {
        var mh$ = cairo_surface_unmap_image$MH();
        try {
            mh$.invokeExact(surface, image);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_create_for_rectangle$MH() {
        return RuntimeHelper.requireNonNull(constants$1724.const$2,"cairo_surface_create_for_rectangle");
    }
    /**
     * {@snippet :
     * struct _cairo_surface* cairo_surface_create_for_rectangle(struct _cairo_surface* target, double x, double y, double width, double height);
     * }
     */
    public static MemorySegment cairo_surface_create_for_rectangle(MemorySegment target, double x, double y, double width, double height) {
        var mh$ = cairo_surface_create_for_rectangle$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(target, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum cairo_surface_observer_mode_t.CAIRO_SURFACE_OBSERVER_NORMAL = 0;
     * }
     */
    public static int CAIRO_SURFACE_OBSERVER_NORMAL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum cairo_surface_observer_mode_t.CAIRO_SURFACE_OBSERVER_RECORD_OPERATIONS = 1;
     * }
     */
    public static int CAIRO_SURFACE_OBSERVER_RECORD_OPERATIONS() {
        return (int)1L;
    }
    public static MethodHandle cairo_surface_create_observer$MH() {
        return RuntimeHelper.requireNonNull(constants$1724.const$3,"cairo_surface_create_observer");
    }
    /**
     * {@snippet :
     * struct _cairo_surface* cairo_surface_create_observer(struct _cairo_surface* target, enum cairo_surface_observer_mode_t mode);
     * }
     */
    public static MemorySegment cairo_surface_create_observer(MemorySegment target, int mode) {
        var mh$ = cairo_surface_create_observer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(target, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_observer_add_paint_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$1725.const$0,"cairo_surface_observer_add_paint_callback");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_surface_observer_add_paint_callback(struct _cairo_surface* abstract_surface, void (*func)(struct _cairo_surface*,struct _cairo_surface*,void*), void* data);
     * }
     */
    public static int cairo_surface_observer_add_paint_callback(MemorySegment abstract_surface, MemorySegment func, MemorySegment data) {
        var mh$ = cairo_surface_observer_add_paint_callback$MH();
        try {
            return (int)mh$.invokeExact(abstract_surface, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_observer_add_mask_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$1725.const$2,"cairo_surface_observer_add_mask_callback");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_surface_observer_add_mask_callback(struct _cairo_surface* abstract_surface, void (*func)(struct _cairo_surface*,struct _cairo_surface*,void*), void* data);
     * }
     */
    public static int cairo_surface_observer_add_mask_callback(MemorySegment abstract_surface, MemorySegment func, MemorySegment data) {
        var mh$ = cairo_surface_observer_add_mask_callback$MH();
        try {
            return (int)mh$.invokeExact(abstract_surface, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_observer_add_fill_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$1725.const$4,"cairo_surface_observer_add_fill_callback");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_surface_observer_add_fill_callback(struct _cairo_surface* abstract_surface, void (*func)(struct _cairo_surface*,struct _cairo_surface*,void*), void* data);
     * }
     */
    public static int cairo_surface_observer_add_fill_callback(MemorySegment abstract_surface, MemorySegment func, MemorySegment data) {
        var mh$ = cairo_surface_observer_add_fill_callback$MH();
        try {
            return (int)mh$.invokeExact(abstract_surface, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_observer_add_stroke_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$1726.const$0,"cairo_surface_observer_add_stroke_callback");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_surface_observer_add_stroke_callback(struct _cairo_surface* abstract_surface, void (*func)(struct _cairo_surface*,struct _cairo_surface*,void*), void* data);
     * }
     */
    public static int cairo_surface_observer_add_stroke_callback(MemorySegment abstract_surface, MemorySegment func, MemorySegment data) {
        var mh$ = cairo_surface_observer_add_stroke_callback$MH();
        try {
            return (int)mh$.invokeExact(abstract_surface, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_observer_add_glyphs_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$1726.const$2,"cairo_surface_observer_add_glyphs_callback");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_surface_observer_add_glyphs_callback(struct _cairo_surface* abstract_surface, void (*func)(struct _cairo_surface*,struct _cairo_surface*,void*), void* data);
     * }
     */
    public static int cairo_surface_observer_add_glyphs_callback(MemorySegment abstract_surface, MemorySegment func, MemorySegment data) {
        var mh$ = cairo_surface_observer_add_glyphs_callback$MH();
        try {
            return (int)mh$.invokeExact(abstract_surface, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_observer_add_flush_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$1726.const$4,"cairo_surface_observer_add_flush_callback");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_surface_observer_add_flush_callback(struct _cairo_surface* abstract_surface, void (*func)(struct _cairo_surface*,struct _cairo_surface*,void*), void* data);
     * }
     */
    public static int cairo_surface_observer_add_flush_callback(MemorySegment abstract_surface, MemorySegment func, MemorySegment data) {
        var mh$ = cairo_surface_observer_add_flush_callback$MH();
        try {
            return (int)mh$.invokeExact(abstract_surface, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_observer_add_finish_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$1727.const$0,"cairo_surface_observer_add_finish_callback");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_surface_observer_add_finish_callback(struct _cairo_surface* abstract_surface, void (*func)(struct _cairo_surface*,struct _cairo_surface*,void*), void* data);
     * }
     */
    public static int cairo_surface_observer_add_finish_callback(MemorySegment abstract_surface, MemorySegment func, MemorySegment data) {
        var mh$ = cairo_surface_observer_add_finish_callback$MH();
        try {
            return (int)mh$.invokeExact(abstract_surface, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_observer_print$MH() {
        return RuntimeHelper.requireNonNull(constants$1727.const$2,"cairo_surface_observer_print");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_surface_observer_print(struct _cairo_surface* surface, enum _cairo_status (*write_func)(void*,unsigned char*,unsigned int), void* closure);
     * }
     */
    public static int cairo_surface_observer_print(MemorySegment surface, MemorySegment write_func, MemorySegment closure) {
        var mh$ = cairo_surface_observer_print$MH();
        try {
            return (int)mh$.invokeExact(surface, write_func, closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_observer_elapsed$MH() {
        return RuntimeHelper.requireNonNull(constants$1727.const$3,"cairo_surface_observer_elapsed");
    }
    /**
     * {@snippet :
     * double cairo_surface_observer_elapsed(struct _cairo_surface* surface);
     * }
     */
    public static double cairo_surface_observer_elapsed(MemorySegment surface) {
        var mh$ = cairo_surface_observer_elapsed$MH();
        try {
            return (double)mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_observer_print$MH() {
        return RuntimeHelper.requireNonNull(constants$1727.const$5,"cairo_device_observer_print");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_device_observer_print(struct _cairo_device* device, enum _cairo_status (*write_func)(void*,unsigned char*,unsigned int), void* closure);
     * }
     */
    public static int cairo_device_observer_print(MemorySegment device, MemorySegment write_func, MemorySegment closure) {
        var mh$ = cairo_device_observer_print$MH();
        try {
            return (int)mh$.invokeExact(device, write_func, closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_observer_elapsed$MH() {
        return RuntimeHelper.requireNonNull(constants$1728.const$0,"cairo_device_observer_elapsed");
    }
    /**
     * {@snippet :
     * double cairo_device_observer_elapsed(struct _cairo_device* device);
     * }
     */
    public static double cairo_device_observer_elapsed(MemorySegment device) {
        var mh$ = cairo_device_observer_elapsed$MH();
        try {
            return (double)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_observer_paint_elapsed$MH() {
        return RuntimeHelper.requireNonNull(constants$1728.const$1,"cairo_device_observer_paint_elapsed");
    }
    /**
     * {@snippet :
     * double cairo_device_observer_paint_elapsed(struct _cairo_device* device);
     * }
     */
    public static double cairo_device_observer_paint_elapsed(MemorySegment device) {
        var mh$ = cairo_device_observer_paint_elapsed$MH();
        try {
            return (double)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_observer_mask_elapsed$MH() {
        return RuntimeHelper.requireNonNull(constants$1728.const$2,"cairo_device_observer_mask_elapsed");
    }
    /**
     * {@snippet :
     * double cairo_device_observer_mask_elapsed(struct _cairo_device* device);
     * }
     */
    public static double cairo_device_observer_mask_elapsed(MemorySegment device) {
        var mh$ = cairo_device_observer_mask_elapsed$MH();
        try {
            return (double)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_observer_fill_elapsed$MH() {
        return RuntimeHelper.requireNonNull(constants$1728.const$3,"cairo_device_observer_fill_elapsed");
    }
    /**
     * {@snippet :
     * double cairo_device_observer_fill_elapsed(struct _cairo_device* device);
     * }
     */
    public static double cairo_device_observer_fill_elapsed(MemorySegment device) {
        var mh$ = cairo_device_observer_fill_elapsed$MH();
        try {
            return (double)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_observer_stroke_elapsed$MH() {
        return RuntimeHelper.requireNonNull(constants$1728.const$4,"cairo_device_observer_stroke_elapsed");
    }
    /**
     * {@snippet :
     * double cairo_device_observer_stroke_elapsed(struct _cairo_device* device);
     * }
     */
    public static double cairo_device_observer_stroke_elapsed(MemorySegment device) {
        var mh$ = cairo_device_observer_stroke_elapsed$MH();
        try {
            return (double)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_device_observer_glyphs_elapsed$MH() {
        return RuntimeHelper.requireNonNull(constants$1728.const$5,"cairo_device_observer_glyphs_elapsed");
    }
    /**
     * {@snippet :
     * double cairo_device_observer_glyphs_elapsed(struct _cairo_device* device);
     * }
     */
    public static double cairo_device_observer_glyphs_elapsed(MemorySegment device) {
        var mh$ = cairo_device_observer_glyphs_elapsed$MH();
        try {
            return (double)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_reference$MH() {
        return RuntimeHelper.requireNonNull(constants$1729.const$0,"cairo_surface_reference");
    }
    /**
     * {@snippet :
     * struct _cairo_surface* cairo_surface_reference(struct _cairo_surface* surface);
     * }
     */
    public static MemorySegment cairo_surface_reference(MemorySegment surface) {
        var mh$ = cairo_surface_reference$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1729.const$1,"cairo_surface_finish");
    }
    /**
     * {@snippet :
     * void cairo_surface_finish(struct _cairo_surface* surface);
     * }
     */
    public static void cairo_surface_finish(MemorySegment surface) {
        var mh$ = cairo_surface_finish$MH();
        try {
            mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1729.const$2,"cairo_surface_destroy");
    }
    /**
     * {@snippet :
     * void cairo_surface_destroy(struct _cairo_surface* surface);
     * }
     */
    public static void cairo_surface_destroy(MemorySegment surface) {
        var mh$ = cairo_surface_destroy$MH();
        try {
            mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_get_device$MH() {
        return RuntimeHelper.requireNonNull(constants$1729.const$3,"cairo_surface_get_device");
    }
    /**
     * {@snippet :
     * struct _cairo_device* cairo_surface_get_device(struct _cairo_surface* surface);
     * }
     */
    public static MemorySegment cairo_surface_get_device(MemorySegment surface) {
        var mh$ = cairo_surface_get_device$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_get_reference_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1729.const$4,"cairo_surface_get_reference_count");
    }
    /**
     * {@snippet :
     * unsigned int cairo_surface_get_reference_count(struct _cairo_surface* surface);
     * }
     */
    public static int cairo_surface_get_reference_count(MemorySegment surface) {
        var mh$ = cairo_surface_get_reference_count$MH();
        try {
            return (int)mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_status$MH() {
        return RuntimeHelper.requireNonNull(constants$1729.const$5,"cairo_surface_status");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_surface_status(struct _cairo_surface* surface);
     * }
     */
    public static int cairo_surface_status(MemorySegment surface) {
        var mh$ = cairo_surface_status$MH();
        try {
            return (int)mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum _cairo_surface_type.CAIRO_SURFACE_TYPE_IMAGE = 0;
     * }
     */
    public static int CAIRO_SURFACE_TYPE_IMAGE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _cairo_surface_type.CAIRO_SURFACE_TYPE_PDF = 1;
     * }
     */
    public static int CAIRO_SURFACE_TYPE_PDF() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _cairo_surface_type.CAIRO_SURFACE_TYPE_PS = 2;
     * }
     */
    public static int CAIRO_SURFACE_TYPE_PS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _cairo_surface_type.CAIRO_SURFACE_TYPE_XLIB = 3;
     * }
     */
    public static int CAIRO_SURFACE_TYPE_XLIB() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _cairo_surface_type.CAIRO_SURFACE_TYPE_XCB = 4;
     * }
     */
    public static int CAIRO_SURFACE_TYPE_XCB() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _cairo_surface_type.CAIRO_SURFACE_TYPE_GLITZ = 5;
     * }
     */
    public static int CAIRO_SURFACE_TYPE_GLITZ() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum _cairo_surface_type.CAIRO_SURFACE_TYPE_QUARTZ = 6;
     * }
     */
    public static int CAIRO_SURFACE_TYPE_QUARTZ() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum _cairo_surface_type.CAIRO_SURFACE_TYPE_WIN32 = 7;
     * }
     */
    public static int CAIRO_SURFACE_TYPE_WIN32() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum _cairo_surface_type.CAIRO_SURFACE_TYPE_BEOS = 8;
     * }
     */
    public static int CAIRO_SURFACE_TYPE_BEOS() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum _cairo_surface_type.CAIRO_SURFACE_TYPE_DIRECTFB = 9;
     * }
     */
    public static int CAIRO_SURFACE_TYPE_DIRECTFB() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum _cairo_surface_type.CAIRO_SURFACE_TYPE_SVG = 10;
     * }
     */
    public static int CAIRO_SURFACE_TYPE_SVG() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum _cairo_surface_type.CAIRO_SURFACE_TYPE_OS2 = 11;
     * }
     */
    public static int CAIRO_SURFACE_TYPE_OS2() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum _cairo_surface_type.CAIRO_SURFACE_TYPE_WIN32_PRINTING = 12;
     * }
     */
    public static int CAIRO_SURFACE_TYPE_WIN32_PRINTING() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum _cairo_surface_type.CAIRO_SURFACE_TYPE_QUARTZ_IMAGE = 13;
     * }
     */
    public static int CAIRO_SURFACE_TYPE_QUARTZ_IMAGE() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum _cairo_surface_type.CAIRO_SURFACE_TYPE_SCRIPT = 14;
     * }
     */
    public static int CAIRO_SURFACE_TYPE_SCRIPT() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum _cairo_surface_type.CAIRO_SURFACE_TYPE_QT = 15;
     * }
     */
    public static int CAIRO_SURFACE_TYPE_QT() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum _cairo_surface_type.CAIRO_SURFACE_TYPE_RECORDING = 16;
     * }
     */
    public static int CAIRO_SURFACE_TYPE_RECORDING() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum _cairo_surface_type.CAIRO_SURFACE_TYPE_VG = 17;
     * }
     */
    public static int CAIRO_SURFACE_TYPE_VG() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum _cairo_surface_type.CAIRO_SURFACE_TYPE_GL = 18;
     * }
     */
    public static int CAIRO_SURFACE_TYPE_GL() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum _cairo_surface_type.CAIRO_SURFACE_TYPE_DRM = 19;
     * }
     */
    public static int CAIRO_SURFACE_TYPE_DRM() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum _cairo_surface_type.CAIRO_SURFACE_TYPE_TEE = 20;
     * }
     */
    public static int CAIRO_SURFACE_TYPE_TEE() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum _cairo_surface_type.CAIRO_SURFACE_TYPE_XML = 21;
     * }
     */
    public static int CAIRO_SURFACE_TYPE_XML() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * enum _cairo_surface_type.CAIRO_SURFACE_TYPE_SKIA = 22;
     * }
     */
    public static int CAIRO_SURFACE_TYPE_SKIA() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * enum _cairo_surface_type.CAIRO_SURFACE_TYPE_SUBSURFACE = 23;
     * }
     */
    public static int CAIRO_SURFACE_TYPE_SUBSURFACE() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * enum _cairo_surface_type.CAIRO_SURFACE_TYPE_COGL = 24;
     * }
     */
    public static int CAIRO_SURFACE_TYPE_COGL() {
        return (int)24L;
    }
    public static MethodHandle cairo_surface_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1730.const$0,"cairo_surface_get_type");
    }
    /**
     * {@snippet :
     * enum _cairo_surface_type cairo_surface_get_type(struct _cairo_surface* surface);
     * }
     */
    public static int cairo_surface_get_type(MemorySegment surface) {
        var mh$ = cairo_surface_get_type$MH();
        try {
            return (int)mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_get_content$MH() {
        return RuntimeHelper.requireNonNull(constants$1730.const$1,"cairo_surface_get_content");
    }
    /**
     * {@snippet :
     * enum _cairo_content cairo_surface_get_content(struct _cairo_surface* surface);
     * }
     */
    public static int cairo_surface_get_content(MemorySegment surface) {
        var mh$ = cairo_surface_get_content$MH();
        try {
            return (int)mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_write_to_png$MH() {
        return RuntimeHelper.requireNonNull(constants$1730.const$2,"cairo_surface_write_to_png");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_surface_write_to_png(struct _cairo_surface* surface, char* filename);
     * }
     */
    public static int cairo_surface_write_to_png(MemorySegment surface, MemorySegment filename) {
        var mh$ = cairo_surface_write_to_png$MH();
        try {
            return (int)mh$.invokeExact(surface, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_write_to_png_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$1730.const$4,"cairo_surface_write_to_png_stream");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_surface_write_to_png_stream(struct _cairo_surface* surface, enum _cairo_status (*write_func)(void*,unsigned char*,unsigned int), void* closure);
     * }
     */
    public static int cairo_surface_write_to_png_stream(MemorySegment surface, MemorySegment write_func, MemorySegment closure) {
        var mh$ = cairo_surface_write_to_png_stream$MH();
        try {
            return (int)mh$.invokeExact(surface, write_func, closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_get_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1730.const$5,"cairo_surface_get_user_data");
    }
    /**
     * {@snippet :
     * void* cairo_surface_get_user_data(struct _cairo_surface* surface, struct _cairo_user_data_key* key);
     * }
     */
    public static MemorySegment cairo_surface_get_user_data(MemorySegment surface, MemorySegment key) {
        var mh$ = cairo_surface_get_user_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(surface, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_set_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1731.const$1,"cairo_surface_set_user_data");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_surface_set_user_data(struct _cairo_surface* surface, struct _cairo_user_data_key* key, void* user_data, void (*destroy)(void*));
     * }
     */
    public static int cairo_surface_set_user_data(MemorySegment surface, MemorySegment key, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = cairo_surface_set_user_data$MH();
        try {
            return (int)mh$.invokeExact(surface, key, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_get_mime_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1731.const$2,"cairo_surface_get_mime_data");
    }
    /**
     * {@snippet :
     * void cairo_surface_get_mime_data(struct _cairo_surface* surface, char* mime_type, unsigned char** data, unsigned long* length);
     * }
     */
    public static void cairo_surface_get_mime_data(MemorySegment surface, MemorySegment mime_type, MemorySegment data, MemorySegment length) {
        var mh$ = cairo_surface_get_mime_data$MH();
        try {
            mh$.invokeExact(surface, mime_type, data, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_set_mime_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1731.const$5,"cairo_surface_set_mime_data");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_surface_set_mime_data(struct _cairo_surface* surface, char* mime_type, unsigned char* data, unsigned long length, void (*destroy)(void*), void* closure);
     * }
     */
    public static int cairo_surface_set_mime_data(MemorySegment surface, MemorySegment mime_type, MemorySegment data, long length, MemorySegment destroy, MemorySegment closure) {
        var mh$ = cairo_surface_set_mime_data$MH();
        try {
            return (int)mh$.invokeExact(surface, mime_type, data, length, destroy, closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_supports_mime_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1732.const$0,"cairo_surface_supports_mime_type");
    }
    /**
     * {@snippet :
     * int cairo_surface_supports_mime_type(struct _cairo_surface* surface, char* mime_type);
     * }
     */
    public static int cairo_surface_supports_mime_type(MemorySegment surface, MemorySegment mime_type) {
        var mh$ = cairo_surface_supports_mime_type$MH();
        try {
            return (int)mh$.invokeExact(surface, mime_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_get_font_options$MH() {
        return RuntimeHelper.requireNonNull(constants$1732.const$1,"cairo_surface_get_font_options");
    }
    /**
     * {@snippet :
     * void cairo_surface_get_font_options(struct _cairo_surface* surface, struct _cairo_font_options* options);
     * }
     */
    public static void cairo_surface_get_font_options(MemorySegment surface, MemorySegment options) {
        var mh$ = cairo_surface_get_font_options$MH();
        try {
            mh$.invokeExact(surface, options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_flush$MH() {
        return RuntimeHelper.requireNonNull(constants$1732.const$2,"cairo_surface_flush");
    }
    /**
     * {@snippet :
     * void cairo_surface_flush(struct _cairo_surface* surface);
     * }
     */
    public static void cairo_surface_flush(MemorySegment surface) {
        var mh$ = cairo_surface_flush$MH();
        try {
            mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_mark_dirty$MH() {
        return RuntimeHelper.requireNonNull(constants$1732.const$3,"cairo_surface_mark_dirty");
    }
    /**
     * {@snippet :
     * void cairo_surface_mark_dirty(struct _cairo_surface* surface);
     * }
     */
    public static void cairo_surface_mark_dirty(MemorySegment surface) {
        var mh$ = cairo_surface_mark_dirty$MH();
        try {
            mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_mark_dirty_rectangle$MH() {
        return RuntimeHelper.requireNonNull(constants$1732.const$4,"cairo_surface_mark_dirty_rectangle");
    }
    /**
     * {@snippet :
     * void cairo_surface_mark_dirty_rectangle(struct _cairo_surface* surface, int x, int y, int width, int height);
     * }
     */
    public static void cairo_surface_mark_dirty_rectangle(MemorySegment surface, int x, int y, int width, int height) {
        var mh$ = cairo_surface_mark_dirty_rectangle$MH();
        try {
            mh$.invokeExact(surface, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_set_device_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1732.const$5,"cairo_surface_set_device_scale");
    }
    /**
     * {@snippet :
     * void cairo_surface_set_device_scale(struct _cairo_surface* surface, double x_scale, double y_scale);
     * }
     */
    public static void cairo_surface_set_device_scale(MemorySegment surface, double x_scale, double y_scale) {
        var mh$ = cairo_surface_set_device_scale$MH();
        try {
            mh$.invokeExact(surface, x_scale, y_scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_get_device_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1733.const$0,"cairo_surface_get_device_scale");
    }
    /**
     * {@snippet :
     * void cairo_surface_get_device_scale(struct _cairo_surface* surface, double* x_scale, double* y_scale);
     * }
     */
    public static void cairo_surface_get_device_scale(MemorySegment surface, MemorySegment x_scale, MemorySegment y_scale) {
        var mh$ = cairo_surface_get_device_scale$MH();
        try {
            mh$.invokeExact(surface, x_scale, y_scale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_set_device_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1733.const$1,"cairo_surface_set_device_offset");
    }
    /**
     * {@snippet :
     * void cairo_surface_set_device_offset(struct _cairo_surface* surface, double x_offset, double y_offset);
     * }
     */
    public static void cairo_surface_set_device_offset(MemorySegment surface, double x_offset, double y_offset) {
        var mh$ = cairo_surface_set_device_offset$MH();
        try {
            mh$.invokeExact(surface, x_offset, y_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_get_device_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$1733.const$2,"cairo_surface_get_device_offset");
    }
    /**
     * {@snippet :
     * void cairo_surface_get_device_offset(struct _cairo_surface* surface, double* x_offset, double* y_offset);
     * }
     */
    public static void cairo_surface_get_device_offset(MemorySegment surface, MemorySegment x_offset, MemorySegment y_offset) {
        var mh$ = cairo_surface_get_device_offset$MH();
        try {
            mh$.invokeExact(surface, x_offset, y_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_set_fallback_resolution$MH() {
        return RuntimeHelper.requireNonNull(constants$1733.const$3,"cairo_surface_set_fallback_resolution");
    }
    /**
     * {@snippet :
     * void cairo_surface_set_fallback_resolution(struct _cairo_surface* surface, double x_pixels_per_inch, double y_pixels_per_inch);
     * }
     */
    public static void cairo_surface_set_fallback_resolution(MemorySegment surface, double x_pixels_per_inch, double y_pixels_per_inch) {
        var mh$ = cairo_surface_set_fallback_resolution$MH();
        try {
            mh$.invokeExact(surface, x_pixels_per_inch, y_pixels_per_inch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_get_fallback_resolution$MH() {
        return RuntimeHelper.requireNonNull(constants$1733.const$4,"cairo_surface_get_fallback_resolution");
    }
    /**
     * {@snippet :
     * void cairo_surface_get_fallback_resolution(struct _cairo_surface* surface, double* x_pixels_per_inch, double* y_pixels_per_inch);
     * }
     */
    public static void cairo_surface_get_fallback_resolution(MemorySegment surface, MemorySegment x_pixels_per_inch, MemorySegment y_pixels_per_inch) {
        var mh$ = cairo_surface_get_fallback_resolution$MH();
        try {
            mh$.invokeExact(surface, x_pixels_per_inch, y_pixels_per_inch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_copy_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1733.const$5,"cairo_surface_copy_page");
    }
    /**
     * {@snippet :
     * void cairo_surface_copy_page(struct _cairo_surface* surface);
     * }
     */
    public static void cairo_surface_copy_page(MemorySegment surface) {
        var mh$ = cairo_surface_copy_page$MH();
        try {
            mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_show_page$MH() {
        return RuntimeHelper.requireNonNull(constants$1734.const$0,"cairo_surface_show_page");
    }
    /**
     * {@snippet :
     * void cairo_surface_show_page(struct _cairo_surface* surface);
     * }
     */
    public static void cairo_surface_show_page(MemorySegment surface) {
        var mh$ = cairo_surface_show_page$MH();
        try {
            mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_surface_has_show_text_glyphs$MH() {
        return RuntimeHelper.requireNonNull(constants$1734.const$1,"cairo_surface_has_show_text_glyphs");
    }
    /**
     * {@snippet :
     * int cairo_surface_has_show_text_glyphs(struct _cairo_surface* surface);
     * }
     */
    public static int cairo_surface_has_show_text_glyphs(MemorySegment surface) {
        var mh$ = cairo_surface_has_show_text_glyphs$MH();
        try {
            return (int)mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_image_surface_create$MH() {
        return RuntimeHelper.requireNonNull(constants$1734.const$2,"cairo_image_surface_create");
    }
    /**
     * {@snippet :
     * struct _cairo_surface* cairo_image_surface_create(enum _cairo_format format, int width, int height);
     * }
     */
    public static MemorySegment cairo_image_surface_create(int format, int width, int height) {
        var mh$ = cairo_image_surface_create$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(format, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_format_stride_for_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1734.const$3,"cairo_format_stride_for_width");
    }
    /**
     * {@snippet :
     * int cairo_format_stride_for_width(enum _cairo_format format, int width);
     * }
     */
    public static int cairo_format_stride_for_width(int format, int width) {
        var mh$ = cairo_format_stride_for_width$MH();
        try {
            return (int)mh$.invokeExact(format, width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_image_surface_create_for_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1734.const$5,"cairo_image_surface_create_for_data");
    }
    /**
     * {@snippet :
     * struct _cairo_surface* cairo_image_surface_create_for_data(unsigned char* data, enum _cairo_format format, int width, int height, int stride);
     * }
     */
    public static MemorySegment cairo_image_surface_create_for_data(MemorySegment data, int format, int width, int height, int stride) {
        var mh$ = cairo_image_surface_create_for_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(data, format, width, height, stride);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_image_surface_get_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1735.const$0,"cairo_image_surface_get_data");
    }
    /**
     * {@snippet :
     * unsigned char* cairo_image_surface_get_data(struct _cairo_surface* surface);
     * }
     */
    public static MemorySegment cairo_image_surface_get_data(MemorySegment surface) {
        var mh$ = cairo_image_surface_get_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_image_surface_get_format$MH() {
        return RuntimeHelper.requireNonNull(constants$1735.const$1,"cairo_image_surface_get_format");
    }
    /**
     * {@snippet :
     * enum _cairo_format cairo_image_surface_get_format(struct _cairo_surface* surface);
     * }
     */
    public static int cairo_image_surface_get_format(MemorySegment surface) {
        var mh$ = cairo_image_surface_get_format$MH();
        try {
            return (int)mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_image_surface_get_width$MH() {
        return RuntimeHelper.requireNonNull(constants$1735.const$2,"cairo_image_surface_get_width");
    }
    /**
     * {@snippet :
     * int cairo_image_surface_get_width(struct _cairo_surface* surface);
     * }
     */
    public static int cairo_image_surface_get_width(MemorySegment surface) {
        var mh$ = cairo_image_surface_get_width$MH();
        try {
            return (int)mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_image_surface_get_height$MH() {
        return RuntimeHelper.requireNonNull(constants$1735.const$3,"cairo_image_surface_get_height");
    }
    /**
     * {@snippet :
     * int cairo_image_surface_get_height(struct _cairo_surface* surface);
     * }
     */
    public static int cairo_image_surface_get_height(MemorySegment surface) {
        var mh$ = cairo_image_surface_get_height$MH();
        try {
            return (int)mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_image_surface_get_stride$MH() {
        return RuntimeHelper.requireNonNull(constants$1735.const$4,"cairo_image_surface_get_stride");
    }
    /**
     * {@snippet :
     * int cairo_image_surface_get_stride(struct _cairo_surface* surface);
     * }
     */
    public static int cairo_image_surface_get_stride(MemorySegment surface) {
        var mh$ = cairo_image_surface_get_stride$MH();
        try {
            return (int)mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_image_surface_create_from_png$MH() {
        return RuntimeHelper.requireNonNull(constants$1735.const$5,"cairo_image_surface_create_from_png");
    }
    /**
     * {@snippet :
     * struct _cairo_surface* cairo_image_surface_create_from_png(char* filename);
     * }
     */
    public static MemorySegment cairo_image_surface_create_from_png(MemorySegment filename) {
        var mh$ = cairo_image_surface_create_from_png$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_image_surface_create_from_png_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$1736.const$1,"cairo_image_surface_create_from_png_stream");
    }
    /**
     * {@snippet :
     * struct _cairo_surface* cairo_image_surface_create_from_png_stream(enum _cairo_status (*read_func)(void*,unsigned char*,unsigned int), void* closure);
     * }
     */
    public static MemorySegment cairo_image_surface_create_from_png_stream(MemorySegment read_func, MemorySegment closure) {
        var mh$ = cairo_image_surface_create_from_png_stream$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(read_func, closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_recording_surface_create$MH() {
        return RuntimeHelper.requireNonNull(constants$1736.const$2,"cairo_recording_surface_create");
    }
    /**
     * {@snippet :
     * struct _cairo_surface* cairo_recording_surface_create(enum _cairo_content content, struct _cairo_rectangle* extents);
     * }
     */
    public static MemorySegment cairo_recording_surface_create(int content, MemorySegment extents) {
        var mh$ = cairo_recording_surface_create$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(content, extents);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_recording_surface_ink_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1736.const$3,"cairo_recording_surface_ink_extents");
    }
    /**
     * {@snippet :
     * void cairo_recording_surface_ink_extents(struct _cairo_surface* surface, double* x0, double* y0, double* width, double* height);
     * }
     */
    public static void cairo_recording_surface_ink_extents(MemorySegment surface, MemorySegment x0, MemorySegment y0, MemorySegment width, MemorySegment height) {
        var mh$ = cairo_recording_surface_ink_extents$MH();
        try {
            mh$.invokeExact(surface, x0, y0, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_recording_surface_get_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1736.const$4,"cairo_recording_surface_get_extents");
    }
    /**
     * {@snippet :
     * int cairo_recording_surface_get_extents(struct _cairo_surface* surface, struct _cairo_rectangle* extents);
     * }
     */
    public static int cairo_recording_surface_get_extents(MemorySegment surface, MemorySegment extents) {
        var mh$ = cairo_recording_surface_get_extents$MH();
        try {
            return (int)mh$.invokeExact(surface, extents);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_create_raster_source$MH() {
        return RuntimeHelper.requireNonNull(constants$1737.const$4,"cairo_pattern_create_raster_source");
    }
    /**
     * {@snippet :
     * struct _cairo_pattern* cairo_pattern_create_raster_source(void* user_data, enum _cairo_content content, int width, int height);
     * }
     */
    public static MemorySegment cairo_pattern_create_raster_source(MemorySegment user_data, int content, int width, int height) {
        var mh$ = cairo_pattern_create_raster_source$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(user_data, content, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_raster_source_pattern_set_callback_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1737.const$5,"cairo_raster_source_pattern_set_callback_data");
    }
    /**
     * {@snippet :
     * void cairo_raster_source_pattern_set_callback_data(struct _cairo_pattern* pattern, void* data);
     * }
     */
    public static void cairo_raster_source_pattern_set_callback_data(MemorySegment pattern, MemorySegment data) {
        var mh$ = cairo_raster_source_pattern_set_callback_data$MH();
        try {
            mh$.invokeExact(pattern, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_raster_source_pattern_get_callback_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1738.const$0,"cairo_raster_source_pattern_get_callback_data");
    }
    /**
     * {@snippet :
     * void* cairo_raster_source_pattern_get_callback_data(struct _cairo_pattern* pattern);
     * }
     */
    public static MemorySegment cairo_raster_source_pattern_get_callback_data(MemorySegment pattern) {
        var mh$ = cairo_raster_source_pattern_get_callback_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_raster_source_pattern_set_acquire$MH() {
        return RuntimeHelper.requireNonNull(constants$1738.const$3,"cairo_raster_source_pattern_set_acquire");
    }
    /**
     * {@snippet :
     * void cairo_raster_source_pattern_set_acquire(struct _cairo_pattern* pattern, struct _cairo_surface* (*acquire)(struct _cairo_pattern*,void*,struct _cairo_surface*,struct _cairo_rectangle_int*), void (*release)(struct _cairo_pattern*,void*,struct _cairo_surface*));
     * }
     */
    public static void cairo_raster_source_pattern_set_acquire(MemorySegment pattern, MemorySegment acquire, MemorySegment release) {
        var mh$ = cairo_raster_source_pattern_set_acquire$MH();
        try {
            mh$.invokeExact(pattern, acquire, release);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_raster_source_pattern_get_acquire$MH() {
        return RuntimeHelper.requireNonNull(constants$1739.const$0,"cairo_raster_source_pattern_get_acquire");
    }
    /**
     * {@snippet :
     * void cairo_raster_source_pattern_get_acquire(struct _cairo_pattern* pattern, struct _cairo_surface* (**acquire)(struct _cairo_pattern*,void*,struct _cairo_surface*,struct _cairo_rectangle_int*), void (**release)(struct _cairo_pattern*,void*,struct _cairo_surface*));
     * }
     */
    public static void cairo_raster_source_pattern_get_acquire(MemorySegment pattern, MemorySegment acquire, MemorySegment release) {
        var mh$ = cairo_raster_source_pattern_get_acquire$MH();
        try {
            mh$.invokeExact(pattern, acquire, release);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_raster_source_pattern_set_snapshot$MH() {
        return RuntimeHelper.requireNonNull(constants$1739.const$2,"cairo_raster_source_pattern_set_snapshot");
    }
    /**
     * {@snippet :
     * void cairo_raster_source_pattern_set_snapshot(struct _cairo_pattern* pattern, enum _cairo_status (*snapshot)(struct _cairo_pattern*,void*));
     * }
     */
    public static void cairo_raster_source_pattern_set_snapshot(MemorySegment pattern, MemorySegment snapshot) {
        var mh$ = cairo_raster_source_pattern_set_snapshot$MH();
        try {
            mh$.invokeExact(pattern, snapshot);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_raster_source_pattern_get_snapshot$MH() {
        return RuntimeHelper.requireNonNull(constants$1739.const$4,"cairo_raster_source_pattern_get_snapshot");
    }
    /**
     * {@snippet :
     * enum _cairo_status (*cairo_raster_source_pattern_get_snapshot(struct _cairo_pattern* pattern))(struct _cairo_pattern*,void*);
     * }
     */
    public static MemorySegment cairo_raster_source_pattern_get_snapshot(MemorySegment pattern) {
        var mh$ = cairo_raster_source_pattern_get_snapshot$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_raster_source_pattern_set_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1740.const$0,"cairo_raster_source_pattern_set_copy");
    }
    /**
     * {@snippet :
     * void cairo_raster_source_pattern_set_copy(struct _cairo_pattern* pattern, enum _cairo_status (*copy)(struct _cairo_pattern*,void*,struct _cairo_pattern*));
     * }
     */
    public static void cairo_raster_source_pattern_set_copy(MemorySegment pattern, MemorySegment copy) {
        var mh$ = cairo_raster_source_pattern_set_copy$MH();
        try {
            mh$.invokeExact(pattern, copy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_raster_source_pattern_get_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1740.const$2,"cairo_raster_source_pattern_get_copy");
    }
    /**
     * {@snippet :
     * enum _cairo_status (*cairo_raster_source_pattern_get_copy(struct _cairo_pattern* pattern))(struct _cairo_pattern*,void*,struct _cairo_pattern*);
     * }
     */
    public static MemorySegment cairo_raster_source_pattern_get_copy(MemorySegment pattern) {
        var mh$ = cairo_raster_source_pattern_get_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_raster_source_pattern_set_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1740.const$4,"cairo_raster_source_pattern_set_finish");
    }
    /**
     * {@snippet :
     * void cairo_raster_source_pattern_set_finish(struct _cairo_pattern* pattern, void (*finish)(struct _cairo_pattern*,void*));
     * }
     */
    public static void cairo_raster_source_pattern_set_finish(MemorySegment pattern, MemorySegment finish) {
        var mh$ = cairo_raster_source_pattern_set_finish$MH();
        try {
            mh$.invokeExact(pattern, finish);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_raster_source_pattern_get_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1741.const$0,"cairo_raster_source_pattern_get_finish");
    }
    /**
     * {@snippet :
     * void (*cairo_raster_source_pattern_get_finish(struct _cairo_pattern* pattern))(struct _cairo_pattern*,void*);
     * }
     */
    public static MemorySegment cairo_raster_source_pattern_get_finish(MemorySegment pattern) {
        var mh$ = cairo_raster_source_pattern_get_finish$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_create_rgb$MH() {
        return RuntimeHelper.requireNonNull(constants$1741.const$2,"cairo_pattern_create_rgb");
    }
    /**
     * {@snippet :
     * struct _cairo_pattern* cairo_pattern_create_rgb(double red, double green, double blue);
     * }
     */
    public static MemorySegment cairo_pattern_create_rgb(double red, double green, double blue) {
        var mh$ = cairo_pattern_create_rgb$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(red, green, blue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_create_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$1741.const$4,"cairo_pattern_create_rgba");
    }
    /**
     * {@snippet :
     * struct _cairo_pattern* cairo_pattern_create_rgba(double red, double green, double blue, double alpha);
     * }
     */
    public static MemorySegment cairo_pattern_create_rgba(double red, double green, double blue, double alpha) {
        var mh$ = cairo_pattern_create_rgba$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(red, green, blue, alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_create_for_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$1741.const$5,"cairo_pattern_create_for_surface");
    }
    /**
     * {@snippet :
     * struct _cairo_pattern* cairo_pattern_create_for_surface(struct _cairo_surface* surface);
     * }
     */
    public static MemorySegment cairo_pattern_create_for_surface(MemorySegment surface) {
        var mh$ = cairo_pattern_create_for_surface$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_create_linear$MH() {
        return RuntimeHelper.requireNonNull(constants$1742.const$0,"cairo_pattern_create_linear");
    }
    /**
     * {@snippet :
     * struct _cairo_pattern* cairo_pattern_create_linear(double x0, double y0, double x1, double y1);
     * }
     */
    public static MemorySegment cairo_pattern_create_linear(double x0, double y0, double x1, double y1) {
        var mh$ = cairo_pattern_create_linear$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0, y0, x1, y1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_create_radial$MH() {
        return RuntimeHelper.requireNonNull(constants$1742.const$2,"cairo_pattern_create_radial");
    }
    /**
     * {@snippet :
     * struct _cairo_pattern* cairo_pattern_create_radial(double cx0, double cy0, double radius0, double cx1, double cy1, double radius1);
     * }
     */
    public static MemorySegment cairo_pattern_create_radial(double cx0, double cy0, double radius0, double cx1, double cy1, double radius1) {
        var mh$ = cairo_pattern_create_radial$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cx0, cy0, radius0, cx1, cy1, radius1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_create_mesh$MH() {
        return RuntimeHelper.requireNonNull(constants$1742.const$3,"cairo_pattern_create_mesh");
    }
    /**
     * {@snippet :
     * struct _cairo_pattern* cairo_pattern_create_mesh();
     * }
     */
    public static MemorySegment cairo_pattern_create_mesh() {
        var mh$ = cairo_pattern_create_mesh$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_reference$MH() {
        return RuntimeHelper.requireNonNull(constants$1742.const$4,"cairo_pattern_reference");
    }
    /**
     * {@snippet :
     * struct _cairo_pattern* cairo_pattern_reference(struct _cairo_pattern* pattern);
     * }
     */
    public static MemorySegment cairo_pattern_reference(MemorySegment pattern) {
        var mh$ = cairo_pattern_reference$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1742.const$5,"cairo_pattern_destroy");
    }
    /**
     * {@snippet :
     * void cairo_pattern_destroy(struct _cairo_pattern* pattern);
     * }
     */
    public static void cairo_pattern_destroy(MemorySegment pattern) {
        var mh$ = cairo_pattern_destroy$MH();
        try {
            mh$.invokeExact(pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_get_reference_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1743.const$0,"cairo_pattern_get_reference_count");
    }
    /**
     * {@snippet :
     * unsigned int cairo_pattern_get_reference_count(struct _cairo_pattern* pattern);
     * }
     */
    public static int cairo_pattern_get_reference_count(MemorySegment pattern) {
        var mh$ = cairo_pattern_get_reference_count$MH();
        try {
            return (int)mh$.invokeExact(pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_status$MH() {
        return RuntimeHelper.requireNonNull(constants$1743.const$1,"cairo_pattern_status");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_pattern_status(struct _cairo_pattern* pattern);
     * }
     */
    public static int cairo_pattern_status(MemorySegment pattern) {
        var mh$ = cairo_pattern_status$MH();
        try {
            return (int)mh$.invokeExact(pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_get_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1743.const$2,"cairo_pattern_get_user_data");
    }
    /**
     * {@snippet :
     * void* cairo_pattern_get_user_data(struct _cairo_pattern* pattern, struct _cairo_user_data_key* key);
     * }
     */
    public static MemorySegment cairo_pattern_get_user_data(MemorySegment pattern, MemorySegment key) {
        var mh$ = cairo_pattern_get_user_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pattern, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_set_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1743.const$4,"cairo_pattern_set_user_data");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_pattern_set_user_data(struct _cairo_pattern* pattern, struct _cairo_user_data_key* key, void* user_data, void (*destroy)(void*));
     * }
     */
    public static int cairo_pattern_set_user_data(MemorySegment pattern, MemorySegment key, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = cairo_pattern_set_user_data$MH();
        try {
            return (int)mh$.invokeExact(pattern, key, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum _cairo_pattern_type.CAIRO_PATTERN_TYPE_SOLID = 0;
     * }
     */
    public static int CAIRO_PATTERN_TYPE_SOLID() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _cairo_pattern_type.CAIRO_PATTERN_TYPE_SURFACE = 1;
     * }
     */
    public static int CAIRO_PATTERN_TYPE_SURFACE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _cairo_pattern_type.CAIRO_PATTERN_TYPE_LINEAR = 2;
     * }
     */
    public static int CAIRO_PATTERN_TYPE_LINEAR() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _cairo_pattern_type.CAIRO_PATTERN_TYPE_RADIAL = 3;
     * }
     */
    public static int CAIRO_PATTERN_TYPE_RADIAL() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _cairo_pattern_type.CAIRO_PATTERN_TYPE_MESH = 4;
     * }
     */
    public static int CAIRO_PATTERN_TYPE_MESH() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _cairo_pattern_type.CAIRO_PATTERN_TYPE_RASTER_SOURCE = 5;
     * }
     */
    public static int CAIRO_PATTERN_TYPE_RASTER_SOURCE() {
        return (int)5L;
    }
    public static MethodHandle cairo_pattern_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1743.const$5,"cairo_pattern_get_type");
    }
    /**
     * {@snippet :
     * enum _cairo_pattern_type cairo_pattern_get_type(struct _cairo_pattern* pattern);
     * }
     */
    public static int cairo_pattern_get_type(MemorySegment pattern) {
        var mh$ = cairo_pattern_get_type$MH();
        try {
            return (int)mh$.invokeExact(pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_add_color_stop_rgb$MH() {
        return RuntimeHelper.requireNonNull(constants$1744.const$0,"cairo_pattern_add_color_stop_rgb");
    }
    /**
     * {@snippet :
     * void cairo_pattern_add_color_stop_rgb(struct _cairo_pattern* pattern, double offset, double red, double green, double blue);
     * }
     */
    public static void cairo_pattern_add_color_stop_rgb(MemorySegment pattern, double offset, double red, double green, double blue) {
        var mh$ = cairo_pattern_add_color_stop_rgb$MH();
        try {
            mh$.invokeExact(pattern, offset, red, green, blue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_add_color_stop_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$1744.const$1,"cairo_pattern_add_color_stop_rgba");
    }
    /**
     * {@snippet :
     * void cairo_pattern_add_color_stop_rgba(struct _cairo_pattern* pattern, double offset, double red, double green, double blue, double alpha);
     * }
     */
    public static void cairo_pattern_add_color_stop_rgba(MemorySegment pattern, double offset, double red, double green, double blue, double alpha) {
        var mh$ = cairo_pattern_add_color_stop_rgba$MH();
        try {
            mh$.invokeExact(pattern, offset, red, green, blue, alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_mesh_pattern_begin_patch$MH() {
        return RuntimeHelper.requireNonNull(constants$1744.const$2,"cairo_mesh_pattern_begin_patch");
    }
    /**
     * {@snippet :
     * void cairo_mesh_pattern_begin_patch(struct _cairo_pattern* pattern);
     * }
     */
    public static void cairo_mesh_pattern_begin_patch(MemorySegment pattern) {
        var mh$ = cairo_mesh_pattern_begin_patch$MH();
        try {
            mh$.invokeExact(pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_mesh_pattern_end_patch$MH() {
        return RuntimeHelper.requireNonNull(constants$1744.const$3,"cairo_mesh_pattern_end_patch");
    }
    /**
     * {@snippet :
     * void cairo_mesh_pattern_end_patch(struct _cairo_pattern* pattern);
     * }
     */
    public static void cairo_mesh_pattern_end_patch(MemorySegment pattern) {
        var mh$ = cairo_mesh_pattern_end_patch$MH();
        try {
            mh$.invokeExact(pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_mesh_pattern_curve_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1744.const$4,"cairo_mesh_pattern_curve_to");
    }
    /**
     * {@snippet :
     * void cairo_mesh_pattern_curve_to(struct _cairo_pattern* pattern, double x1, double y1, double x2, double y2, double x3, double y3);
     * }
     */
    public static void cairo_mesh_pattern_curve_to(MemorySegment pattern, double x1, double y1, double x2, double y2, double x3, double y3) {
        var mh$ = cairo_mesh_pattern_curve_to$MH();
        try {
            mh$.invokeExact(pattern, x1, y1, x2, y2, x3, y3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_mesh_pattern_line_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1744.const$5,"cairo_mesh_pattern_line_to");
    }
    /**
     * {@snippet :
     * void cairo_mesh_pattern_line_to(struct _cairo_pattern* pattern, double x, double y);
     * }
     */
    public static void cairo_mesh_pattern_line_to(MemorySegment pattern, double x, double y) {
        var mh$ = cairo_mesh_pattern_line_to$MH();
        try {
            mh$.invokeExact(pattern, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_mesh_pattern_move_to$MH() {
        return RuntimeHelper.requireNonNull(constants$1745.const$0,"cairo_mesh_pattern_move_to");
    }
    /**
     * {@snippet :
     * void cairo_mesh_pattern_move_to(struct _cairo_pattern* pattern, double x, double y);
     * }
     */
    public static void cairo_mesh_pattern_move_to(MemorySegment pattern, double x, double y) {
        var mh$ = cairo_mesh_pattern_move_to$MH();
        try {
            mh$.invokeExact(pattern, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_mesh_pattern_set_control_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1745.const$2,"cairo_mesh_pattern_set_control_point");
    }
    /**
     * {@snippet :
     * void cairo_mesh_pattern_set_control_point(struct _cairo_pattern* pattern, unsigned int point_num, double x, double y);
     * }
     */
    public static void cairo_mesh_pattern_set_control_point(MemorySegment pattern, int point_num, double x, double y) {
        var mh$ = cairo_mesh_pattern_set_control_point$MH();
        try {
            mh$.invokeExact(pattern, point_num, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_mesh_pattern_set_corner_color_rgb$MH() {
        return RuntimeHelper.requireNonNull(constants$1745.const$4,"cairo_mesh_pattern_set_corner_color_rgb");
    }
    /**
     * {@snippet :
     * void cairo_mesh_pattern_set_corner_color_rgb(struct _cairo_pattern* pattern, unsigned int corner_num, double red, double green, double blue);
     * }
     */
    public static void cairo_mesh_pattern_set_corner_color_rgb(MemorySegment pattern, int corner_num, double red, double green, double blue) {
        var mh$ = cairo_mesh_pattern_set_corner_color_rgb$MH();
        try {
            mh$.invokeExact(pattern, corner_num, red, green, blue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_mesh_pattern_set_corner_color_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$1745.const$5,"cairo_mesh_pattern_set_corner_color_rgba");
    }
    /**
     * {@snippet :
     * void cairo_mesh_pattern_set_corner_color_rgba(struct _cairo_pattern* pattern, unsigned int corner_num, double red, double green, double blue, double alpha);
     * }
     */
    public static void cairo_mesh_pattern_set_corner_color_rgba(MemorySegment pattern, int corner_num, double red, double green, double blue, double alpha) {
        var mh$ = cairo_mesh_pattern_set_corner_color_rgba$MH();
        try {
            mh$.invokeExact(pattern, corner_num, red, green, blue, alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_set_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1746.const$0,"cairo_pattern_set_matrix");
    }
    /**
     * {@snippet :
     * void cairo_pattern_set_matrix(struct _cairo_pattern* pattern, struct _cairo_matrix* matrix);
     * }
     */
    public static void cairo_pattern_set_matrix(MemorySegment pattern, MemorySegment matrix) {
        var mh$ = cairo_pattern_set_matrix$MH();
        try {
            mh$.invokeExact(pattern, matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_get_matrix$MH() {
        return RuntimeHelper.requireNonNull(constants$1746.const$1,"cairo_pattern_get_matrix");
    }
    /**
     * {@snippet :
     * void cairo_pattern_get_matrix(struct _cairo_pattern* pattern, struct _cairo_matrix* matrix);
     * }
     */
    public static void cairo_pattern_get_matrix(MemorySegment pattern, MemorySegment matrix) {
        var mh$ = cairo_pattern_get_matrix$MH();
        try {
            mh$.invokeExact(pattern, matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum _cairo_extend.CAIRO_EXTEND_NONE = 0;
     * }
     */
    public static int CAIRO_EXTEND_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _cairo_extend.CAIRO_EXTEND_REPEAT = 1;
     * }
     */
    public static int CAIRO_EXTEND_REPEAT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _cairo_extend.CAIRO_EXTEND_REFLECT = 2;
     * }
     */
    public static int CAIRO_EXTEND_REFLECT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _cairo_extend.CAIRO_EXTEND_PAD = 3;
     * }
     */
    public static int CAIRO_EXTEND_PAD() {
        return (int)3L;
    }
    public static MethodHandle cairo_pattern_set_extend$MH() {
        return RuntimeHelper.requireNonNull(constants$1746.const$2,"cairo_pattern_set_extend");
    }
    /**
     * {@snippet :
     * void cairo_pattern_set_extend(struct _cairo_pattern* pattern, enum _cairo_extend extend);
     * }
     */
    public static void cairo_pattern_set_extend(MemorySegment pattern, int extend) {
        var mh$ = cairo_pattern_set_extend$MH();
        try {
            mh$.invokeExact(pattern, extend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_get_extend$MH() {
        return RuntimeHelper.requireNonNull(constants$1746.const$3,"cairo_pattern_get_extend");
    }
    /**
     * {@snippet :
     * enum _cairo_extend cairo_pattern_get_extend(struct _cairo_pattern* pattern);
     * }
     */
    public static int cairo_pattern_get_extend(MemorySegment pattern) {
        var mh$ = cairo_pattern_get_extend$MH();
        try {
            return (int)mh$.invokeExact(pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum _cairo_filter.CAIRO_FILTER_FAST = 0;
     * }
     */
    public static int CAIRO_FILTER_FAST() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _cairo_filter.CAIRO_FILTER_GOOD = 1;
     * }
     */
    public static int CAIRO_FILTER_GOOD() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _cairo_filter.CAIRO_FILTER_BEST = 2;
     * }
     */
    public static int CAIRO_FILTER_BEST() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _cairo_filter.CAIRO_FILTER_NEAREST = 3;
     * }
     */
    public static int CAIRO_FILTER_NEAREST() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _cairo_filter.CAIRO_FILTER_BILINEAR = 4;
     * }
     */
    public static int CAIRO_FILTER_BILINEAR() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _cairo_filter.CAIRO_FILTER_GAUSSIAN = 5;
     * }
     */
    public static int CAIRO_FILTER_GAUSSIAN() {
        return (int)5L;
    }
    public static MethodHandle cairo_pattern_set_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$1746.const$4,"cairo_pattern_set_filter");
    }
    /**
     * {@snippet :
     * void cairo_pattern_set_filter(struct _cairo_pattern* pattern, enum _cairo_filter filter);
     * }
     */
    public static void cairo_pattern_set_filter(MemorySegment pattern, int filter) {
        var mh$ = cairo_pattern_set_filter$MH();
        try {
            mh$.invokeExact(pattern, filter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_get_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$1746.const$5,"cairo_pattern_get_filter");
    }
    /**
     * {@snippet :
     * enum _cairo_filter cairo_pattern_get_filter(struct _cairo_pattern* pattern);
     * }
     */
    public static int cairo_pattern_get_filter(MemorySegment pattern) {
        var mh$ = cairo_pattern_get_filter$MH();
        try {
            return (int)mh$.invokeExact(pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_get_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$1747.const$0,"cairo_pattern_get_rgba");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_pattern_get_rgba(struct _cairo_pattern* pattern, double* red, double* green, double* blue, double* alpha);
     * }
     */
    public static int cairo_pattern_get_rgba(MemorySegment pattern, MemorySegment red, MemorySegment green, MemorySegment blue, MemorySegment alpha) {
        var mh$ = cairo_pattern_get_rgba$MH();
        try {
            return (int)mh$.invokeExact(pattern, red, green, blue, alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_get_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$1747.const$1,"cairo_pattern_get_surface");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_pattern_get_surface(struct _cairo_pattern* pattern, struct _cairo_surface** surface);
     * }
     */
    public static int cairo_pattern_get_surface(MemorySegment pattern, MemorySegment surface) {
        var mh$ = cairo_pattern_get_surface$MH();
        try {
            return (int)mh$.invokeExact(pattern, surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_get_color_stop_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$1747.const$3,"cairo_pattern_get_color_stop_rgba");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_pattern_get_color_stop_rgba(struct _cairo_pattern* pattern, int index, double* offset, double* red, double* green, double* blue, double* alpha);
     * }
     */
    public static int cairo_pattern_get_color_stop_rgba(MemorySegment pattern, int index, MemorySegment offset, MemorySegment red, MemorySegment green, MemorySegment blue, MemorySegment alpha) {
        var mh$ = cairo_pattern_get_color_stop_rgba$MH();
        try {
            return (int)mh$.invokeExact(pattern, index, offset, red, green, blue, alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_get_color_stop_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1747.const$4,"cairo_pattern_get_color_stop_count");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_pattern_get_color_stop_count(struct _cairo_pattern* pattern, int* count);
     * }
     */
    public static int cairo_pattern_get_color_stop_count(MemorySegment pattern, MemorySegment count) {
        var mh$ = cairo_pattern_get_color_stop_count$MH();
        try {
            return (int)mh$.invokeExact(pattern, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_get_linear_points$MH() {
        return RuntimeHelper.requireNonNull(constants$1747.const$5,"cairo_pattern_get_linear_points");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_pattern_get_linear_points(struct _cairo_pattern* pattern, double* x0, double* y0, double* x1, double* y1);
     * }
     */
    public static int cairo_pattern_get_linear_points(MemorySegment pattern, MemorySegment x0, MemorySegment y0, MemorySegment x1, MemorySegment y1) {
        var mh$ = cairo_pattern_get_linear_points$MH();
        try {
            return (int)mh$.invokeExact(pattern, x0, y0, x1, y1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_pattern_get_radial_circles$MH() {
        return RuntimeHelper.requireNonNull(constants$1748.const$0,"cairo_pattern_get_radial_circles");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_pattern_get_radial_circles(struct _cairo_pattern* pattern, double* x0, double* y0, double* r0, double* x1, double* y1, double* r1);
     * }
     */
    public static int cairo_pattern_get_radial_circles(MemorySegment pattern, MemorySegment x0, MemorySegment y0, MemorySegment r0, MemorySegment x1, MemorySegment y1, MemorySegment r1) {
        var mh$ = cairo_pattern_get_radial_circles$MH();
        try {
            return (int)mh$.invokeExact(pattern, x0, y0, r0, x1, y1, r1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_mesh_pattern_get_patch_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1748.const$1,"cairo_mesh_pattern_get_patch_count");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_mesh_pattern_get_patch_count(struct _cairo_pattern* pattern, unsigned int* count);
     * }
     */
    public static int cairo_mesh_pattern_get_patch_count(MemorySegment pattern, MemorySegment count) {
        var mh$ = cairo_mesh_pattern_get_patch_count$MH();
        try {
            return (int)mh$.invokeExact(pattern, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_mesh_pattern_get_path$MH() {
        return RuntimeHelper.requireNonNull(constants$1748.const$2,"cairo_mesh_pattern_get_path");
    }
    /**
     * {@snippet :
     * struct cairo_path* cairo_mesh_pattern_get_path(struct _cairo_pattern* pattern, unsigned int patch_num);
     * }
     */
    public static MemorySegment cairo_mesh_pattern_get_path(MemorySegment pattern, int patch_num) {
        var mh$ = cairo_mesh_pattern_get_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pattern, patch_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_mesh_pattern_get_corner_color_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$1748.const$3,"cairo_mesh_pattern_get_corner_color_rgba");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_mesh_pattern_get_corner_color_rgba(struct _cairo_pattern* pattern, unsigned int patch_num, unsigned int corner_num, double* red, double* green, double* blue, double* alpha);
     * }
     */
    public static int cairo_mesh_pattern_get_corner_color_rgba(MemorySegment pattern, int patch_num, int corner_num, MemorySegment red, MemorySegment green, MemorySegment blue, MemorySegment alpha) {
        var mh$ = cairo_mesh_pattern_get_corner_color_rgba$MH();
        try {
            return (int)mh$.invokeExact(pattern, patch_num, corner_num, red, green, blue, alpha);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_mesh_pattern_get_control_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1748.const$4,"cairo_mesh_pattern_get_control_point");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_mesh_pattern_get_control_point(struct _cairo_pattern* pattern, unsigned int patch_num, unsigned int point_num, double* x, double* y);
     * }
     */
    public static int cairo_mesh_pattern_get_control_point(MemorySegment pattern, int patch_num, int point_num, MemorySegment x, MemorySegment y) {
        var mh$ = cairo_mesh_pattern_get_control_point$MH();
        try {
            return (int)mh$.invokeExact(pattern, patch_num, point_num, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_matrix_init$MH() {
        return RuntimeHelper.requireNonNull(constants$1748.const$5,"cairo_matrix_init");
    }
    /**
     * {@snippet :
     * void cairo_matrix_init(struct _cairo_matrix* matrix, double xx, double yx, double xy, double yy, double x0, double y0);
     * }
     */
    public static void cairo_matrix_init(MemorySegment matrix, double xx, double yx, double xy, double yy, double x0, double y0) {
        var mh$ = cairo_matrix_init$MH();
        try {
            mh$.invokeExact(matrix, xx, yx, xy, yy, x0, y0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_matrix_init_identity$MH() {
        return RuntimeHelper.requireNonNull(constants$1749.const$0,"cairo_matrix_init_identity");
    }
    /**
     * {@snippet :
     * void cairo_matrix_init_identity(struct _cairo_matrix* matrix);
     * }
     */
    public static void cairo_matrix_init_identity(MemorySegment matrix) {
        var mh$ = cairo_matrix_init_identity$MH();
        try {
            mh$.invokeExact(matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_matrix_init_translate$MH() {
        return RuntimeHelper.requireNonNull(constants$1749.const$1,"cairo_matrix_init_translate");
    }
    /**
     * {@snippet :
     * void cairo_matrix_init_translate(struct _cairo_matrix* matrix, double tx, double ty);
     * }
     */
    public static void cairo_matrix_init_translate(MemorySegment matrix, double tx, double ty) {
        var mh$ = cairo_matrix_init_translate$MH();
        try {
            mh$.invokeExact(matrix, tx, ty);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_matrix_init_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1749.const$2,"cairo_matrix_init_scale");
    }
    /**
     * {@snippet :
     * void cairo_matrix_init_scale(struct _cairo_matrix* matrix, double sx, double sy);
     * }
     */
    public static void cairo_matrix_init_scale(MemorySegment matrix, double sx, double sy) {
        var mh$ = cairo_matrix_init_scale$MH();
        try {
            mh$.invokeExact(matrix, sx, sy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_matrix_init_rotate$MH() {
        return RuntimeHelper.requireNonNull(constants$1749.const$3,"cairo_matrix_init_rotate");
    }
    /**
     * {@snippet :
     * void cairo_matrix_init_rotate(struct _cairo_matrix* matrix, double radians);
     * }
     */
    public static void cairo_matrix_init_rotate(MemorySegment matrix, double radians) {
        var mh$ = cairo_matrix_init_rotate$MH();
        try {
            mh$.invokeExact(matrix, radians);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_matrix_translate$MH() {
        return RuntimeHelper.requireNonNull(constants$1749.const$4,"cairo_matrix_translate");
    }
    /**
     * {@snippet :
     * void cairo_matrix_translate(struct _cairo_matrix* matrix, double tx, double ty);
     * }
     */
    public static void cairo_matrix_translate(MemorySegment matrix, double tx, double ty) {
        var mh$ = cairo_matrix_translate$MH();
        try {
            mh$.invokeExact(matrix, tx, ty);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_matrix_scale$MH() {
        return RuntimeHelper.requireNonNull(constants$1749.const$5,"cairo_matrix_scale");
    }
    /**
     * {@snippet :
     * void cairo_matrix_scale(struct _cairo_matrix* matrix, double sx, double sy);
     * }
     */
    public static void cairo_matrix_scale(MemorySegment matrix, double sx, double sy) {
        var mh$ = cairo_matrix_scale$MH();
        try {
            mh$.invokeExact(matrix, sx, sy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_matrix_rotate$MH() {
        return RuntimeHelper.requireNonNull(constants$1750.const$0,"cairo_matrix_rotate");
    }
    /**
     * {@snippet :
     * void cairo_matrix_rotate(struct _cairo_matrix* matrix, double radians);
     * }
     */
    public static void cairo_matrix_rotate(MemorySegment matrix, double radians) {
        var mh$ = cairo_matrix_rotate$MH();
        try {
            mh$.invokeExact(matrix, radians);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_matrix_invert$MH() {
        return RuntimeHelper.requireNonNull(constants$1750.const$1,"cairo_matrix_invert");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_matrix_invert(struct _cairo_matrix* matrix);
     * }
     */
    public static int cairo_matrix_invert(MemorySegment matrix) {
        var mh$ = cairo_matrix_invert$MH();
        try {
            return (int)mh$.invokeExact(matrix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_matrix_multiply$MH() {
        return RuntimeHelper.requireNonNull(constants$1750.const$2,"cairo_matrix_multiply");
    }
    /**
     * {@snippet :
     * void cairo_matrix_multiply(struct _cairo_matrix* result, struct _cairo_matrix* a, struct _cairo_matrix* b);
     * }
     */
    public static void cairo_matrix_multiply(MemorySegment result, MemorySegment a, MemorySegment b) {
        var mh$ = cairo_matrix_multiply$MH();
        try {
            mh$.invokeExact(result, a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_matrix_transform_distance$MH() {
        return RuntimeHelper.requireNonNull(constants$1750.const$3,"cairo_matrix_transform_distance");
    }
    /**
     * {@snippet :
     * void cairo_matrix_transform_distance(struct _cairo_matrix* matrix, double* dx, double* dy);
     * }
     */
    public static void cairo_matrix_transform_distance(MemorySegment matrix, MemorySegment dx, MemorySegment dy) {
        var mh$ = cairo_matrix_transform_distance$MH();
        try {
            mh$.invokeExact(matrix, dx, dy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_matrix_transform_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1750.const$4,"cairo_matrix_transform_point");
    }
    /**
     * {@snippet :
     * void cairo_matrix_transform_point(struct _cairo_matrix* matrix, double* x, double* y);
     * }
     */
    public static void cairo_matrix_transform_point(MemorySegment matrix, MemorySegment x, MemorySegment y) {
        var mh$ = cairo_matrix_transform_point$MH();
        try {
            mh$.invokeExact(matrix, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum _cairo_region_overlap.CAIRO_REGION_OVERLAP_IN = 0;
     * }
     */
    public static int CAIRO_REGION_OVERLAP_IN() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _cairo_region_overlap.CAIRO_REGION_OVERLAP_OUT = 1;
     * }
     */
    public static int CAIRO_REGION_OVERLAP_OUT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _cairo_region_overlap.CAIRO_REGION_OVERLAP_PART = 2;
     * }
     */
    public static int CAIRO_REGION_OVERLAP_PART() {
        return (int)2L;
    }
    public static MethodHandle cairo_region_create$MH() {
        return RuntimeHelper.requireNonNull(constants$1750.const$5,"cairo_region_create");
    }
    /**
     * {@snippet :
     * struct _cairo_region* cairo_region_create();
     * }
     */
    public static MemorySegment cairo_region_create() {
        var mh$ = cairo_region_create$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_create_rectangle$MH() {
        return RuntimeHelper.requireNonNull(constants$1751.const$0,"cairo_region_create_rectangle");
    }
    /**
     * {@snippet :
     * struct _cairo_region* cairo_region_create_rectangle(struct _cairo_rectangle_int* rectangle);
     * }
     */
    public static MemorySegment cairo_region_create_rectangle(MemorySegment rectangle) {
        var mh$ = cairo_region_create_rectangle$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(rectangle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_create_rectangles$MH() {
        return RuntimeHelper.requireNonNull(constants$1751.const$1,"cairo_region_create_rectangles");
    }
    /**
     * {@snippet :
     * struct _cairo_region* cairo_region_create_rectangles(struct _cairo_rectangle_int* rects, int count);
     * }
     */
    public static MemorySegment cairo_region_create_rectangles(MemorySegment rects, int count) {
        var mh$ = cairo_region_create_rectangles$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(rects, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1751.const$2,"cairo_region_copy");
    }
    /**
     * {@snippet :
     * struct _cairo_region* cairo_region_copy(struct _cairo_region* original);
     * }
     */
    public static MemorySegment cairo_region_copy(MemorySegment original) {
        var mh$ = cairo_region_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(original);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_reference$MH() {
        return RuntimeHelper.requireNonNull(constants$1751.const$3,"cairo_region_reference");
    }
    /**
     * {@snippet :
     * struct _cairo_region* cairo_region_reference(struct _cairo_region* region);
     * }
     */
    public static MemorySegment cairo_region_reference(MemorySegment region) {
        var mh$ = cairo_region_reference$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(region);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1751.const$4,"cairo_region_destroy");
    }
    /**
     * {@snippet :
     * void cairo_region_destroy(struct _cairo_region* region);
     * }
     */
    public static void cairo_region_destroy(MemorySegment region) {
        var mh$ = cairo_region_destroy$MH();
        try {
            mh$.invokeExact(region);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$1751.const$5,"cairo_region_equal");
    }
    /**
     * {@snippet :
     * int cairo_region_equal(struct _cairo_region* a, struct _cairo_region* b);
     * }
     */
    public static int cairo_region_equal(MemorySegment a, MemorySegment b) {
        var mh$ = cairo_region_equal$MH();
        try {
            return (int)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_status$MH() {
        return RuntimeHelper.requireNonNull(constants$1752.const$0,"cairo_region_status");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_region_status(struct _cairo_region* region);
     * }
     */
    public static int cairo_region_status(MemorySegment region) {
        var mh$ = cairo_region_status$MH();
        try {
            return (int)mh$.invokeExact(region);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_get_extents$MH() {
        return RuntimeHelper.requireNonNull(constants$1752.const$1,"cairo_region_get_extents");
    }
    /**
     * {@snippet :
     * void cairo_region_get_extents(struct _cairo_region* region, struct _cairo_rectangle_int* extents);
     * }
     */
    public static void cairo_region_get_extents(MemorySegment region, MemorySegment extents) {
        var mh$ = cairo_region_get_extents$MH();
        try {
            mh$.invokeExact(region, extents);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_num_rectangles$MH() {
        return RuntimeHelper.requireNonNull(constants$1752.const$2,"cairo_region_num_rectangles");
    }
    /**
     * {@snippet :
     * int cairo_region_num_rectangles(struct _cairo_region* region);
     * }
     */
    public static int cairo_region_num_rectangles(MemorySegment region) {
        var mh$ = cairo_region_num_rectangles$MH();
        try {
            return (int)mh$.invokeExact(region);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_get_rectangle$MH() {
        return RuntimeHelper.requireNonNull(constants$1752.const$3,"cairo_region_get_rectangle");
    }
    /**
     * {@snippet :
     * void cairo_region_get_rectangle(struct _cairo_region* region, int nth, struct _cairo_rectangle_int* rectangle);
     * }
     */
    public static void cairo_region_get_rectangle(MemorySegment region, int nth, MemorySegment rectangle) {
        var mh$ = cairo_region_get_rectangle$MH();
        try {
            mh$.invokeExact(region, nth, rectangle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_is_empty$MH() {
        return RuntimeHelper.requireNonNull(constants$1752.const$4,"cairo_region_is_empty");
    }
    /**
     * {@snippet :
     * int cairo_region_is_empty(struct _cairo_region* region);
     * }
     */
    public static int cairo_region_is_empty(MemorySegment region) {
        var mh$ = cairo_region_is_empty$MH();
        try {
            return (int)mh$.invokeExact(region);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_contains_rectangle$MH() {
        return RuntimeHelper.requireNonNull(constants$1752.const$5,"cairo_region_contains_rectangle");
    }
    /**
     * {@snippet :
     * enum _cairo_region_overlap cairo_region_contains_rectangle(struct _cairo_region* region, struct _cairo_rectangle_int* rectangle);
     * }
     */
    public static int cairo_region_contains_rectangle(MemorySegment region, MemorySegment rectangle) {
        var mh$ = cairo_region_contains_rectangle$MH();
        try {
            return (int)mh$.invokeExact(region, rectangle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_contains_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1753.const$0,"cairo_region_contains_point");
    }
    /**
     * {@snippet :
     * int cairo_region_contains_point(struct _cairo_region* region, int x, int y);
     * }
     */
    public static int cairo_region_contains_point(MemorySegment region, int x, int y) {
        var mh$ = cairo_region_contains_point$MH();
        try {
            return (int)mh$.invokeExact(region, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_translate$MH() {
        return RuntimeHelper.requireNonNull(constants$1753.const$1,"cairo_region_translate");
    }
    /**
     * {@snippet :
     * void cairo_region_translate(struct _cairo_region* region, int dx, int dy);
     * }
     */
    public static void cairo_region_translate(MemorySegment region, int dx, int dy) {
        var mh$ = cairo_region_translate$MH();
        try {
            mh$.invokeExact(region, dx, dy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_subtract$MH() {
        return RuntimeHelper.requireNonNull(constants$1753.const$2,"cairo_region_subtract");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_region_subtract(struct _cairo_region* dst, struct _cairo_region* other);
     * }
     */
    public static int cairo_region_subtract(MemorySegment dst, MemorySegment other) {
        var mh$ = cairo_region_subtract$MH();
        try {
            return (int)mh$.invokeExact(dst, other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_subtract_rectangle$MH() {
        return RuntimeHelper.requireNonNull(constants$1753.const$3,"cairo_region_subtract_rectangle");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_region_subtract_rectangle(struct _cairo_region* dst, struct _cairo_rectangle_int* rectangle);
     * }
     */
    public static int cairo_region_subtract_rectangle(MemorySegment dst, MemorySegment rectangle) {
        var mh$ = cairo_region_subtract_rectangle$MH();
        try {
            return (int)mh$.invokeExact(dst, rectangle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_intersect$MH() {
        return RuntimeHelper.requireNonNull(constants$1753.const$4,"cairo_region_intersect");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_region_intersect(struct _cairo_region* dst, struct _cairo_region* other);
     * }
     */
    public static int cairo_region_intersect(MemorySegment dst, MemorySegment other) {
        var mh$ = cairo_region_intersect$MH();
        try {
            return (int)mh$.invokeExact(dst, other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_intersect_rectangle$MH() {
        return RuntimeHelper.requireNonNull(constants$1753.const$5,"cairo_region_intersect_rectangle");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_region_intersect_rectangle(struct _cairo_region* dst, struct _cairo_rectangle_int* rectangle);
     * }
     */
    public static int cairo_region_intersect_rectangle(MemorySegment dst, MemorySegment rectangle) {
        var mh$ = cairo_region_intersect_rectangle$MH();
        try {
            return (int)mh$.invokeExact(dst, rectangle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_union$MH() {
        return RuntimeHelper.requireNonNull(constants$1754.const$0,"cairo_region_union");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_region_union(struct _cairo_region* dst, struct _cairo_region* other);
     * }
     */
    public static int cairo_region_union(MemorySegment dst, MemorySegment other) {
        var mh$ = cairo_region_union$MH();
        try {
            return (int)mh$.invokeExact(dst, other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_union_rectangle$MH() {
        return RuntimeHelper.requireNonNull(constants$1754.const$1,"cairo_region_union_rectangle");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_region_union_rectangle(struct _cairo_region* dst, struct _cairo_rectangle_int* rectangle);
     * }
     */
    public static int cairo_region_union_rectangle(MemorySegment dst, MemorySegment rectangle) {
        var mh$ = cairo_region_union_rectangle$MH();
        try {
            return (int)mh$.invokeExact(dst, rectangle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_xor$MH() {
        return RuntimeHelper.requireNonNull(constants$1754.const$2,"cairo_region_xor");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_region_xor(struct _cairo_region* dst, struct _cairo_region* other);
     * }
     */
    public static int cairo_region_xor(MemorySegment dst, MemorySegment other) {
        var mh$ = cairo_region_xor$MH();
        try {
            return (int)mh$.invokeExact(dst, other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_region_xor_rectangle$MH() {
        return RuntimeHelper.requireNonNull(constants$1754.const$3,"cairo_region_xor_rectangle");
    }
    /**
     * {@snippet :
     * enum _cairo_status cairo_region_xor_rectangle(struct _cairo_region* dst, struct _cairo_rectangle_int* rectangle);
     * }
     */
    public static int cairo_region_xor_rectangle(MemorySegment dst, MemorySegment rectangle) {
        var mh$ = cairo_region_xor_rectangle$MH();
        try {
            return (int)mh$.invokeExact(dst, rectangle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cairo_debug_reset_static_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1754.const$4,"cairo_debug_reset_static_data");
    }
    /**
     * {@snippet :
     * void cairo_debug_reset_static_data();
     * }
     */
    public static void cairo_debug_reset_static_data() {
        var mh$ = cairo_debug_reset_static_data$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GdkAtom* GdkAtom;
     * }
     */
    public static final AddressLayout GdkAtom = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum GdkByteOrder.GDK_LSB_FIRST = 0;
     * }
     */
    public static int GDK_LSB_FIRST() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkByteOrder.GDK_MSB_FIRST = 1;
     * }
     */
    public static int GDK_MSB_FIRST() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkModifierType.GDK_SHIFT_MASK = 1;
     * }
     */
    public static int GDK_SHIFT_MASK() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkModifierType.GDK_LOCK_MASK = 2;
     * }
     */
    public static int GDK_LOCK_MASK() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkModifierType.GDK_CONTROL_MASK = 4;
     * }
     */
    public static int GDK_CONTROL_MASK() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GdkModifierType.GDK_MOD1_MASK = 8;
     * }
     */
    public static int GDK_MOD1_MASK() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GdkModifierType.GDK_MOD2_MASK = 16;
     * }
     */
    public static int GDK_MOD2_MASK() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GdkModifierType.GDK_MOD3_MASK = 32;
     * }
     */
    public static int GDK_MOD3_MASK() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum GdkModifierType.GDK_MOD4_MASK = 64;
     * }
     */
    public static int GDK_MOD4_MASK() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum GdkModifierType.GDK_MOD5_MASK = 128;
     * }
     */
    public static int GDK_MOD5_MASK() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * enum GdkModifierType.GDK_BUTTON1_MASK = 256;
     * }
     */
    public static int GDK_BUTTON1_MASK() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * enum GdkModifierType.GDK_BUTTON2_MASK = 512;
     * }
     */
    public static int GDK_BUTTON2_MASK() {
        return (int)512L;
    }
    /**
     * {@snippet :
     * enum GdkModifierType.GDK_BUTTON3_MASK = 1024;
     * }
     */
    public static int GDK_BUTTON3_MASK() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * enum GdkModifierType.GDK_BUTTON4_MASK = 2048;
     * }
     */
    public static int GDK_BUTTON4_MASK() {
        return (int)2048L;
    }
    /**
     * {@snippet :
     * enum GdkModifierType.GDK_BUTTON5_MASK = 4096;
     * }
     */
    public static int GDK_BUTTON5_MASK() {
        return (int)4096L;
    }
    /**
     * {@snippet :
     * enum GdkModifierType.GDK_MODIFIER_RESERVED_13_MASK = 8192;
     * }
     */
    public static int GDK_MODIFIER_RESERVED_13_MASK() {
        return (int)8192L;
    }
    /**
     * {@snippet :
     * enum GdkModifierType.GDK_MODIFIER_RESERVED_14_MASK = 16384;
     * }
     */
    public static int GDK_MODIFIER_RESERVED_14_MASK() {
        return (int)16384L;
    }
    /**
     * {@snippet :
     * enum GdkModifierType.GDK_MODIFIER_RESERVED_15_MASK = 32768;
     * }
     */
    public static int GDK_MODIFIER_RESERVED_15_MASK() {
        return (int)32768L;
    }
    /**
     * {@snippet :
     * enum GdkModifierType.GDK_MODIFIER_RESERVED_16_MASK = 65536;
     * }
     */
    public static int GDK_MODIFIER_RESERVED_16_MASK() {
        return (int)65536L;
    }
    /**
     * {@snippet :
     * enum GdkModifierType.GDK_MODIFIER_RESERVED_17_MASK = 131072;
     * }
     */
    public static int GDK_MODIFIER_RESERVED_17_MASK() {
        return (int)131072L;
    }
    /**
     * {@snippet :
     * enum GdkModifierType.GDK_MODIFIER_RESERVED_18_MASK = 262144;
     * }
     */
    public static int GDK_MODIFIER_RESERVED_18_MASK() {
        return (int)262144L;
    }
    /**
     * {@snippet :
     * enum GdkModifierType.GDK_MODIFIER_RESERVED_19_MASK = 524288;
     * }
     */
    public static int GDK_MODIFIER_RESERVED_19_MASK() {
        return (int)524288L;
    }
    /**
     * {@snippet :
     * enum GdkModifierType.GDK_MODIFIER_RESERVED_20_MASK = 1048576;
     * }
     */
    public static int GDK_MODIFIER_RESERVED_20_MASK() {
        return (int)1048576L;
    }
    /**
     * {@snippet :
     * enum GdkModifierType.GDK_MODIFIER_RESERVED_21_MASK = 2097152;
     * }
     */
    public static int GDK_MODIFIER_RESERVED_21_MASK() {
        return (int)2097152L;
    }
    /**
     * {@snippet :
     * enum GdkModifierType.GDK_MODIFIER_RESERVED_22_MASK = 4194304;
     * }
     */
    public static int GDK_MODIFIER_RESERVED_22_MASK() {
        return (int)4194304L;
    }
    /**
     * {@snippet :
     * enum GdkModifierType.GDK_MODIFIER_RESERVED_23_MASK = 8388608;
     * }
     */
    public static int GDK_MODIFIER_RESERVED_23_MASK() {
        return (int)8388608L;
    }
    /**
     * {@snippet :
     * enum GdkModifierType.GDK_MODIFIER_RESERVED_24_MASK = 16777216;
     * }
     */
    public static int GDK_MODIFIER_RESERVED_24_MASK() {
        return (int)16777216L;
    }
    /**
     * {@snippet :
     * enum GdkModifierType.GDK_MODIFIER_RESERVED_25_MASK = 33554432;
     * }
     */
    public static int GDK_MODIFIER_RESERVED_25_MASK() {
        return (int)33554432L;
    }
    /**
     * {@snippet :
     * enum GdkModifierType.GDK_SUPER_MASK = 67108864;
     * }
     */
    public static int GDK_SUPER_MASK() {
        return (int)67108864L;
    }
    /**
     * {@snippet :
     * enum GdkModifierType.GDK_HYPER_MASK = 134217728;
     * }
     */
    public static int GDK_HYPER_MASK() {
        return (int)134217728L;
    }
    /**
     * {@snippet :
     * enum GdkModifierType.GDK_META_MASK = 268435456;
     * }
     */
    public static int GDK_META_MASK() {
        return (int)268435456L;
    }
    /**
     * {@snippet :
     * enum GdkModifierType.GDK_MODIFIER_RESERVED_29_MASK = 536870912;
     * }
     */
    public static int GDK_MODIFIER_RESERVED_29_MASK() {
        return (int)536870912L;
    }
    /**
     * {@snippet :
     * enum GdkModifierType.GDK_RELEASE_MASK = 1073741824;
     * }
     */
    public static int GDK_RELEASE_MASK() {
        return (int)1073741824L;
    }
    /**
     * {@snippet :
     * enum GdkModifierType.GDK_MODIFIER_MASK = 1543512063;
     * }
     */
    public static int GDK_MODIFIER_MASK() {
        return (int)1543512063L;
    }
    /**
     * {@snippet :
     * enum GdkModifierIntent.GDK_MODIFIER_INTENT_PRIMARY_ACCELERATOR = 0;
     * }
     */
    public static int GDK_MODIFIER_INTENT_PRIMARY_ACCELERATOR() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkModifierIntent.GDK_MODIFIER_INTENT_CONTEXT_MENU = 1;
     * }
     */
    public static int GDK_MODIFIER_INTENT_CONTEXT_MENU() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkModifierIntent.GDK_MODIFIER_INTENT_EXTEND_SELECTION = 2;
     * }
     */
    public static int GDK_MODIFIER_INTENT_EXTEND_SELECTION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkModifierIntent.GDK_MODIFIER_INTENT_MODIFY_SELECTION = 3;
     * }
     */
    public static int GDK_MODIFIER_INTENT_MODIFY_SELECTION() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GdkModifierIntent.GDK_MODIFIER_INTENT_NO_TEXT_INPUT = 4;
     * }
     */
    public static int GDK_MODIFIER_INTENT_NO_TEXT_INPUT() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GdkModifierIntent.GDK_MODIFIER_INTENT_SHIFT_GROUP = 5;
     * }
     */
    public static int GDK_MODIFIER_INTENT_SHIFT_GROUP() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GdkModifierIntent.GDK_MODIFIER_INTENT_DEFAULT_MOD_MASK = 6;
     * }
     */
    public static int GDK_MODIFIER_INTENT_DEFAULT_MOD_MASK() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GdkStatus.GDK_OK = 0;
     * }
     */
    public static int GDK_OK() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkStatus.GDK_ERROR = -1;
     * }
     */
    public static int GDK_ERROR() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * enum GdkStatus.GDK_ERROR_PARAM = -2;
     * }
     */
    public static int GDK_ERROR_PARAM() {
        return (int)-2L;
    }
    /**
     * {@snippet :
     * enum GdkStatus.GDK_ERROR_FILE = -3;
     * }
     */
    public static int GDK_ERROR_FILE() {
        return (int)-3L;
    }
    /**
     * {@snippet :
     * enum GdkStatus.GDK_ERROR_MEM = -4;
     * }
     */
    public static int GDK_ERROR_MEM() {
        return (int)-4L;
    }
    /**
     * {@snippet :
     * enum GdkGrabStatus.GDK_GRAB_SUCCESS = 0;
     * }
     */
    public static int GDK_GRAB_SUCCESS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkGrabStatus.GDK_GRAB_ALREADY_GRABBED = 1;
     * }
     */
    public static int GDK_GRAB_ALREADY_GRABBED() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkGrabStatus.GDK_GRAB_INVALID_TIME = 2;
     * }
     */
    public static int GDK_GRAB_INVALID_TIME() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkGrabStatus.GDK_GRAB_NOT_VIEWABLE = 3;
     * }
     */
    public static int GDK_GRAB_NOT_VIEWABLE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GdkGrabStatus.GDK_GRAB_FROZEN = 4;
     * }
     */
    public static int GDK_GRAB_FROZEN() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GdkGrabStatus.GDK_GRAB_FAILED = 5;
     * }
     */
    public static int GDK_GRAB_FAILED() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GdkGrabOwnership.GDK_OWNERSHIP_NONE = 0;
     * }
     */
    public static int GDK_OWNERSHIP_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkGrabOwnership.GDK_OWNERSHIP_WINDOW = 1;
     * }
     */
    public static int GDK_OWNERSHIP_WINDOW() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkGrabOwnership.GDK_OWNERSHIP_APPLICATION = 2;
     * }
     */
    public static int GDK_OWNERSHIP_APPLICATION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkEventMask.GDK_EXPOSURE_MASK = 2;
     * }
     */
    public static int GDK_EXPOSURE_MASK() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkEventMask.GDK_POINTER_MOTION_MASK = 4;
     * }
     */
    public static int GDK_POINTER_MOTION_MASK() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GdkEventMask.GDK_POINTER_MOTION_HINT_MASK = 8;
     * }
     */
    public static int GDK_POINTER_MOTION_HINT_MASK() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GdkEventMask.GDK_BUTTON_MOTION_MASK = 16;
     * }
     */
    public static int GDK_BUTTON_MOTION_MASK() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GdkEventMask.GDK_BUTTON1_MOTION_MASK = 32;
     * }
     */
    public static int GDK_BUTTON1_MOTION_MASK() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum GdkEventMask.GDK_BUTTON2_MOTION_MASK = 64;
     * }
     */
    public static int GDK_BUTTON2_MOTION_MASK() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum GdkEventMask.GDK_BUTTON3_MOTION_MASK = 128;
     * }
     */
    public static int GDK_BUTTON3_MOTION_MASK() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * enum GdkEventMask.GDK_BUTTON_PRESS_MASK = 256;
     * }
     */
    public static int GDK_BUTTON_PRESS_MASK() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * enum GdkEventMask.GDK_BUTTON_RELEASE_MASK = 512;
     * }
     */
    public static int GDK_BUTTON_RELEASE_MASK() {
        return (int)512L;
    }
    /**
     * {@snippet :
     * enum GdkEventMask.GDK_KEY_PRESS_MASK = 1024;
     * }
     */
    public static int GDK_KEY_PRESS_MASK() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * enum GdkEventMask.GDK_KEY_RELEASE_MASK = 2048;
     * }
     */
    public static int GDK_KEY_RELEASE_MASK() {
        return (int)2048L;
    }
    /**
     * {@snippet :
     * enum GdkEventMask.GDK_ENTER_NOTIFY_MASK = 4096;
     * }
     */
    public static int GDK_ENTER_NOTIFY_MASK() {
        return (int)4096L;
    }
    /**
     * {@snippet :
     * enum GdkEventMask.GDK_LEAVE_NOTIFY_MASK = 8192;
     * }
     */
    public static int GDK_LEAVE_NOTIFY_MASK() {
        return (int)8192L;
    }
    /**
     * {@snippet :
     * enum GdkEventMask.GDK_FOCUS_CHANGE_MASK = 16384;
     * }
     */
    public static int GDK_FOCUS_CHANGE_MASK() {
        return (int)16384L;
    }
    /**
     * {@snippet :
     * enum GdkEventMask.GDK_STRUCTURE_MASK = 32768;
     * }
     */
    public static int GDK_STRUCTURE_MASK() {
        return (int)32768L;
    }
    /**
     * {@snippet :
     * enum GdkEventMask.GDK_PROPERTY_CHANGE_MASK = 65536;
     * }
     */
    public static int GDK_PROPERTY_CHANGE_MASK() {
        return (int)65536L;
    }
    /**
     * {@snippet :
     * enum GdkEventMask.GDK_VISIBILITY_NOTIFY_MASK = 131072;
     * }
     */
    public static int GDK_VISIBILITY_NOTIFY_MASK() {
        return (int)131072L;
    }
    /**
     * {@snippet :
     * enum GdkEventMask.GDK_PROXIMITY_IN_MASK = 262144;
     * }
     */
    public static int GDK_PROXIMITY_IN_MASK() {
        return (int)262144L;
    }
    /**
     * {@snippet :
     * enum GdkEventMask.GDK_PROXIMITY_OUT_MASK = 524288;
     * }
     */
    public static int GDK_PROXIMITY_OUT_MASK() {
        return (int)524288L;
    }
    /**
     * {@snippet :
     * enum GdkEventMask.GDK_SUBSTRUCTURE_MASK = 1048576;
     * }
     */
    public static int GDK_SUBSTRUCTURE_MASK() {
        return (int)1048576L;
    }
    /**
     * {@snippet :
     * enum GdkEventMask.GDK_SCROLL_MASK = 2097152;
     * }
     */
    public static int GDK_SCROLL_MASK() {
        return (int)2097152L;
    }
    /**
     * {@snippet :
     * enum GdkEventMask.GDK_TOUCH_MASK = 4194304;
     * }
     */
    public static int GDK_TOUCH_MASK() {
        return (int)4194304L;
    }
    /**
     * {@snippet :
     * enum GdkEventMask.GDK_SMOOTH_SCROLL_MASK = 8388608;
     * }
     */
    public static int GDK_SMOOTH_SCROLL_MASK() {
        return (int)8388608L;
    }
    /**
     * {@snippet :
     * enum GdkEventMask.GDK_TOUCHPAD_GESTURE_MASK = 16777216;
     * }
     */
    public static int GDK_TOUCHPAD_GESTURE_MASK() {
        return (int)16777216L;
    }
    /**
     * {@snippet :
     * enum GdkEventMask.GDK_TABLET_PAD_MASK = 33554432;
     * }
     */
    public static int GDK_TABLET_PAD_MASK() {
        return (int)33554432L;
    }
    /**
     * {@snippet :
     * enum GdkEventMask.GDK_ALL_EVENTS_MASK = 67108862;
     * }
     */
    public static int GDK_ALL_EVENTS_MASK() {
        return (int)67108862L;
    }
    /**
     * {@snippet :
     * enum GdkGLError.GDK_GL_ERROR_NOT_AVAILABLE = 0;
     * }
     */
    public static int GDK_GL_ERROR_NOT_AVAILABLE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkGLError.GDK_GL_ERROR_UNSUPPORTED_FORMAT = 1;
     * }
     */
    public static int GDK_GL_ERROR_UNSUPPORTED_FORMAT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkGLError.GDK_GL_ERROR_UNSUPPORTED_PROFILE = 2;
     * }
     */
    public static int GDK_GL_ERROR_UNSUPPORTED_PROFILE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkWindowTypeHint.GDK_WINDOW_TYPE_HINT_NORMAL = 0;
     * }
     */
    public static int GDK_WINDOW_TYPE_HINT_NORMAL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkWindowTypeHint.GDK_WINDOW_TYPE_HINT_DIALOG = 1;
     * }
     */
    public static int GDK_WINDOW_TYPE_HINT_DIALOG() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkWindowTypeHint.GDK_WINDOW_TYPE_HINT_MENU = 2;
     * }
     */
    public static int GDK_WINDOW_TYPE_HINT_MENU() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkWindowTypeHint.GDK_WINDOW_TYPE_HINT_TOOLBAR = 3;
     * }
     */
    public static int GDK_WINDOW_TYPE_HINT_TOOLBAR() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GdkWindowTypeHint.GDK_WINDOW_TYPE_HINT_SPLASHSCREEN = 4;
     * }
     */
    public static int GDK_WINDOW_TYPE_HINT_SPLASHSCREEN() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GdkWindowTypeHint.GDK_WINDOW_TYPE_HINT_UTILITY = 5;
     * }
     */
    public static int GDK_WINDOW_TYPE_HINT_UTILITY() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GdkWindowTypeHint.GDK_WINDOW_TYPE_HINT_DOCK = 6;
     * }
     */
    public static int GDK_WINDOW_TYPE_HINT_DOCK() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GdkWindowTypeHint.GDK_WINDOW_TYPE_HINT_DESKTOP = 7;
     * }
     */
    public static int GDK_WINDOW_TYPE_HINT_DESKTOP() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum GdkWindowTypeHint.GDK_WINDOW_TYPE_HINT_DROPDOWN_MENU = 8;
     * }
     */
    public static int GDK_WINDOW_TYPE_HINT_DROPDOWN_MENU() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GdkWindowTypeHint.GDK_WINDOW_TYPE_HINT_POPUP_MENU = 9;
     * }
     */
    public static int GDK_WINDOW_TYPE_HINT_POPUP_MENU() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum GdkWindowTypeHint.GDK_WINDOW_TYPE_HINT_TOOLTIP = 10;
     * }
     */
    public static int GDK_WINDOW_TYPE_HINT_TOOLTIP() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum GdkWindowTypeHint.GDK_WINDOW_TYPE_HINT_NOTIFICATION = 11;
     * }
     */
    public static int GDK_WINDOW_TYPE_HINT_NOTIFICATION() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum GdkWindowTypeHint.GDK_WINDOW_TYPE_HINT_COMBO = 12;
     * }
     */
    public static int GDK_WINDOW_TYPE_HINT_COMBO() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum GdkWindowTypeHint.GDK_WINDOW_TYPE_HINT_DND = 13;
     * }
     */
    public static int GDK_WINDOW_TYPE_HINT_DND() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum GdkAxisUse.GDK_AXIS_IGNORE = 0;
     * }
     */
    public static int GDK_AXIS_IGNORE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkAxisUse.GDK_AXIS_X = 1;
     * }
     */
    public static int GDK_AXIS_X() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkAxisUse.GDK_AXIS_Y = 2;
     * }
     */
    public static int GDK_AXIS_Y() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkAxisUse.GDK_AXIS_PRESSURE = 3;
     * }
     */
    public static int GDK_AXIS_PRESSURE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GdkAxisUse.GDK_AXIS_XTILT = 4;
     * }
     */
    public static int GDK_AXIS_XTILT() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GdkAxisUse.GDK_AXIS_YTILT = 5;
     * }
     */
    public static int GDK_AXIS_YTILT() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GdkAxisUse.GDK_AXIS_WHEEL = 6;
     * }
     */
    public static int GDK_AXIS_WHEEL() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GdkAxisUse.GDK_AXIS_DISTANCE = 7;
     * }
     */
    public static int GDK_AXIS_DISTANCE() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum GdkAxisUse.GDK_AXIS_ROTATION = 8;
     * }
     */
    public static int GDK_AXIS_ROTATION() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GdkAxisUse.GDK_AXIS_SLIDER = 9;
     * }
     */
    public static int GDK_AXIS_SLIDER() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum GdkAxisUse.GDK_AXIS_LAST = 10;
     * }
     */
    public static int GDK_AXIS_LAST() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum GdkAxisFlags.GDK_AXIS_FLAG_X = 2;
     * }
     */
    public static int GDK_AXIS_FLAG_X() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkAxisFlags.GDK_AXIS_FLAG_Y = 4;
     * }
     */
    public static int GDK_AXIS_FLAG_Y() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GdkAxisFlags.GDK_AXIS_FLAG_PRESSURE = 8;
     * }
     */
    public static int GDK_AXIS_FLAG_PRESSURE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GdkAxisFlags.GDK_AXIS_FLAG_XTILT = 16;
     * }
     */
    public static int GDK_AXIS_FLAG_XTILT() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GdkAxisFlags.GDK_AXIS_FLAG_YTILT = 32;
     * }
     */
    public static int GDK_AXIS_FLAG_YTILT() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum GdkAxisFlags.GDK_AXIS_FLAG_WHEEL = 64;
     * }
     */
    public static int GDK_AXIS_FLAG_WHEEL() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum GdkAxisFlags.GDK_AXIS_FLAG_DISTANCE = 128;
     * }
     */
    public static int GDK_AXIS_FLAG_DISTANCE() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * enum GdkAxisFlags.GDK_AXIS_FLAG_ROTATION = 256;
     * }
     */
    public static int GDK_AXIS_FLAG_ROTATION() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * enum GdkAxisFlags.GDK_AXIS_FLAG_SLIDER = 512;
     * }
     */
    public static int GDK_AXIS_FLAG_SLIDER() {
        return (int)512L;
    }
    /**
     * {@snippet :
     * enum GdkInputSource.GDK_SOURCE_MOUSE = 0;
     * }
     */
    public static int GDK_SOURCE_MOUSE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkInputSource.GDK_SOURCE_PEN = 1;
     * }
     */
    public static int GDK_SOURCE_PEN() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkInputSource.GDK_SOURCE_ERASER = 2;
     * }
     */
    public static int GDK_SOURCE_ERASER() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkInputSource.GDK_SOURCE_CURSOR = 3;
     * }
     */
    public static int GDK_SOURCE_CURSOR() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GdkInputSource.GDK_SOURCE_KEYBOARD = 4;
     * }
     */
    public static int GDK_SOURCE_KEYBOARD() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GdkInputSource.GDK_SOURCE_TOUCHSCREEN = 5;
     * }
     */
    public static int GDK_SOURCE_TOUCHSCREEN() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GdkInputSource.GDK_SOURCE_TOUCHPAD = 6;
     * }
     */
    public static int GDK_SOURCE_TOUCHPAD() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GdkInputSource.GDK_SOURCE_TRACKPOINT = 7;
     * }
     */
    public static int GDK_SOURCE_TRACKPOINT() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum GdkInputSource.GDK_SOURCE_TABLET_PAD = 8;
     * }
     */
    public static int GDK_SOURCE_TABLET_PAD() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GdkInputMode.GDK_MODE_DISABLED = 0;
     * }
     */
    public static int GDK_MODE_DISABLED() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkInputMode.GDK_MODE_SCREEN = 1;
     * }
     */
    public static int GDK_MODE_SCREEN() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkInputMode.GDK_MODE_WINDOW = 2;
     * }
     */
    public static int GDK_MODE_WINDOW() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkDeviceType.GDK_DEVICE_TYPE_MASTER = 0;
     * }
     */
    public static int GDK_DEVICE_TYPE_MASTER() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkDeviceType.GDK_DEVICE_TYPE_SLAVE = 1;
     * }
     */
    public static int GDK_DEVICE_TYPE_SLAVE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkDeviceType.GDK_DEVICE_TYPE_FLOATING = 2;
     * }
     */
    public static int GDK_DEVICE_TYPE_FLOATING() {
        return (int)2L;
    }
    public static MethodHandle gdk_device_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1755.const$4,"gdk_device_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_device_get_type();
     * }
     */
    public static long gdk_device_get_type() {
        var mh$ = gdk_device_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$1755.const$5,"gdk_device_get_name");
    }
    /**
     * {@snippet :
     * char* gdk_device_get_name(struct _GdkDevice* device);
     * }
     */
    public static MemorySegment gdk_device_get_name(MemorySegment device) {
        var mh$ = gdk_device_get_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_has_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$1756.const$0,"gdk_device_get_has_cursor");
    }
    /**
     * {@snippet :
     * int gdk_device_get_has_cursor(struct _GdkDevice* device);
     * }
     */
    public static int gdk_device_get_has_cursor(MemorySegment device) {
        var mh$ = gdk_device_get_has_cursor$MH();
        try {
            return (int)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_source$MH() {
        return RuntimeHelper.requireNonNull(constants$1756.const$1,"gdk_device_get_source");
    }
    /**
     * {@snippet :
     * enum GdkInputSource gdk_device_get_source(struct _GdkDevice* device);
     * }
     */
    public static int gdk_device_get_source(MemorySegment device) {
        var mh$ = gdk_device_get_source$MH();
        try {
            return (int)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1756.const$2,"gdk_device_get_mode");
    }
    /**
     * {@snippet :
     * enum GdkInputMode gdk_device_get_mode(struct _GdkDevice* device);
     * }
     */
    public static int gdk_device_get_mode(MemorySegment device) {
        var mh$ = gdk_device_get_mode$MH();
        try {
            return (int)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_set_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$1756.const$3,"gdk_device_set_mode");
    }
    /**
     * {@snippet :
     * int gdk_device_set_mode(struct _GdkDevice* device, enum GdkInputMode mode);
     * }
     */
    public static int gdk_device_set_mode(MemorySegment device, int mode) {
        var mh$ = gdk_device_set_mode$MH();
        try {
            return (int)mh$.invokeExact(device, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_n_keys$MH() {
        return RuntimeHelper.requireNonNull(constants$1756.const$4,"gdk_device_get_n_keys");
    }
    /**
     * {@snippet :
     * int gdk_device_get_n_keys(struct _GdkDevice* device);
     * }
     */
    public static int gdk_device_get_n_keys(MemorySegment device) {
        var mh$ = gdk_device_get_n_keys$MH();
        try {
            return (int)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_key$MH() {
        return RuntimeHelper.requireNonNull(constants$1756.const$5,"gdk_device_get_key");
    }
    /**
     * {@snippet :
     * int gdk_device_get_key(struct _GdkDevice* device, unsigned int index_, unsigned int* keyval, enum GdkModifierType* modifiers);
     * }
     */
    public static int gdk_device_get_key(MemorySegment device, int index_, MemorySegment keyval, MemorySegment modifiers) {
        var mh$ = gdk_device_get_key$MH();
        try {
            return (int)mh$.invokeExact(device, index_, keyval, modifiers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_set_key$MH() {
        return RuntimeHelper.requireNonNull(constants$1757.const$0,"gdk_device_set_key");
    }
    /**
     * {@snippet :
     * void gdk_device_set_key(struct _GdkDevice* device, unsigned int index_, unsigned int keyval, enum GdkModifierType modifiers);
     * }
     */
    public static void gdk_device_set_key(MemorySegment device, int index_, int keyval, int modifiers) {
        var mh$ = gdk_device_set_key$MH();
        try {
            mh$.invokeExact(device, index_, keyval, modifiers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_axis_use$MH() {
        return RuntimeHelper.requireNonNull(constants$1757.const$1,"gdk_device_get_axis_use");
    }
    /**
     * {@snippet :
     * enum GdkAxisUse gdk_device_get_axis_use(struct _GdkDevice* device, unsigned int index_);
     * }
     */
    public static int gdk_device_get_axis_use(MemorySegment device, int index_) {
        var mh$ = gdk_device_get_axis_use$MH();
        try {
            return (int)mh$.invokeExact(device, index_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_set_axis_use$MH() {
        return RuntimeHelper.requireNonNull(constants$1757.const$2,"gdk_device_set_axis_use");
    }
    /**
     * {@snippet :
     * void gdk_device_set_axis_use(struct _GdkDevice* device, unsigned int index_, enum GdkAxisUse use);
     * }
     */
    public static void gdk_device_set_axis_use(MemorySegment device, int index_, int use) {
        var mh$ = gdk_device_set_axis_use$MH();
        try {
            mh$.invokeExact(device, index_, use);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1757.const$3,"gdk_device_get_state");
    }
    /**
     * {@snippet :
     * void gdk_device_get_state(struct _GdkDevice* device, struct _GdkWindow* window, double* axes, enum GdkModifierType* mask);
     * }
     */
    public static void gdk_device_get_state(MemorySegment device, MemorySegment window, MemorySegment axes, MemorySegment mask) {
        var mh$ = gdk_device_get_state$MH();
        try {
            mh$.invokeExact(device, window, axes, mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1757.const$4,"gdk_device_get_position");
    }
    /**
     * {@snippet :
     * void gdk_device_get_position(struct _GdkDevice* device, struct _GdkScreen** screen, int* x, int* y);
     * }
     */
    public static void gdk_device_get_position(MemorySegment device, MemorySegment screen, MemorySegment x, MemorySegment y) {
        var mh$ = gdk_device_get_position$MH();
        try {
            mh$.invokeExact(device, screen, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_window_at_position$MH() {
        return RuntimeHelper.requireNonNull(constants$1757.const$5,"gdk_device_get_window_at_position");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gdk_device_get_window_at_position(struct _GdkDevice* device, int* win_x, int* win_y);
     * }
     */
    public static MemorySegment gdk_device_get_window_at_position(MemorySegment device, MemorySegment win_x, MemorySegment win_y) {
        var mh$ = gdk_device_get_window_at_position$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(device, win_x, win_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_position_double$MH() {
        return RuntimeHelper.requireNonNull(constants$1758.const$0,"gdk_device_get_position_double");
    }
    /**
     * {@snippet :
     * void gdk_device_get_position_double(struct _GdkDevice* device, struct _GdkScreen** screen, double* x, double* y);
     * }
     */
    public static void gdk_device_get_position_double(MemorySegment device, MemorySegment screen, MemorySegment x, MemorySegment y) {
        var mh$ = gdk_device_get_position_double$MH();
        try {
            mh$.invokeExact(device, screen, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_window_at_position_double$MH() {
        return RuntimeHelper.requireNonNull(constants$1758.const$1,"gdk_device_get_window_at_position_double");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gdk_device_get_window_at_position_double(struct _GdkDevice* device, double* win_x, double* win_y);
     * }
     */
    public static MemorySegment gdk_device_get_window_at_position_double(MemorySegment device, MemorySegment win_x, MemorySegment win_y) {
        var mh$ = gdk_device_get_window_at_position_double$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(device, win_x, win_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_history$MH() {
        return RuntimeHelper.requireNonNull(constants$1758.const$2,"gdk_device_get_history");
    }
    /**
     * {@snippet :
     * int gdk_device_get_history(struct _GdkDevice* device, struct _GdkWindow* window, unsigned int start, unsigned int stop, struct _GdkTimeCoord*** events, int* n_events);
     * }
     */
    public static int gdk_device_get_history(MemorySegment device, MemorySegment window, int start, int stop, MemorySegment events, MemorySegment n_events) {
        var mh$ = gdk_device_get_history$MH();
        try {
            return (int)mh$.invokeExact(device, window, start, stop, events, n_events);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_free_history$MH() {
        return RuntimeHelper.requireNonNull(constants$1758.const$3,"gdk_device_free_history");
    }
    /**
     * {@snippet :
     * void gdk_device_free_history(struct _GdkTimeCoord** events, int n_events);
     * }
     */
    public static void gdk_device_free_history(MemorySegment events, int n_events) {
        var mh$ = gdk_device_free_history$MH();
        try {
            mh$.invokeExact(events, n_events);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_n_axes$MH() {
        return RuntimeHelper.requireNonNull(constants$1758.const$4,"gdk_device_get_n_axes");
    }
    /**
     * {@snippet :
     * int gdk_device_get_n_axes(struct _GdkDevice* device);
     * }
     */
    public static int gdk_device_get_n_axes(MemorySegment device) {
        var mh$ = gdk_device_get_n_axes$MH();
        try {
            return (int)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_list_axes$MH() {
        return RuntimeHelper.requireNonNull(constants$1758.const$5,"gdk_device_list_axes");
    }
    /**
     * {@snippet :
     * struct _GList* gdk_device_list_axes(struct _GdkDevice* device);
     * }
     */
    public static MemorySegment gdk_device_list_axes(MemorySegment device) {
        var mh$ = gdk_device_list_axes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_axis_value$MH() {
        return RuntimeHelper.requireNonNull(constants$1759.const$0,"gdk_device_get_axis_value");
    }
    /**
     * {@snippet :
     * int gdk_device_get_axis_value(struct _GdkDevice* device, double* axes, struct _GdkAtom* axis_label, double* value);
     * }
     */
    public static int gdk_device_get_axis_value(MemorySegment device, MemorySegment axes, MemorySegment axis_label, MemorySegment value) {
        var mh$ = gdk_device_get_axis_value$MH();
        try {
            return (int)mh$.invokeExact(device, axes, axis_label, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_axis$MH() {
        return RuntimeHelper.requireNonNull(constants$1759.const$1,"gdk_device_get_axis");
    }
    /**
     * {@snippet :
     * int gdk_device_get_axis(struct _GdkDevice* device, double* axes, enum GdkAxisUse use, double* value);
     * }
     */
    public static int gdk_device_get_axis(MemorySegment device, MemorySegment axes, int use, MemorySegment value) {
        var mh$ = gdk_device_get_axis$MH();
        try {
            return (int)mh$.invokeExact(device, axes, use, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1759.const$2,"gdk_device_get_display");
    }
    /**
     * {@snippet :
     * struct _GdkDisplay* gdk_device_get_display(struct _GdkDevice* device);
     * }
     */
    public static MemorySegment gdk_device_get_display(MemorySegment device) {
        var mh$ = gdk_device_get_display$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_associated_device$MH() {
        return RuntimeHelper.requireNonNull(constants$1759.const$3,"gdk_device_get_associated_device");
    }
    /**
     * {@snippet :
     * struct _GdkDevice* gdk_device_get_associated_device(struct _GdkDevice* device);
     * }
     */
    public static MemorySegment gdk_device_get_associated_device(MemorySegment device) {
        var mh$ = gdk_device_get_associated_device$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_list_slave_devices$MH() {
        return RuntimeHelper.requireNonNull(constants$1759.const$4,"gdk_device_list_slave_devices");
    }
    /**
     * {@snippet :
     * struct _GList* gdk_device_list_slave_devices(struct _GdkDevice* device);
     * }
     */
    public static MemorySegment gdk_device_list_slave_devices(MemorySegment device) {
        var mh$ = gdk_device_list_slave_devices$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_device_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1759.const$5,"gdk_device_get_device_type");
    }
    /**
     * {@snippet :
     * enum GdkDeviceType gdk_device_get_device_type(struct _GdkDevice* device);
     * }
     */
    public static int gdk_device_get_device_type(MemorySegment device) {
        var mh$ = gdk_device_get_device_type$MH();
        try {
            return (int)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_grab$MH() {
        return RuntimeHelper.requireNonNull(constants$1760.const$1,"gdk_device_grab");
    }
    /**
     * {@snippet :
     * enum GdkGrabStatus gdk_device_grab(struct _GdkDevice* device, struct _GdkWindow* window, enum GdkGrabOwnership grab_ownership, int owner_events, enum GdkEventMask event_mask, struct _GdkCursor* cursor, unsigned int time_);
     * }
     */
    public static int gdk_device_grab(MemorySegment device, MemorySegment window, int grab_ownership, int owner_events, int event_mask, MemorySegment cursor, int time_) {
        var mh$ = gdk_device_grab$MH();
        try {
            return (int)mh$.invokeExact(device, window, grab_ownership, owner_events, event_mask, cursor, time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_ungrab$MH() {
        return RuntimeHelper.requireNonNull(constants$1760.const$2,"gdk_device_ungrab");
    }
    /**
     * {@snippet :
     * void gdk_device_ungrab(struct _GdkDevice* device, unsigned int time_);
     * }
     */
    public static void gdk_device_ungrab(MemorySegment device, int time_) {
        var mh$ = gdk_device_ungrab$MH();
        try {
            mh$.invokeExact(device, time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_warp$MH() {
        return RuntimeHelper.requireNonNull(constants$1760.const$3,"gdk_device_warp");
    }
    /**
     * {@snippet :
     * void gdk_device_warp(struct _GdkDevice* device, struct _GdkScreen* screen, int x, int y);
     * }
     */
    public static void gdk_device_warp(MemorySegment device, MemorySegment screen, int x, int y) {
        var mh$ = gdk_device_warp$MH();
        try {
            mh$.invokeExact(device, screen, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_grab_info_libgtk_only$MH() {
        return RuntimeHelper.requireNonNull(constants$1760.const$4,"gdk_device_grab_info_libgtk_only");
    }
    /**
     * {@snippet :
     * int gdk_device_grab_info_libgtk_only(struct _GdkDisplay* display, struct _GdkDevice* device, struct _GdkWindow** grab_window, int* owner_events);
     * }
     */
    public static int gdk_device_grab_info_libgtk_only(MemorySegment display, MemorySegment device, MemorySegment grab_window, MemorySegment owner_events) {
        var mh$ = gdk_device_grab_info_libgtk_only$MH();
        try {
            return (int)mh$.invokeExact(display, device, grab_window, owner_events);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_last_event_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1760.const$5,"gdk_device_get_last_event_window");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gdk_device_get_last_event_window(struct _GdkDevice* device);
     * }
     */
    public static MemorySegment gdk_device_get_last_event_window(MemorySegment device) {
        var mh$ = gdk_device_get_last_event_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_vendor_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1761.const$0,"gdk_device_get_vendor_id");
    }
    /**
     * {@snippet :
     * char* gdk_device_get_vendor_id(struct _GdkDevice* device);
     * }
     */
    public static MemorySegment gdk_device_get_vendor_id(MemorySegment device) {
        var mh$ = gdk_device_get_vendor_id$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_product_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1761.const$1,"gdk_device_get_product_id");
    }
    /**
     * {@snippet :
     * char* gdk_device_get_product_id(struct _GdkDevice* device);
     * }
     */
    public static MemorySegment gdk_device_get_product_id(MemorySegment device) {
        var mh$ = gdk_device_get_product_id$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_seat$MH() {
        return RuntimeHelper.requireNonNull(constants$1761.const$2,"gdk_device_get_seat");
    }
    /**
     * {@snippet :
     * struct _GdkSeat* gdk_device_get_seat(struct _GdkDevice* device);
     * }
     */
    public static MemorySegment gdk_device_get_seat(MemorySegment device) {
        var mh$ = gdk_device_get_seat$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_get_axes$MH() {
        return RuntimeHelper.requireNonNull(constants$1761.const$3,"gdk_device_get_axes");
    }
    /**
     * {@snippet :
     * enum GdkAxisFlags gdk_device_get_axes(struct _GdkDevice* device);
     * }
     */
    public static int gdk_device_get_axes(MemorySegment device) {
        var mh$ = gdk_device_get_axes$MH();
        try {
            return (int)mh$.invokeExact(device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GdkDragAction.GDK_ACTION_DEFAULT = 1;
     * }
     */
    public static int GDK_ACTION_DEFAULT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkDragAction.GDK_ACTION_COPY = 2;
     * }
     */
    public static int GDK_ACTION_COPY() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkDragAction.GDK_ACTION_MOVE = 4;
     * }
     */
    public static int GDK_ACTION_MOVE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GdkDragAction.GDK_ACTION_LINK = 8;
     * }
     */
    public static int GDK_ACTION_LINK() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GdkDragAction.GDK_ACTION_PRIVATE = 16;
     * }
     */
    public static int GDK_ACTION_PRIVATE() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GdkDragAction.GDK_ACTION_ASK = 32;
     * }
     */
    public static int GDK_ACTION_ASK() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum GdkDragCancelReason.GDK_DRAG_CANCEL_NO_TARGET = 0;
     * }
     */
    public static int GDK_DRAG_CANCEL_NO_TARGET() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkDragCancelReason.GDK_DRAG_CANCEL_USER_CANCELLED = 1;
     * }
     */
    public static int GDK_DRAG_CANCEL_USER_CANCELLED() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkDragCancelReason.GDK_DRAG_CANCEL_ERROR = 2;
     * }
     */
    public static int GDK_DRAG_CANCEL_ERROR() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkDragProtocol.GDK_DRAG_PROTO_NONE = 0;
     * }
     */
    public static int GDK_DRAG_PROTO_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkDragProtocol.GDK_DRAG_PROTO_MOTIF = 1;
     * }
     */
    public static int GDK_DRAG_PROTO_MOTIF() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkDragProtocol.GDK_DRAG_PROTO_XDND = 2;
     * }
     */
    public static int GDK_DRAG_PROTO_XDND() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkDragProtocol.GDK_DRAG_PROTO_ROOTWIN = 3;
     * }
     */
    public static int GDK_DRAG_PROTO_ROOTWIN() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GdkDragProtocol.GDK_DRAG_PROTO_WIN32_DROPFILES = 4;
     * }
     */
    public static int GDK_DRAG_PROTO_WIN32_DROPFILES() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GdkDragProtocol.GDK_DRAG_PROTO_OLE2 = 5;
     * }
     */
    public static int GDK_DRAG_PROTO_OLE2() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GdkDragProtocol.GDK_DRAG_PROTO_LOCAL = 6;
     * }
     */
    public static int GDK_DRAG_PROTO_LOCAL() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GdkDragProtocol.GDK_DRAG_PROTO_WAYLAND = 7;
     * }
     */
    public static int GDK_DRAG_PROTO_WAYLAND() {
        return (int)7L;
    }
    public static MethodHandle gdk_drag_context_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1761.const$4,"gdk_drag_context_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_drag_context_get_type();
     * }
     */
    public static long gdk_drag_context_get_type() {
        var mh$ = gdk_drag_context_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_context_set_device$MH() {
        return RuntimeHelper.requireNonNull(constants$1761.const$5,"gdk_drag_context_set_device");
    }
    /**
     * {@snippet :
     * void gdk_drag_context_set_device(struct _GdkDragContext* context, struct _GdkDevice* device);
     * }
     */
    public static void gdk_drag_context_set_device(MemorySegment context, MemorySegment device) {
        var mh$ = gdk_drag_context_set_device$MH();
        try {
            mh$.invokeExact(context, device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_context_get_device$MH() {
        return RuntimeHelper.requireNonNull(constants$1762.const$0,"gdk_drag_context_get_device");
    }
    /**
     * {@snippet :
     * struct _GdkDevice* gdk_drag_context_get_device(struct _GdkDragContext* context);
     * }
     */
    public static MemorySegment gdk_drag_context_get_device(MemorySegment context) {
        var mh$ = gdk_drag_context_get_device$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_context_list_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$1762.const$1,"gdk_drag_context_list_targets");
    }
    /**
     * {@snippet :
     * struct _GList* gdk_drag_context_list_targets(struct _GdkDragContext* context);
     * }
     */
    public static MemorySegment gdk_drag_context_list_targets(MemorySegment context) {
        var mh$ = gdk_drag_context_list_targets$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_context_get_actions$MH() {
        return RuntimeHelper.requireNonNull(constants$1762.const$2,"gdk_drag_context_get_actions");
    }
    /**
     * {@snippet :
     * enum GdkDragAction gdk_drag_context_get_actions(struct _GdkDragContext* context);
     * }
     */
    public static int gdk_drag_context_get_actions(MemorySegment context) {
        var mh$ = gdk_drag_context_get_actions$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_context_get_suggested_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1762.const$3,"gdk_drag_context_get_suggested_action");
    }
    /**
     * {@snippet :
     * enum GdkDragAction gdk_drag_context_get_suggested_action(struct _GdkDragContext* context);
     * }
     */
    public static int gdk_drag_context_get_suggested_action(MemorySegment context) {
        var mh$ = gdk_drag_context_get_suggested_action$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_context_get_selected_action$MH() {
        return RuntimeHelper.requireNonNull(constants$1762.const$4,"gdk_drag_context_get_selected_action");
    }
    /**
     * {@snippet :
     * enum GdkDragAction gdk_drag_context_get_selected_action(struct _GdkDragContext* context);
     * }
     */
    public static int gdk_drag_context_get_selected_action(MemorySegment context) {
        var mh$ = gdk_drag_context_get_selected_action$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_context_get_source_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1762.const$5,"gdk_drag_context_get_source_window");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gdk_drag_context_get_source_window(struct _GdkDragContext* context);
     * }
     */
    public static MemorySegment gdk_drag_context_get_source_window(MemorySegment context) {
        var mh$ = gdk_drag_context_get_source_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_context_get_dest_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1763.const$0,"gdk_drag_context_get_dest_window");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gdk_drag_context_get_dest_window(struct _GdkDragContext* context);
     * }
     */
    public static MemorySegment gdk_drag_context_get_dest_window(MemorySegment context) {
        var mh$ = gdk_drag_context_get_dest_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_context_get_protocol$MH() {
        return RuntimeHelper.requireNonNull(constants$1763.const$1,"gdk_drag_context_get_protocol");
    }
    /**
     * {@snippet :
     * enum GdkDragProtocol gdk_drag_context_get_protocol(struct _GdkDragContext* context);
     * }
     */
    public static int gdk_drag_context_get_protocol(MemorySegment context) {
        var mh$ = gdk_drag_context_get_protocol$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_status$MH() {
        return RuntimeHelper.requireNonNull(constants$1763.const$2,"gdk_drag_status");
    }
    /**
     * {@snippet :
     * void gdk_drag_status(struct _GdkDragContext* context, enum GdkDragAction action, unsigned int time_);
     * }
     */
    public static void gdk_drag_status(MemorySegment context, int action, int time_) {
        var mh$ = gdk_drag_status$MH();
        try {
            mh$.invokeExact(context, action, time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drop_reply$MH() {
        return RuntimeHelper.requireNonNull(constants$1763.const$3,"gdk_drop_reply");
    }
    /**
     * {@snippet :
     * void gdk_drop_reply(struct _GdkDragContext* context, int accepted, unsigned int time_);
     * }
     */
    public static void gdk_drop_reply(MemorySegment context, int accepted, int time_) {
        var mh$ = gdk_drop_reply$MH();
        try {
            mh$.invokeExact(context, accepted, time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drop_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$1763.const$4,"gdk_drop_finish");
    }
    /**
     * {@snippet :
     * void gdk_drop_finish(struct _GdkDragContext* context, int success, unsigned int time_);
     * }
     */
    public static void gdk_drop_finish(MemorySegment context, int success, int time_) {
        var mh$ = gdk_drop_finish$MH();
        try {
            mh$.invokeExact(context, success, time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_get_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$1763.const$5,"gdk_drag_get_selection");
    }
    /**
     * {@snippet :
     * struct _GdkAtom* gdk_drag_get_selection(struct _GdkDragContext* context);
     * }
     */
    public static MemorySegment gdk_drag_get_selection(MemorySegment context) {
        var mh$ = gdk_drag_get_selection$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_begin$MH() {
        return RuntimeHelper.requireNonNull(constants$1764.const$0,"gdk_drag_begin");
    }
    /**
     * {@snippet :
     * struct _GdkDragContext* gdk_drag_begin(struct _GdkWindow* window, struct _GList* targets);
     * }
     */
    public static MemorySegment gdk_drag_begin(MemorySegment window, MemorySegment targets) {
        var mh$ = gdk_drag_begin$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window, targets);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_begin_for_device$MH() {
        return RuntimeHelper.requireNonNull(constants$1764.const$1,"gdk_drag_begin_for_device");
    }
    /**
     * {@snippet :
     * struct _GdkDragContext* gdk_drag_begin_for_device(struct _GdkWindow* window, struct _GdkDevice* device, struct _GList* targets);
     * }
     */
    public static MemorySegment gdk_drag_begin_for_device(MemorySegment window, MemorySegment device, MemorySegment targets) {
        var mh$ = gdk_drag_begin_for_device$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window, device, targets);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_begin_from_point$MH() {
        return RuntimeHelper.requireNonNull(constants$1764.const$2,"gdk_drag_begin_from_point");
    }
    /**
     * {@snippet :
     * struct _GdkDragContext* gdk_drag_begin_from_point(struct _GdkWindow* window, struct _GdkDevice* device, struct _GList* targets, int x_root, int y_root);
     * }
     */
    public static MemorySegment gdk_drag_begin_from_point(MemorySegment window, MemorySegment device, MemorySegment targets, int x_root, int y_root) {
        var mh$ = gdk_drag_begin_from_point$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window, device, targets, x_root, y_root);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_find_window_for_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$1764.const$4,"gdk_drag_find_window_for_screen");
    }
    /**
     * {@snippet :
     * void gdk_drag_find_window_for_screen(struct _GdkDragContext* context, struct _GdkWindow* drag_window, struct _GdkScreen* screen, int x_root, int y_root, struct _GdkWindow** dest_window, enum GdkDragProtocol* protocol);
     * }
     */
    public static void gdk_drag_find_window_for_screen(MemorySegment context, MemorySegment drag_window, MemorySegment screen, int x_root, int y_root, MemorySegment dest_window, MemorySegment protocol) {
        var mh$ = gdk_drag_find_window_for_screen$MH();
        try {
            mh$.invokeExact(context, drag_window, screen, x_root, y_root, dest_window, protocol);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_motion$MH() {
        return RuntimeHelper.requireNonNull(constants$1764.const$6,"gdk_drag_motion");
    }
    /**
     * {@snippet :
     * int gdk_drag_motion(struct _GdkDragContext* context, struct _GdkWindow* dest_window, enum GdkDragProtocol protocol, int x_root, int y_root, enum GdkDragAction suggested_action, enum GdkDragAction possible_actions, unsigned int time_);
     * }
     */
    public static int gdk_drag_motion(MemorySegment context, MemorySegment dest_window, int protocol, int x_root, int y_root, int suggested_action, int possible_actions, int time_) {
        var mh$ = gdk_drag_motion$MH();
        try {
            return (int)mh$.invokeExact(context, dest_window, protocol, x_root, y_root, suggested_action, possible_actions, time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_drop$MH() {
        return RuntimeHelper.requireNonNull(constants$1765.const$0,"gdk_drag_drop");
    }
    /**
     * {@snippet :
     * void gdk_drag_drop(struct _GdkDragContext* context, unsigned int time_);
     * }
     */
    public static void gdk_drag_drop(MemorySegment context, int time_) {
        var mh$ = gdk_drag_drop$MH();
        try {
            mh$.invokeExact(context, time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_abort$MH() {
        return RuntimeHelper.requireNonNull(constants$1765.const$1,"gdk_drag_abort");
    }
    /**
     * {@snippet :
     * void gdk_drag_abort(struct _GdkDragContext* context, unsigned int time_);
     * }
     */
    public static void gdk_drag_abort(MemorySegment context, int time_) {
        var mh$ = gdk_drag_abort$MH();
        try {
            mh$.invokeExact(context, time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_drop_succeeded$MH() {
        return RuntimeHelper.requireNonNull(constants$1765.const$2,"gdk_drag_drop_succeeded");
    }
    /**
     * {@snippet :
     * int gdk_drag_drop_succeeded(struct _GdkDragContext* context);
     * }
     */
    public static int gdk_drag_drop_succeeded(MemorySegment context) {
        var mh$ = gdk_drag_drop_succeeded$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_drop_done$MH() {
        return RuntimeHelper.requireNonNull(constants$1765.const$3,"gdk_drag_drop_done");
    }
    /**
     * {@snippet :
     * void gdk_drag_drop_done(struct _GdkDragContext* context, int success);
     * }
     */
    public static void gdk_drag_drop_done(MemorySegment context, int success) {
        var mh$ = gdk_drag_drop_done$MH();
        try {
            mh$.invokeExact(context, success);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_context_get_drag_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1765.const$4,"gdk_drag_context_get_drag_window");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gdk_drag_context_get_drag_window(struct _GdkDragContext* context);
     * }
     */
    public static MemorySegment gdk_drag_context_get_drag_window(MemorySegment context) {
        var mh$ = gdk_drag_context_get_drag_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_context_set_hotspot$MH() {
        return RuntimeHelper.requireNonNull(constants$1765.const$5,"gdk_drag_context_set_hotspot");
    }
    /**
     * {@snippet :
     * void gdk_drag_context_set_hotspot(struct _GdkDragContext* context, int hot_x, int hot_y);
     * }
     */
    public static void gdk_drag_context_set_hotspot(MemorySegment context, int hot_x, int hot_y) {
        var mh$ = gdk_drag_context_set_hotspot$MH();
        try {
            mh$.invokeExact(context, hot_x, hot_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drag_context_manage_dnd$MH() {
        return RuntimeHelper.requireNonNull(constants$1766.const$0,"gdk_drag_context_manage_dnd");
    }
    /**
     * {@snippet :
     * int gdk_drag_context_manage_dnd(struct _GdkDragContext* context, struct _GdkWindow* ipc_window, enum GdkDragAction actions);
     * }
     */
    public static int gdk_drag_context_manage_dnd(MemorySegment context, MemorySegment ipc_window, int actions) {
        var mh$ = gdk_drag_context_manage_dnd$MH();
        try {
            return (int)mh$.invokeExact(context, ipc_window, actions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GdkDeviceToolType.GDK_DEVICE_TOOL_TYPE_UNKNOWN = 0;
     * }
     */
    public static int GDK_DEVICE_TOOL_TYPE_UNKNOWN() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkDeviceToolType.GDK_DEVICE_TOOL_TYPE_PEN = 1;
     * }
     */
    public static int GDK_DEVICE_TOOL_TYPE_PEN() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkDeviceToolType.GDK_DEVICE_TOOL_TYPE_ERASER = 2;
     * }
     */
    public static int GDK_DEVICE_TOOL_TYPE_ERASER() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkDeviceToolType.GDK_DEVICE_TOOL_TYPE_BRUSH = 3;
     * }
     */
    public static int GDK_DEVICE_TOOL_TYPE_BRUSH() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GdkDeviceToolType.GDK_DEVICE_TOOL_TYPE_PENCIL = 4;
     * }
     */
    public static int GDK_DEVICE_TOOL_TYPE_PENCIL() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GdkDeviceToolType.GDK_DEVICE_TOOL_TYPE_AIRBRUSH = 5;
     * }
     */
    public static int GDK_DEVICE_TOOL_TYPE_AIRBRUSH() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GdkDeviceToolType.GDK_DEVICE_TOOL_TYPE_MOUSE = 6;
     * }
     */
    public static int GDK_DEVICE_TOOL_TYPE_MOUSE() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GdkDeviceToolType.GDK_DEVICE_TOOL_TYPE_LENS = 7;
     * }
     */
    public static int GDK_DEVICE_TOOL_TYPE_LENS() {
        return (int)7L;
    }
    public static MethodHandle gdk_device_tool_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1766.const$1,"gdk_device_tool_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_device_tool_get_type();
     * }
     */
    public static long gdk_device_tool_get_type() {
        var mh$ = gdk_device_tool_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_tool_get_serial$MH() {
        return RuntimeHelper.requireNonNull(constants$1766.const$2,"gdk_device_tool_get_serial");
    }
    /**
     * {@snippet :
     * unsigned long gdk_device_tool_get_serial(struct _GdkDeviceTool* tool);
     * }
     */
    public static long gdk_device_tool_get_serial(MemorySegment tool) {
        var mh$ = gdk_device_tool_get_serial$MH();
        try {
            return (long)mh$.invokeExact(tool);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_tool_get_hardware_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1766.const$3,"gdk_device_tool_get_hardware_id");
    }
    /**
     * {@snippet :
     * unsigned long gdk_device_tool_get_hardware_id(struct _GdkDeviceTool* tool);
     * }
     */
    public static long gdk_device_tool_get_hardware_id(MemorySegment tool) {
        var mh$ = gdk_device_tool_get_hardware_id$MH();
        try {
            return (long)mh$.invokeExact(tool);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_tool_get_tool_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1766.const$4,"gdk_device_tool_get_tool_type");
    }
    /**
     * {@snippet :
     * enum GdkDeviceToolType gdk_device_tool_get_tool_type(struct _GdkDeviceTool* tool);
     * }
     */
    public static int gdk_device_tool_get_tool_type(MemorySegment tool) {
        var mh$ = gdk_device_tool_get_tool_type$MH();
        try {
            return (int)mh$.invokeExact(tool);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GdkFilterReturn.GDK_FILTER_CONTINUE = 0;
     * }
     */
    public static int GDK_FILTER_CONTINUE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkFilterReturn.GDK_FILTER_TRANSLATE = 1;
     * }
     */
    public static int GDK_FILTER_TRANSLATE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkFilterReturn.GDK_FILTER_REMOVE = 2;
     * }
     */
    public static int GDK_FILTER_REMOVE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_NOTHING = -1;
     * }
     */
    public static int GDK_NOTHING() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_DELETE = 0;
     * }
     */
    public static int GDK_DELETE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_DESTROY = 1;
     * }
     */
    public static int GDK_DESTROY() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_EXPOSE = 2;
     * }
     */
    public static int GDK_EXPOSE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_MOTION_NOTIFY = 3;
     * }
     */
    public static int GDK_MOTION_NOTIFY() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_BUTTON_PRESS = 4;
     * }
     */
    public static int GDK_BUTTON_PRESS() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_2BUTTON_PRESS = 5;
     * }
     */
    public static int GDK_2BUTTON_PRESS() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_DOUBLE_BUTTON_PRESS = 5;
     * }
     */
    public static int GDK_DOUBLE_BUTTON_PRESS() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_3BUTTON_PRESS = 6;
     * }
     */
    public static int GDK_3BUTTON_PRESS() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_TRIPLE_BUTTON_PRESS = 6;
     * }
     */
    public static int GDK_TRIPLE_BUTTON_PRESS() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_BUTTON_RELEASE = 7;
     * }
     */
    public static int GDK_BUTTON_RELEASE() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_KEY_PRESS = 8;
     * }
     */
    public static int GDK_KEY_PRESS() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_KEY_RELEASE = 9;
     * }
     */
    public static int GDK_KEY_RELEASE() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_ENTER_NOTIFY = 10;
     * }
     */
    public static int GDK_ENTER_NOTIFY() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_LEAVE_NOTIFY = 11;
     * }
     */
    public static int GDK_LEAVE_NOTIFY() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_FOCUS_CHANGE = 12;
     * }
     */
    public static int GDK_FOCUS_CHANGE() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_CONFIGURE = 13;
     * }
     */
    public static int GDK_CONFIGURE() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_MAP = 14;
     * }
     */
    public static int GDK_MAP() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_UNMAP = 15;
     * }
     */
    public static int GDK_UNMAP() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_PROPERTY_NOTIFY = 16;
     * }
     */
    public static int GDK_PROPERTY_NOTIFY() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_SELECTION_CLEAR = 17;
     * }
     */
    public static int GDK_SELECTION_CLEAR() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_SELECTION_REQUEST = 18;
     * }
     */
    public static int GDK_SELECTION_REQUEST() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_SELECTION_NOTIFY = 19;
     * }
     */
    public static int GDK_SELECTION_NOTIFY() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_PROXIMITY_IN = 20;
     * }
     */
    public static int GDK_PROXIMITY_IN() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_PROXIMITY_OUT = 21;
     * }
     */
    public static int GDK_PROXIMITY_OUT() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_DRAG_ENTER = 22;
     * }
     */
    public static int GDK_DRAG_ENTER() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_DRAG_LEAVE = 23;
     * }
     */
    public static int GDK_DRAG_LEAVE() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_DRAG_MOTION = 24;
     * }
     */
    public static int GDK_DRAG_MOTION() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_DRAG_STATUS = 25;
     * }
     */
    public static int GDK_DRAG_STATUS() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_DROP_START = 26;
     * }
     */
    public static int GDK_DROP_START() {
        return (int)26L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_DROP_FINISHED = 27;
     * }
     */
    public static int GDK_DROP_FINISHED() {
        return (int)27L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_CLIENT_EVENT = 28;
     * }
     */
    public static int GDK_CLIENT_EVENT() {
        return (int)28L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_VISIBILITY_NOTIFY = 29;
     * }
     */
    public static int GDK_VISIBILITY_NOTIFY() {
        return (int)29L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_SCROLL = 31;
     * }
     */
    public static int GDK_SCROLL() {
        return (int)31L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_WINDOW_STATE = 32;
     * }
     */
    public static int GDK_WINDOW_STATE() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_SETTING = 33;
     * }
     */
    public static int GDK_SETTING() {
        return (int)33L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_OWNER_CHANGE = 34;
     * }
     */
    public static int GDK_OWNER_CHANGE() {
        return (int)34L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_GRAB_BROKEN = 35;
     * }
     */
    public static int GDK_GRAB_BROKEN() {
        return (int)35L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_DAMAGE = 36;
     * }
     */
    public static int GDK_DAMAGE() {
        return (int)36L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_TOUCH_BEGIN = 37;
     * }
     */
    public static int GDK_TOUCH_BEGIN() {
        return (int)37L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_TOUCH_UPDATE = 38;
     * }
     */
    public static int GDK_TOUCH_UPDATE() {
        return (int)38L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_TOUCH_END = 39;
     * }
     */
    public static int GDK_TOUCH_END() {
        return (int)39L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_TOUCH_CANCEL = 40;
     * }
     */
    public static int GDK_TOUCH_CANCEL() {
        return (int)40L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_TOUCHPAD_SWIPE = 41;
     * }
     */
    public static int GDK_TOUCHPAD_SWIPE() {
        return (int)41L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_TOUCHPAD_PINCH = 42;
     * }
     */
    public static int GDK_TOUCHPAD_PINCH() {
        return (int)42L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_PAD_BUTTON_PRESS = 43;
     * }
     */
    public static int GDK_PAD_BUTTON_PRESS() {
        return (int)43L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_PAD_BUTTON_RELEASE = 44;
     * }
     */
    public static int GDK_PAD_BUTTON_RELEASE() {
        return (int)44L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_PAD_RING = 45;
     * }
     */
    public static int GDK_PAD_RING() {
        return (int)45L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_PAD_STRIP = 46;
     * }
     */
    public static int GDK_PAD_STRIP() {
        return (int)46L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_PAD_GROUP_MODE = 47;
     * }
     */
    public static int GDK_PAD_GROUP_MODE() {
        return (int)47L;
    }
    /**
     * {@snippet :
     * enum GdkEventType.GDK_EVENT_LAST = 48;
     * }
     */
    public static int GDK_EVENT_LAST() {
        return (int)48L;
    }
    /**
     * {@snippet :
     * enum GdkVisibilityState.GDK_VISIBILITY_UNOBSCURED = 0;
     * }
     */
    public static int GDK_VISIBILITY_UNOBSCURED() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkVisibilityState.GDK_VISIBILITY_PARTIAL = 1;
     * }
     */
    public static int GDK_VISIBILITY_PARTIAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkVisibilityState.GDK_VISIBILITY_FULLY_OBSCURED = 2;
     * }
     */
    public static int GDK_VISIBILITY_FULLY_OBSCURED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkTouchpadGesturePhase.GDK_TOUCHPAD_GESTURE_PHASE_BEGIN = 0;
     * }
     */
    public static int GDK_TOUCHPAD_GESTURE_PHASE_BEGIN() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkTouchpadGesturePhase.GDK_TOUCHPAD_GESTURE_PHASE_UPDATE = 1;
     * }
     */
    public static int GDK_TOUCHPAD_GESTURE_PHASE_UPDATE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkTouchpadGesturePhase.GDK_TOUCHPAD_GESTURE_PHASE_END = 2;
     * }
     */
    public static int GDK_TOUCHPAD_GESTURE_PHASE_END() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkTouchpadGesturePhase.GDK_TOUCHPAD_GESTURE_PHASE_CANCEL = 3;
     * }
     */
    public static int GDK_TOUCHPAD_GESTURE_PHASE_CANCEL() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GdkScrollDirection.GDK_SCROLL_UP = 0;
     * }
     */
    public static int GDK_SCROLL_UP() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkScrollDirection.GDK_SCROLL_DOWN = 1;
     * }
     */
    public static int GDK_SCROLL_DOWN() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkScrollDirection.GDK_SCROLL_LEFT = 2;
     * }
     */
    public static int GDK_SCROLL_LEFT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkScrollDirection.GDK_SCROLL_RIGHT = 3;
     * }
     */
    public static int GDK_SCROLL_RIGHT() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GdkScrollDirection.GDK_SCROLL_SMOOTH = 4;
     * }
     */
    public static int GDK_SCROLL_SMOOTH() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GdkNotifyType.GDK_NOTIFY_ANCESTOR = 0;
     * }
     */
    public static int GDK_NOTIFY_ANCESTOR() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkNotifyType.GDK_NOTIFY_VIRTUAL = 1;
     * }
     */
    public static int GDK_NOTIFY_VIRTUAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkNotifyType.GDK_NOTIFY_INFERIOR = 2;
     * }
     */
    public static int GDK_NOTIFY_INFERIOR() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkNotifyType.GDK_NOTIFY_NONLINEAR = 3;
     * }
     */
    public static int GDK_NOTIFY_NONLINEAR() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GdkNotifyType.GDK_NOTIFY_NONLINEAR_VIRTUAL = 4;
     * }
     */
    public static int GDK_NOTIFY_NONLINEAR_VIRTUAL() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GdkNotifyType.GDK_NOTIFY_UNKNOWN = 5;
     * }
     */
    public static int GDK_NOTIFY_UNKNOWN() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GdkCrossingMode.GDK_CROSSING_NORMAL = 0;
     * }
     */
    public static int GDK_CROSSING_NORMAL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkCrossingMode.GDK_CROSSING_GRAB = 1;
     * }
     */
    public static int GDK_CROSSING_GRAB() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkCrossingMode.GDK_CROSSING_UNGRAB = 2;
     * }
     */
    public static int GDK_CROSSING_UNGRAB() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkCrossingMode.GDK_CROSSING_GTK_GRAB = 3;
     * }
     */
    public static int GDK_CROSSING_GTK_GRAB() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GdkCrossingMode.GDK_CROSSING_GTK_UNGRAB = 4;
     * }
     */
    public static int GDK_CROSSING_GTK_UNGRAB() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GdkCrossingMode.GDK_CROSSING_STATE_CHANGED = 5;
     * }
     */
    public static int GDK_CROSSING_STATE_CHANGED() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GdkCrossingMode.GDK_CROSSING_TOUCH_BEGIN = 6;
     * }
     */
    public static int GDK_CROSSING_TOUCH_BEGIN() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GdkCrossingMode.GDK_CROSSING_TOUCH_END = 7;
     * }
     */
    public static int GDK_CROSSING_TOUCH_END() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum GdkCrossingMode.GDK_CROSSING_DEVICE_SWITCH = 8;
     * }
     */
    public static int GDK_CROSSING_DEVICE_SWITCH() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GdkPropertyState.GDK_PROPERTY_NEW_VALUE = 0;
     * }
     */
    public static int GDK_PROPERTY_NEW_VALUE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkPropertyState.GDK_PROPERTY_DELETE = 1;
     * }
     */
    public static int GDK_PROPERTY_DELETE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkWindowState.GDK_WINDOW_STATE_WITHDRAWN = 1;
     * }
     */
    public static int GDK_WINDOW_STATE_WITHDRAWN() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkWindowState.GDK_WINDOW_STATE_ICONIFIED = 2;
     * }
     */
    public static int GDK_WINDOW_STATE_ICONIFIED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkWindowState.GDK_WINDOW_STATE_MAXIMIZED = 4;
     * }
     */
    public static int GDK_WINDOW_STATE_MAXIMIZED() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GdkWindowState.GDK_WINDOW_STATE_STICKY = 8;
     * }
     */
    public static int GDK_WINDOW_STATE_STICKY() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GdkWindowState.GDK_WINDOW_STATE_FULLSCREEN = 16;
     * }
     */
    public static int GDK_WINDOW_STATE_FULLSCREEN() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GdkWindowState.GDK_WINDOW_STATE_ABOVE = 32;
     * }
     */
    public static int GDK_WINDOW_STATE_ABOVE() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum GdkWindowState.GDK_WINDOW_STATE_BELOW = 64;
     * }
     */
    public static int GDK_WINDOW_STATE_BELOW() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum GdkWindowState.GDK_WINDOW_STATE_FOCUSED = 128;
     * }
     */
    public static int GDK_WINDOW_STATE_FOCUSED() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * enum GdkWindowState.GDK_WINDOW_STATE_TILED = 256;
     * }
     */
    public static int GDK_WINDOW_STATE_TILED() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * enum GdkWindowState.GDK_WINDOW_STATE_TOP_TILED = 512;
     * }
     */
    public static int GDK_WINDOW_STATE_TOP_TILED() {
        return (int)512L;
    }
    /**
     * {@snippet :
     * enum GdkWindowState.GDK_WINDOW_STATE_TOP_RESIZABLE = 1024;
     * }
     */
    public static int GDK_WINDOW_STATE_TOP_RESIZABLE() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * enum GdkWindowState.GDK_WINDOW_STATE_RIGHT_TILED = 2048;
     * }
     */
    public static int GDK_WINDOW_STATE_RIGHT_TILED() {
        return (int)2048L;
    }
    /**
     * {@snippet :
     * enum GdkWindowState.GDK_WINDOW_STATE_RIGHT_RESIZABLE = 4096;
     * }
     */
    public static int GDK_WINDOW_STATE_RIGHT_RESIZABLE() {
        return (int)4096L;
    }
    /**
     * {@snippet :
     * enum GdkWindowState.GDK_WINDOW_STATE_BOTTOM_TILED = 8192;
     * }
     */
    public static int GDK_WINDOW_STATE_BOTTOM_TILED() {
        return (int)8192L;
    }
    /**
     * {@snippet :
     * enum GdkWindowState.GDK_WINDOW_STATE_BOTTOM_RESIZABLE = 16384;
     * }
     */
    public static int GDK_WINDOW_STATE_BOTTOM_RESIZABLE() {
        return (int)16384L;
    }
    /**
     * {@snippet :
     * enum GdkWindowState.GDK_WINDOW_STATE_LEFT_TILED = 32768;
     * }
     */
    public static int GDK_WINDOW_STATE_LEFT_TILED() {
        return (int)32768L;
    }
    /**
     * {@snippet :
     * enum GdkWindowState.GDK_WINDOW_STATE_LEFT_RESIZABLE = 65536;
     * }
     */
    public static int GDK_WINDOW_STATE_LEFT_RESIZABLE() {
        return (int)65536L;
    }
    /**
     * {@snippet :
     * enum GdkSettingAction.GDK_SETTING_ACTION_NEW = 0;
     * }
     */
    public static int GDK_SETTING_ACTION_NEW() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkSettingAction.GDK_SETTING_ACTION_CHANGED = 1;
     * }
     */
    public static int GDK_SETTING_ACTION_CHANGED() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkSettingAction.GDK_SETTING_ACTION_DELETED = 2;
     * }
     */
    public static int GDK_SETTING_ACTION_DELETED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkOwnerChange.GDK_OWNER_CHANGE_NEW_OWNER = 0;
     * }
     */
    public static int GDK_OWNER_CHANGE_NEW_OWNER() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkOwnerChange.GDK_OWNER_CHANGE_DESTROY = 1;
     * }
     */
    public static int GDK_OWNER_CHANGE_DESTROY() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkOwnerChange.GDK_OWNER_CHANGE_CLOSE = 2;
     * }
     */
    public static int GDK_OWNER_CHANGE_CLOSE() {
        return (int)2L;
    }
    public static MethodHandle gdk_event_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1804.const$0,"gdk_event_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_event_get_type();
     * }
     */
    public static long gdk_event_get_type() {
        var mh$ = gdk_event_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_sequence_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1804.const$1,"gdk_event_sequence_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_event_sequence_get_type();
     * }
     */
    public static long gdk_event_sequence_get_type() {
        var mh$ = gdk_event_sequence_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_events_pending$MH() {
        return RuntimeHelper.requireNonNull(constants$1804.const$2,"gdk_events_pending");
    }
    /**
     * {@snippet :
     * int gdk_events_pending();
     * }
     */
    public static int gdk_events_pending() {
        var mh$ = gdk_events_pending$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get$MH() {
        return RuntimeHelper.requireNonNull(constants$1804.const$3,"gdk_event_get");
    }
    /**
     * {@snippet :
     * union _GdkEvent* gdk_event_get();
     * }
     */
    public static MemorySegment gdk_event_get() {
        var mh$ = gdk_event_get$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_peek$MH() {
        return RuntimeHelper.requireNonNull(constants$1804.const$4,"gdk_event_peek");
    }
    /**
     * {@snippet :
     * union _GdkEvent* gdk_event_peek();
     * }
     */
    public static MemorySegment gdk_event_peek() {
        var mh$ = gdk_event_peek$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_put$MH() {
        return RuntimeHelper.requireNonNull(constants$1804.const$5,"gdk_event_put");
    }
    /**
     * {@snippet :
     * void gdk_event_put(union _GdkEvent* event);
     * }
     */
    public static void gdk_event_put(MemorySegment event) {
        var mh$ = gdk_event_put$MH();
        try {
            mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1805.const$0,"gdk_event_new");
    }
    /**
     * {@snippet :
     * union _GdkEvent* gdk_event_new(enum GdkEventType type);
     * }
     */
    public static MemorySegment gdk_event_new(int type) {
        var mh$ = gdk_event_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$1805.const$1,"gdk_event_copy");
    }
    /**
     * {@snippet :
     * union _GdkEvent* gdk_event_copy(union _GdkEvent* event);
     * }
     */
    public static MemorySegment gdk_event_copy(MemorySegment event) {
        var mh$ = gdk_event_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_free$MH() {
        return RuntimeHelper.requireNonNull(constants$1805.const$2,"gdk_event_free");
    }
    /**
     * {@snippet :
     * void gdk_event_free(union _GdkEvent* event);
     * }
     */
    public static void gdk_event_free(MemorySegment event) {
        var mh$ = gdk_event_free$MH();
        try {
            mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1805.const$3,"gdk_event_get_window");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gdk_event_get_window(union _GdkEvent* event);
     * }
     */
    public static MemorySegment gdk_event_get_window(MemorySegment event) {
        var mh$ = gdk_event_get_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_time$MH() {
        return RuntimeHelper.requireNonNull(constants$1805.const$4,"gdk_event_get_time");
    }
    /**
     * {@snippet :
     * unsigned int gdk_event_get_time(union _GdkEvent* event);
     * }
     */
    public static int gdk_event_get_time(MemorySegment event) {
        var mh$ = gdk_event_get_time$MH();
        try {
            return (int)mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1805.const$5,"gdk_event_get_state");
    }
    /**
     * {@snippet :
     * int gdk_event_get_state(union _GdkEvent* event, enum GdkModifierType* state);
     * }
     */
    public static int gdk_event_get_state(MemorySegment event, MemorySegment state) {
        var mh$ = gdk_event_get_state$MH();
        try {
            return (int)mh$.invokeExact(event, state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_coords$MH() {
        return RuntimeHelper.requireNonNull(constants$1806.const$0,"gdk_event_get_coords");
    }
    /**
     * {@snippet :
     * int gdk_event_get_coords(union _GdkEvent* event, double* x_win, double* y_win);
     * }
     */
    public static int gdk_event_get_coords(MemorySegment event, MemorySegment x_win, MemorySegment y_win) {
        var mh$ = gdk_event_get_coords$MH();
        try {
            return (int)mh$.invokeExact(event, x_win, y_win);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_root_coords$MH() {
        return RuntimeHelper.requireNonNull(constants$1806.const$1,"gdk_event_get_root_coords");
    }
    /**
     * {@snippet :
     * int gdk_event_get_root_coords(union _GdkEvent* event, double* x_root, double* y_root);
     * }
     */
    public static int gdk_event_get_root_coords(MemorySegment event, MemorySegment x_root, MemorySegment y_root) {
        var mh$ = gdk_event_get_root_coords$MH();
        try {
            return (int)mh$.invokeExact(event, x_root, y_root);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_button$MH() {
        return RuntimeHelper.requireNonNull(constants$1806.const$2,"gdk_event_get_button");
    }
    /**
     * {@snippet :
     * int gdk_event_get_button(union _GdkEvent* event, unsigned int* button);
     * }
     */
    public static int gdk_event_get_button(MemorySegment event, MemorySegment button) {
        var mh$ = gdk_event_get_button$MH();
        try {
            return (int)mh$.invokeExact(event, button);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_click_count$MH() {
        return RuntimeHelper.requireNonNull(constants$1806.const$3,"gdk_event_get_click_count");
    }
    /**
     * {@snippet :
     * int gdk_event_get_click_count(union _GdkEvent* event, unsigned int* click_count);
     * }
     */
    public static int gdk_event_get_click_count(MemorySegment event, MemorySegment click_count) {
        var mh$ = gdk_event_get_click_count$MH();
        try {
            return (int)mh$.invokeExact(event, click_count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_keyval$MH() {
        return RuntimeHelper.requireNonNull(constants$1806.const$4,"gdk_event_get_keyval");
    }
    /**
     * {@snippet :
     * int gdk_event_get_keyval(union _GdkEvent* event, unsigned int* keyval);
     * }
     */
    public static int gdk_event_get_keyval(MemorySegment event, MemorySegment keyval) {
        var mh$ = gdk_event_get_keyval$MH();
        try {
            return (int)mh$.invokeExact(event, keyval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_keycode$MH() {
        return RuntimeHelper.requireNonNull(constants$1806.const$5,"gdk_event_get_keycode");
    }
    /**
     * {@snippet :
     * int gdk_event_get_keycode(union _GdkEvent* event, unsigned short* keycode);
     * }
     */
    public static int gdk_event_get_keycode(MemorySegment event, MemorySegment keycode) {
        var mh$ = gdk_event_get_keycode$MH();
        try {
            return (int)mh$.invokeExact(event, keycode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_scroll_direction$MH() {
        return RuntimeHelper.requireNonNull(constants$1807.const$0,"gdk_event_get_scroll_direction");
    }
    /**
     * {@snippet :
     * int gdk_event_get_scroll_direction(union _GdkEvent* event, enum GdkScrollDirection* direction);
     * }
     */
    public static int gdk_event_get_scroll_direction(MemorySegment event, MemorySegment direction) {
        var mh$ = gdk_event_get_scroll_direction$MH();
        try {
            return (int)mh$.invokeExact(event, direction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_scroll_deltas$MH() {
        return RuntimeHelper.requireNonNull(constants$1807.const$1,"gdk_event_get_scroll_deltas");
    }
    /**
     * {@snippet :
     * int gdk_event_get_scroll_deltas(union _GdkEvent* event, double* delta_x, double* delta_y);
     * }
     */
    public static int gdk_event_get_scroll_deltas(MemorySegment event, MemorySegment delta_x, MemorySegment delta_y) {
        var mh$ = gdk_event_get_scroll_deltas$MH();
        try {
            return (int)mh$.invokeExact(event, delta_x, delta_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_is_scroll_stop_event$MH() {
        return RuntimeHelper.requireNonNull(constants$1807.const$2,"gdk_event_is_scroll_stop_event");
    }
    /**
     * {@snippet :
     * int gdk_event_is_scroll_stop_event(union _GdkEvent* event);
     * }
     */
    public static int gdk_event_is_scroll_stop_event(MemorySegment event) {
        var mh$ = gdk_event_is_scroll_stop_event$MH();
        try {
            return (int)mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_axis$MH() {
        return RuntimeHelper.requireNonNull(constants$1807.const$3,"gdk_event_get_axis");
    }
    /**
     * {@snippet :
     * int gdk_event_get_axis(union _GdkEvent* event, enum GdkAxisUse axis_use, double* value);
     * }
     */
    public static int gdk_event_get_axis(MemorySegment event, int axis_use, MemorySegment value) {
        var mh$ = gdk_event_get_axis$MH();
        try {
            return (int)mh$.invokeExact(event, axis_use, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_set_device$MH() {
        return RuntimeHelper.requireNonNull(constants$1807.const$4,"gdk_event_set_device");
    }
    /**
     * {@snippet :
     * void gdk_event_set_device(union _GdkEvent* event, struct _GdkDevice* device);
     * }
     */
    public static void gdk_event_set_device(MemorySegment event, MemorySegment device) {
        var mh$ = gdk_event_set_device$MH();
        try {
            mh$.invokeExact(event, device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_device$MH() {
        return RuntimeHelper.requireNonNull(constants$1807.const$5,"gdk_event_get_device");
    }
    /**
     * {@snippet :
     * struct _GdkDevice* gdk_event_get_device(union _GdkEvent* event);
     * }
     */
    public static MemorySegment gdk_event_get_device(MemorySegment event) {
        var mh$ = gdk_event_get_device$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_set_source_device$MH() {
        return RuntimeHelper.requireNonNull(constants$1808.const$0,"gdk_event_set_source_device");
    }
    /**
     * {@snippet :
     * void gdk_event_set_source_device(union _GdkEvent* event, struct _GdkDevice* device);
     * }
     */
    public static void gdk_event_set_source_device(MemorySegment event, MemorySegment device) {
        var mh$ = gdk_event_set_source_device$MH();
        try {
            mh$.invokeExact(event, device);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_source_device$MH() {
        return RuntimeHelper.requireNonNull(constants$1808.const$1,"gdk_event_get_source_device");
    }
    /**
     * {@snippet :
     * struct _GdkDevice* gdk_event_get_source_device(union _GdkEvent* event);
     * }
     */
    public static MemorySegment gdk_event_get_source_device(MemorySegment event) {
        var mh$ = gdk_event_get_source_device$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_request_motions$MH() {
        return RuntimeHelper.requireNonNull(constants$1808.const$2,"gdk_event_request_motions");
    }
    /**
     * {@snippet :
     * void gdk_event_request_motions(struct _GdkEventMotion* event);
     * }
     */
    public static void gdk_event_request_motions(MemorySegment event) {
        var mh$ = gdk_event_request_motions$MH();
        try {
            mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_triggers_context_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$1808.const$3,"gdk_event_triggers_context_menu");
    }
    /**
     * {@snippet :
     * int gdk_event_triggers_context_menu(union _GdkEvent* event);
     * }
     */
    public static int gdk_event_triggers_context_menu(MemorySegment event) {
        var mh$ = gdk_event_triggers_context_menu$MH();
        try {
            return (int)mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_events_get_distance$MH() {
        return RuntimeHelper.requireNonNull(constants$1808.const$4,"gdk_events_get_distance");
    }
    /**
     * {@snippet :
     * int gdk_events_get_distance(union _GdkEvent* event1, union _GdkEvent* event2, double* distance);
     * }
     */
    public static int gdk_events_get_distance(MemorySegment event1, MemorySegment event2, MemorySegment distance) {
        var mh$ = gdk_events_get_distance$MH();
        try {
            return (int)mh$.invokeExact(event1, event2, distance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_events_get_angle$MH() {
        return RuntimeHelper.requireNonNull(constants$1808.const$5,"gdk_events_get_angle");
    }
    /**
     * {@snippet :
     * int gdk_events_get_angle(union _GdkEvent* event1, union _GdkEvent* event2, double* angle);
     * }
     */
    public static int gdk_events_get_angle(MemorySegment event1, MemorySegment event2, MemorySegment angle) {
        var mh$ = gdk_events_get_angle$MH();
        try {
            return (int)mh$.invokeExact(event1, event2, angle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_events_get_center$MH() {
        return RuntimeHelper.requireNonNull(constants$1809.const$0,"gdk_events_get_center");
    }
    /**
     * {@snippet :
     * int gdk_events_get_center(union _GdkEvent* event1, union _GdkEvent* event2, double* x, double* y);
     * }
     */
    public static int gdk_events_get_center(MemorySegment event1, MemorySegment event2, MemorySegment x, MemorySegment y) {
        var mh$ = gdk_events_get_center$MH();
        try {
            return (int)mh$.invokeExact(event1, event2, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_handler_set$MH() {
        return RuntimeHelper.requireNonNull(constants$1809.const$3,"gdk_event_handler_set");
    }
    /**
     * {@snippet :
     * void gdk_event_handler_set(void (*func)(union _GdkEvent*,void*), void* data, void (*notify)(void*));
     * }
     */
    public static void gdk_event_handler_set(MemorySegment func, MemorySegment data, MemorySegment notify) {
        var mh$ = gdk_event_handler_set$MH();
        try {
            mh$.invokeExact(func, data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_set_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$1809.const$4,"gdk_event_set_screen");
    }
    /**
     * {@snippet :
     * void gdk_event_set_screen(union _GdkEvent* event, struct _GdkScreen* screen);
     * }
     */
    public static void gdk_event_set_screen(MemorySegment event, MemorySegment screen) {
        var mh$ = gdk_event_set_screen$MH();
        try {
            mh$.invokeExact(event, screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$1809.const$5,"gdk_event_get_screen");
    }
    /**
     * {@snippet :
     * struct _GdkScreen* gdk_event_get_screen(union _GdkEvent* event);
     * }
     */
    public static MemorySegment gdk_event_get_screen(MemorySegment event) {
        var mh$ = gdk_event_get_screen$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_event_sequence$MH() {
        return RuntimeHelper.requireNonNull(constants$1810.const$0,"gdk_event_get_event_sequence");
    }
    /**
     * {@snippet :
     * struct _GdkEventSequence* gdk_event_get_event_sequence(union _GdkEvent* event);
     * }
     */
    public static MemorySegment gdk_event_get_event_sequence(MemorySegment event) {
        var mh$ = gdk_event_get_event_sequence$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_event_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1810.const$1,"gdk_event_get_event_type");
    }
    /**
     * {@snippet :
     * enum GdkEventType gdk_event_get_event_type(union _GdkEvent* event);
     * }
     */
    public static int gdk_event_get_event_type(MemorySegment event) {
        var mh$ = gdk_event_get_event_type$MH();
        try {
            return (int)mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_seat$MH() {
        return RuntimeHelper.requireNonNull(constants$1810.const$2,"gdk_event_get_seat");
    }
    /**
     * {@snippet :
     * struct _GdkSeat* gdk_event_get_seat(union _GdkEvent* event);
     * }
     */
    public static MemorySegment gdk_event_get_seat(MemorySegment event) {
        var mh$ = gdk_event_get_seat$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_set_show_events$MH() {
        return RuntimeHelper.requireNonNull(constants$1810.const$3,"gdk_set_show_events");
    }
    /**
     * {@snippet :
     * void gdk_set_show_events(int show_events);
     * }
     */
    public static void gdk_set_show_events(int show_events) {
        var mh$ = gdk_set_show_events$MH();
        try {
            mh$.invokeExact(show_events);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_get_show_events$MH() {
        return RuntimeHelper.requireNonNull(constants$1810.const$4,"gdk_get_show_events");
    }
    /**
     * {@snippet :
     * int gdk_get_show_events();
     * }
     */
    public static int gdk_get_show_events() {
        var mh$ = gdk_get_show_events$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_setting_get$MH() {
        return RuntimeHelper.requireNonNull(constants$1810.const$5,"gdk_setting_get");
    }
    /**
     * {@snippet :
     * int gdk_setting_get(char* name, struct _GValue* value);
     * }
     */
    public static int gdk_setting_get(MemorySegment name, MemorySegment value) {
        var mh$ = gdk_setting_get$MH();
        try {
            return (int)mh$.invokeExact(name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_device_tool$MH() {
        return RuntimeHelper.requireNonNull(constants$1811.const$0,"gdk_event_get_device_tool");
    }
    /**
     * {@snippet :
     * struct _GdkDeviceTool* gdk_event_get_device_tool(union _GdkEvent* event);
     * }
     */
    public static MemorySegment gdk_event_get_device_tool(MemorySegment event) {
        var mh$ = gdk_event_get_device_tool$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_set_device_tool$MH() {
        return RuntimeHelper.requireNonNull(constants$1811.const$1,"gdk_event_set_device_tool");
    }
    /**
     * {@snippet :
     * void gdk_event_set_device_tool(union _GdkEvent* event, struct _GdkDeviceTool* tool);
     * }
     */
    public static void gdk_event_set_device_tool(MemorySegment event, MemorySegment tool) {
        var mh$ = gdk_event_set_device_tool$MH();
        try {
            mh$.invokeExact(event, tool);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_scancode$MH() {
        return RuntimeHelper.requireNonNull(constants$1811.const$2,"gdk_event_get_scancode");
    }
    /**
     * {@snippet :
     * int gdk_event_get_scancode(union _GdkEvent* event);
     * }
     */
    public static int gdk_event_get_scancode(MemorySegment event) {
        var mh$ = gdk_event_get_scancode$MH();
        try {
            return (int)mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_event_get_pointer_emulated$MH() {
        return RuntimeHelper.requireNonNull(constants$1811.const$3,"gdk_event_get_pointer_emulated");
    }
    /**
     * {@snippet :
     * int gdk_event_get_pointer_emulated(union _GdkEvent* event);
     * }
     */
    public static int gdk_event_get_pointer_emulated(MemorySegment event) {
        var mh$ = gdk_event_get_pointer_emulated$MH();
        try {
            return (int)mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_manager_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1811.const$4,"gdk_device_manager_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_device_manager_get_type();
     * }
     */
    public static long gdk_device_manager_get_type() {
        var mh$ = gdk_device_manager_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_manager_get_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1811.const$5,"gdk_device_manager_get_display");
    }
    /**
     * {@snippet :
     * struct _GdkDisplay* gdk_device_manager_get_display(struct _GdkDeviceManager* device_manager);
     * }
     */
    public static MemorySegment gdk_device_manager_get_display(MemorySegment device_manager) {
        var mh$ = gdk_device_manager_get_display$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(device_manager);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_manager_list_devices$MH() {
        return RuntimeHelper.requireNonNull(constants$1812.const$0,"gdk_device_manager_list_devices");
    }
    /**
     * {@snippet :
     * struct _GList* gdk_device_manager_list_devices(struct _GdkDeviceManager* device_manager, enum GdkDeviceType type);
     * }
     */
    public static MemorySegment gdk_device_manager_list_devices(MemorySegment device_manager, int type) {
        var mh$ = gdk_device_manager_list_devices$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(device_manager, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_device_manager_get_client_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$1812.const$1,"gdk_device_manager_get_client_pointer");
    }
    /**
     * {@snippet :
     * struct _GdkDevice* gdk_device_manager_get_client_pointer(struct _GdkDeviceManager* device_manager);
     * }
     */
    public static MemorySegment gdk_device_manager_get_client_pointer(MemorySegment device_manager) {
        var mh$ = gdk_device_manager_get_client_pointer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(device_manager);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drawing_context_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1812.const$2,"gdk_drawing_context_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_drawing_context_get_type();
     * }
     */
    public static long gdk_drawing_context_get_type() {
        var mh$ = gdk_drawing_context_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drawing_context_get_window$MH() {
        return RuntimeHelper.requireNonNull(constants$1812.const$3,"gdk_drawing_context_get_window");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gdk_drawing_context_get_window(struct _GdkDrawingContext* context);
     * }
     */
    public static MemorySegment gdk_drawing_context_get_window(MemorySegment context) {
        var mh$ = gdk_drawing_context_get_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drawing_context_get_clip$MH() {
        return RuntimeHelper.requireNonNull(constants$1812.const$4,"gdk_drawing_context_get_clip");
    }
    /**
     * {@snippet :
     * struct _cairo_region* gdk_drawing_context_get_clip(struct _GdkDrawingContext* context);
     * }
     */
    public static MemorySegment gdk_drawing_context_get_clip(MemorySegment context) {
        var mh$ = gdk_drawing_context_get_clip$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drawing_context_is_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$1812.const$5,"gdk_drawing_context_is_valid");
    }
    /**
     * {@snippet :
     * int gdk_drawing_context_is_valid(struct _GdkDrawingContext* context);
     * }
     */
    public static int gdk_drawing_context_is_valid(MemorySegment context) {
        var mh$ = gdk_drawing_context_is_valid$MH();
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_drawing_context_get_cairo_context$MH() {
        return RuntimeHelper.requireNonNull(constants$1813.const$0,"gdk_drawing_context_get_cairo_context");
    }
    /**
     * {@snippet :
     * struct _cairo* gdk_drawing_context_get_cairo_context(struct _GdkDrawingContext* context);
     * }
     */
    public static MemorySegment gdk_drawing_context_get_cairo_context(MemorySegment context) {
        var mh$ = gdk_drawing_context_get_cairo_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_timings_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1813.const$1,"gdk_frame_timings_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_frame_timings_get_type();
     * }
     */
    public static long gdk_frame_timings_get_type() {
        var mh$ = gdk_frame_timings_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_timings_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$1813.const$2,"gdk_frame_timings_ref");
    }
    /**
     * {@snippet :
     * struct _GdkFrameTimings* gdk_frame_timings_ref(struct _GdkFrameTimings* timings);
     * }
     */
    public static MemorySegment gdk_frame_timings_ref(MemorySegment timings) {
        var mh$ = gdk_frame_timings_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(timings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_timings_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$1813.const$3,"gdk_frame_timings_unref");
    }
    /**
     * {@snippet :
     * void gdk_frame_timings_unref(struct _GdkFrameTimings* timings);
     * }
     */
    public static void gdk_frame_timings_unref(MemorySegment timings) {
        var mh$ = gdk_frame_timings_unref$MH();
        try {
            mh$.invokeExact(timings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_timings_get_frame_counter$MH() {
        return RuntimeHelper.requireNonNull(constants$1813.const$4,"gdk_frame_timings_get_frame_counter");
    }
    /**
     * {@snippet :
     * long gdk_frame_timings_get_frame_counter(struct _GdkFrameTimings* timings);
     * }
     */
    public static long gdk_frame_timings_get_frame_counter(MemorySegment timings) {
        var mh$ = gdk_frame_timings_get_frame_counter$MH();
        try {
            return (long)mh$.invokeExact(timings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_timings_get_complete$MH() {
        return RuntimeHelper.requireNonNull(constants$1813.const$5,"gdk_frame_timings_get_complete");
    }
    /**
     * {@snippet :
     * int gdk_frame_timings_get_complete(struct _GdkFrameTimings* timings);
     * }
     */
    public static int gdk_frame_timings_get_complete(MemorySegment timings) {
        var mh$ = gdk_frame_timings_get_complete$MH();
        try {
            return (int)mh$.invokeExact(timings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_timings_get_frame_time$MH() {
        return RuntimeHelper.requireNonNull(constants$1814.const$0,"gdk_frame_timings_get_frame_time");
    }
    /**
     * {@snippet :
     * long gdk_frame_timings_get_frame_time(struct _GdkFrameTimings* timings);
     * }
     */
    public static long gdk_frame_timings_get_frame_time(MemorySegment timings) {
        var mh$ = gdk_frame_timings_get_frame_time$MH();
        try {
            return (long)mh$.invokeExact(timings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_timings_get_presentation_time$MH() {
        return RuntimeHelper.requireNonNull(constants$1814.const$1,"gdk_frame_timings_get_presentation_time");
    }
    /**
     * {@snippet :
     * long gdk_frame_timings_get_presentation_time(struct _GdkFrameTimings* timings);
     * }
     */
    public static long gdk_frame_timings_get_presentation_time(MemorySegment timings) {
        var mh$ = gdk_frame_timings_get_presentation_time$MH();
        try {
            return (long)mh$.invokeExact(timings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_timings_get_refresh_interval$MH() {
        return RuntimeHelper.requireNonNull(constants$1814.const$2,"gdk_frame_timings_get_refresh_interval");
    }
    /**
     * {@snippet :
     * long gdk_frame_timings_get_refresh_interval(struct _GdkFrameTimings* timings);
     * }
     */
    public static long gdk_frame_timings_get_refresh_interval(MemorySegment timings) {
        var mh$ = gdk_frame_timings_get_refresh_interval$MH();
        try {
            return (long)mh$.invokeExact(timings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_timings_get_predicted_presentation_time$MH() {
        return RuntimeHelper.requireNonNull(constants$1814.const$3,"gdk_frame_timings_get_predicted_presentation_time");
    }
    /**
     * {@snippet :
     * long gdk_frame_timings_get_predicted_presentation_time(struct _GdkFrameTimings* timings);
     * }
     */
    public static long gdk_frame_timings_get_predicted_presentation_time(MemorySegment timings) {
        var mh$ = gdk_frame_timings_get_predicted_presentation_time$MH();
        try {
            return (long)mh$.invokeExact(timings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GdkFrameClockPhase.GDK_FRAME_CLOCK_PHASE_NONE = 0;
     * }
     */
    public static int GDK_FRAME_CLOCK_PHASE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkFrameClockPhase.GDK_FRAME_CLOCK_PHASE_FLUSH_EVENTS = 1;
     * }
     */
    public static int GDK_FRAME_CLOCK_PHASE_FLUSH_EVENTS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkFrameClockPhase.GDK_FRAME_CLOCK_PHASE_BEFORE_PAINT = 2;
     * }
     */
    public static int GDK_FRAME_CLOCK_PHASE_BEFORE_PAINT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkFrameClockPhase.GDK_FRAME_CLOCK_PHASE_UPDATE = 4;
     * }
     */
    public static int GDK_FRAME_CLOCK_PHASE_UPDATE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GdkFrameClockPhase.GDK_FRAME_CLOCK_PHASE_LAYOUT = 8;
     * }
     */
    public static int GDK_FRAME_CLOCK_PHASE_LAYOUT() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GdkFrameClockPhase.GDK_FRAME_CLOCK_PHASE_PAINT = 16;
     * }
     */
    public static int GDK_FRAME_CLOCK_PHASE_PAINT() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GdkFrameClockPhase.GDK_FRAME_CLOCK_PHASE_RESUME_EVENTS = 32;
     * }
     */
    public static int GDK_FRAME_CLOCK_PHASE_RESUME_EVENTS() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum GdkFrameClockPhase.GDK_FRAME_CLOCK_PHASE_AFTER_PAINT = 64;
     * }
     */
    public static int GDK_FRAME_CLOCK_PHASE_AFTER_PAINT() {
        return (int)64L;
    }
    public static MethodHandle gdk_frame_clock_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1814.const$4,"gdk_frame_clock_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_frame_clock_get_type();
     * }
     */
    public static long gdk_frame_clock_get_type() {
        var mh$ = gdk_frame_clock_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_clock_get_frame_time$MH() {
        return RuntimeHelper.requireNonNull(constants$1814.const$5,"gdk_frame_clock_get_frame_time");
    }
    /**
     * {@snippet :
     * long gdk_frame_clock_get_frame_time(struct _GdkFrameClock* frame_clock);
     * }
     */
    public static long gdk_frame_clock_get_frame_time(MemorySegment frame_clock) {
        var mh$ = gdk_frame_clock_get_frame_time$MH();
        try {
            return (long)mh$.invokeExact(frame_clock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_clock_request_phase$MH() {
        return RuntimeHelper.requireNonNull(constants$1815.const$0,"gdk_frame_clock_request_phase");
    }
    /**
     * {@snippet :
     * void gdk_frame_clock_request_phase(struct _GdkFrameClock* frame_clock, enum GdkFrameClockPhase phase);
     * }
     */
    public static void gdk_frame_clock_request_phase(MemorySegment frame_clock, int phase) {
        var mh$ = gdk_frame_clock_request_phase$MH();
        try {
            mh$.invokeExact(frame_clock, phase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_clock_begin_updating$MH() {
        return RuntimeHelper.requireNonNull(constants$1815.const$1,"gdk_frame_clock_begin_updating");
    }
    /**
     * {@snippet :
     * void gdk_frame_clock_begin_updating(struct _GdkFrameClock* frame_clock);
     * }
     */
    public static void gdk_frame_clock_begin_updating(MemorySegment frame_clock) {
        var mh$ = gdk_frame_clock_begin_updating$MH();
        try {
            mh$.invokeExact(frame_clock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_clock_end_updating$MH() {
        return RuntimeHelper.requireNonNull(constants$1815.const$2,"gdk_frame_clock_end_updating");
    }
    /**
     * {@snippet :
     * void gdk_frame_clock_end_updating(struct _GdkFrameClock* frame_clock);
     * }
     */
    public static void gdk_frame_clock_end_updating(MemorySegment frame_clock) {
        var mh$ = gdk_frame_clock_end_updating$MH();
        try {
            mh$.invokeExact(frame_clock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_clock_get_frame_counter$MH() {
        return RuntimeHelper.requireNonNull(constants$1815.const$3,"gdk_frame_clock_get_frame_counter");
    }
    /**
     * {@snippet :
     * long gdk_frame_clock_get_frame_counter(struct _GdkFrameClock* frame_clock);
     * }
     */
    public static long gdk_frame_clock_get_frame_counter(MemorySegment frame_clock) {
        var mh$ = gdk_frame_clock_get_frame_counter$MH();
        try {
            return (long)mh$.invokeExact(frame_clock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_clock_get_history_start$MH() {
        return RuntimeHelper.requireNonNull(constants$1815.const$4,"gdk_frame_clock_get_history_start");
    }
    /**
     * {@snippet :
     * long gdk_frame_clock_get_history_start(struct _GdkFrameClock* frame_clock);
     * }
     */
    public static long gdk_frame_clock_get_history_start(MemorySegment frame_clock) {
        var mh$ = gdk_frame_clock_get_history_start$MH();
        try {
            return (long)mh$.invokeExact(frame_clock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_clock_get_timings$MH() {
        return RuntimeHelper.requireNonNull(constants$1815.const$5,"gdk_frame_clock_get_timings");
    }
    /**
     * {@snippet :
     * struct _GdkFrameTimings* gdk_frame_clock_get_timings(struct _GdkFrameClock* frame_clock, long frame_counter);
     * }
     */
    public static MemorySegment gdk_frame_clock_get_timings(MemorySegment frame_clock, long frame_counter) {
        var mh$ = gdk_frame_clock_get_timings$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(frame_clock, frame_counter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_clock_get_current_timings$MH() {
        return RuntimeHelper.requireNonNull(constants$1816.const$0,"gdk_frame_clock_get_current_timings");
    }
    /**
     * {@snippet :
     * struct _GdkFrameTimings* gdk_frame_clock_get_current_timings(struct _GdkFrameClock* frame_clock);
     * }
     */
    public static MemorySegment gdk_frame_clock_get_current_timings(MemorySegment frame_clock) {
        var mh$ = gdk_frame_clock_get_current_timings$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(frame_clock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_frame_clock_get_refresh_info$MH() {
        return RuntimeHelper.requireNonNull(constants$1816.const$1,"gdk_frame_clock_get_refresh_info");
    }
    /**
     * {@snippet :
     * void gdk_frame_clock_get_refresh_info(struct _GdkFrameClock* frame_clock, long base_time, long* refresh_interval_return, long* presentation_time_return);
     * }
     */
    public static void gdk_frame_clock_get_refresh_info(MemorySegment frame_clock, long base_time, MemorySegment refresh_interval_return, MemorySegment presentation_time_return) {
        var mh$ = gdk_frame_clock_get_refresh_info$MH();
        try {
            mh$.invokeExact(frame_clock, base_time, refresh_interval_return, presentation_time_return);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GdkWindowWindowClass.GDK_INPUT_OUTPUT = 0;
     * }
     */
    public static int GDK_INPUT_OUTPUT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkWindowWindowClass.GDK_INPUT_ONLY = 1;
     * }
     */
    public static int GDK_INPUT_ONLY() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkWindowType.GDK_WINDOW_ROOT = 0;
     * }
     */
    public static int GDK_WINDOW_ROOT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkWindowType.GDK_WINDOW_TOPLEVEL = 1;
     * }
     */
    public static int GDK_WINDOW_TOPLEVEL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkWindowType.GDK_WINDOW_CHILD = 2;
     * }
     */
    public static int GDK_WINDOW_CHILD() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkWindowType.GDK_WINDOW_TEMP = 3;
     * }
     */
    public static int GDK_WINDOW_TEMP() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GdkWindowType.GDK_WINDOW_FOREIGN = 4;
     * }
     */
    public static int GDK_WINDOW_FOREIGN() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GdkWindowType.GDK_WINDOW_OFFSCREEN = 5;
     * }
     */
    public static int GDK_WINDOW_OFFSCREEN() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GdkWindowType.GDK_WINDOW_SUBSURFACE = 6;
     * }
     */
    public static int GDK_WINDOW_SUBSURFACE() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GdkWindowAttributesType.GDK_WA_TITLE = 2;
     * }
     */
    public static int GDK_WA_TITLE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkWindowAttributesType.GDK_WA_X = 4;
     * }
     */
    public static int GDK_WA_X() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GdkWindowAttributesType.GDK_WA_Y = 8;
     * }
     */
    public static int GDK_WA_Y() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GdkWindowAttributesType.GDK_WA_CURSOR = 16;
     * }
     */
    public static int GDK_WA_CURSOR() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GdkWindowAttributesType.GDK_WA_VISUAL = 32;
     * }
     */
    public static int GDK_WA_VISUAL() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum GdkWindowAttributesType.GDK_WA_WMCLASS = 64;
     * }
     */
    public static int GDK_WA_WMCLASS() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum GdkWindowAttributesType.GDK_WA_NOREDIR = 128;
     * }
     */
    public static int GDK_WA_NOREDIR() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * enum GdkWindowAttributesType.GDK_WA_TYPE_HINT = 256;
     * }
     */
    public static int GDK_WA_TYPE_HINT() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * enum GdkWindowHints.GDK_HINT_POS = 1;
     * }
     */
    public static int GDK_HINT_POS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkWindowHints.GDK_HINT_MIN_SIZE = 2;
     * }
     */
    public static int GDK_HINT_MIN_SIZE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkWindowHints.GDK_HINT_MAX_SIZE = 4;
     * }
     */
    public static int GDK_HINT_MAX_SIZE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GdkWindowHints.GDK_HINT_BASE_SIZE = 8;
     * }
     */
    public static int GDK_HINT_BASE_SIZE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GdkWindowHints.GDK_HINT_ASPECT = 16;
     * }
     */
    public static int GDK_HINT_ASPECT() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GdkWindowHints.GDK_HINT_RESIZE_INC = 32;
     * }
     */
    public static int GDK_HINT_RESIZE_INC() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum GdkWindowHints.GDK_HINT_WIN_GRAVITY = 64;
     * }
     */
    public static int GDK_HINT_WIN_GRAVITY() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum GdkWindowHints.GDK_HINT_USER_POS = 128;
     * }
     */
    public static int GDK_HINT_USER_POS() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * enum GdkWindowHints.GDK_HINT_USER_SIZE = 256;
     * }
     */
    public static int GDK_HINT_USER_SIZE() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * enum GdkWMDecoration.GDK_DECOR_ALL = 1;
     * }
     */
    public static int GDK_DECOR_ALL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkWMDecoration.GDK_DECOR_BORDER = 2;
     * }
     */
    public static int GDK_DECOR_BORDER() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkWMDecoration.GDK_DECOR_RESIZEH = 4;
     * }
     */
    public static int GDK_DECOR_RESIZEH() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GdkWMDecoration.GDK_DECOR_TITLE = 8;
     * }
     */
    public static int GDK_DECOR_TITLE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GdkWMDecoration.GDK_DECOR_MENU = 16;
     * }
     */
    public static int GDK_DECOR_MENU() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GdkWMDecoration.GDK_DECOR_MINIMIZE = 32;
     * }
     */
    public static int GDK_DECOR_MINIMIZE() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum GdkWMDecoration.GDK_DECOR_MAXIMIZE = 64;
     * }
     */
    public static int GDK_DECOR_MAXIMIZE() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum GdkWMFunction.GDK_FUNC_ALL = 1;
     * }
     */
    public static int GDK_FUNC_ALL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkWMFunction.GDK_FUNC_RESIZE = 2;
     * }
     */
    public static int GDK_FUNC_RESIZE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkWMFunction.GDK_FUNC_MOVE = 4;
     * }
     */
    public static int GDK_FUNC_MOVE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GdkWMFunction.GDK_FUNC_MINIMIZE = 8;
     * }
     */
    public static int GDK_FUNC_MINIMIZE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GdkWMFunction.GDK_FUNC_MAXIMIZE = 16;
     * }
     */
    public static int GDK_FUNC_MAXIMIZE() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GdkWMFunction.GDK_FUNC_CLOSE = 32;
     * }
     */
    public static int GDK_FUNC_CLOSE() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum GdkGravity.GDK_GRAVITY_NORTH_WEST = 1;
     * }
     */
    public static int GDK_GRAVITY_NORTH_WEST() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkGravity.GDK_GRAVITY_NORTH = 2;
     * }
     */
    public static int GDK_GRAVITY_NORTH() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkGravity.GDK_GRAVITY_NORTH_EAST = 3;
     * }
     */
    public static int GDK_GRAVITY_NORTH_EAST() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GdkGravity.GDK_GRAVITY_WEST = 4;
     * }
     */
    public static int GDK_GRAVITY_WEST() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GdkGravity.GDK_GRAVITY_CENTER = 5;
     * }
     */
    public static int GDK_GRAVITY_CENTER() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GdkGravity.GDK_GRAVITY_EAST = 6;
     * }
     */
    public static int GDK_GRAVITY_EAST() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GdkGravity.GDK_GRAVITY_SOUTH_WEST = 7;
     * }
     */
    public static int GDK_GRAVITY_SOUTH_WEST() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum GdkGravity.GDK_GRAVITY_SOUTH = 8;
     * }
     */
    public static int GDK_GRAVITY_SOUTH() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GdkGravity.GDK_GRAVITY_SOUTH_EAST = 9;
     * }
     */
    public static int GDK_GRAVITY_SOUTH_EAST() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum GdkGravity.GDK_GRAVITY_STATIC = 10;
     * }
     */
    public static int GDK_GRAVITY_STATIC() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum GdkAnchorHints.GDK_ANCHOR_FLIP_X = 1;
     * }
     */
    public static int GDK_ANCHOR_FLIP_X() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkAnchorHints.GDK_ANCHOR_FLIP_Y = 2;
     * }
     */
    public static int GDK_ANCHOR_FLIP_Y() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkAnchorHints.GDK_ANCHOR_SLIDE_X = 4;
     * }
     */
    public static int GDK_ANCHOR_SLIDE_X() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GdkAnchorHints.GDK_ANCHOR_SLIDE_Y = 8;
     * }
     */
    public static int GDK_ANCHOR_SLIDE_Y() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GdkAnchorHints.GDK_ANCHOR_RESIZE_X = 16;
     * }
     */
    public static int GDK_ANCHOR_RESIZE_X() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GdkAnchorHints.GDK_ANCHOR_RESIZE_Y = 32;
     * }
     */
    public static int GDK_ANCHOR_RESIZE_Y() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum GdkAnchorHints.GDK_ANCHOR_FLIP = 3;
     * }
     */
    public static int GDK_ANCHOR_FLIP() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GdkAnchorHints.GDK_ANCHOR_SLIDE = 12;
     * }
     */
    public static int GDK_ANCHOR_SLIDE() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum GdkAnchorHints.GDK_ANCHOR_RESIZE = 48;
     * }
     */
    public static int GDK_ANCHOR_RESIZE() {
        return (int)48L;
    }
    /**
     * {@snippet :
     * enum GdkWindowEdge.GDK_WINDOW_EDGE_NORTH_WEST = 0;
     * }
     */
    public static int GDK_WINDOW_EDGE_NORTH_WEST() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkWindowEdge.GDK_WINDOW_EDGE_NORTH = 1;
     * }
     */
    public static int GDK_WINDOW_EDGE_NORTH() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GdkWindowEdge.GDK_WINDOW_EDGE_NORTH_EAST = 2;
     * }
     */
    public static int GDK_WINDOW_EDGE_NORTH_EAST() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GdkWindowEdge.GDK_WINDOW_EDGE_WEST = 3;
     * }
     */
    public static int GDK_WINDOW_EDGE_WEST() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GdkWindowEdge.GDK_WINDOW_EDGE_EAST = 4;
     * }
     */
    public static int GDK_WINDOW_EDGE_EAST() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GdkWindowEdge.GDK_WINDOW_EDGE_SOUTH_WEST = 5;
     * }
     */
    public static int GDK_WINDOW_EDGE_SOUTH_WEST() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GdkWindowEdge.GDK_WINDOW_EDGE_SOUTH = 6;
     * }
     */
    public static int GDK_WINDOW_EDGE_SOUTH() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GdkWindowEdge.GDK_WINDOW_EDGE_SOUTH_EAST = 7;
     * }
     */
    public static int GDK_WINDOW_EDGE_SOUTH_EAST() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum GdkFullscreenMode.GDK_FULLSCREEN_ON_CURRENT_MONITOR = 0;
     * }
     */
    public static int GDK_FULLSCREEN_ON_CURRENT_MONITOR() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GdkFullscreenMode.GDK_FULLSCREEN_ON_ALL_MONITORS = 1;
     * }
     */
    public static int GDK_FULLSCREEN_ON_ALL_MONITORS() {
        return (int)1L;
    }
    public static MethodHandle gdk_window_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1825.const$5,"gdk_window_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gdk_window_get_type();
     * }
     */
    public static long gdk_window_get_type() {
        var mh$ = gdk_window_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_new$MH() {
        return RuntimeHelper.requireNonNull(constants$1826.const$0,"gdk_window_new");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gdk_window_new(struct _GdkWindow* parent, struct _GdkWindowAttr* attributes, int attributes_mask);
     * }
     */
    public static MemorySegment gdk_window_new(MemorySegment parent, MemorySegment attributes, int attributes_mask) {
        var mh$ = gdk_window_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(parent, attributes, attributes_mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1826.const$1,"gdk_window_destroy");
    }
    /**
     * {@snippet :
     * void gdk_window_destroy(struct _GdkWindow* window);
     * }
     */
    public static void gdk_window_destroy(MemorySegment window) {
        var mh$ = gdk_window_destroy$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_window_type$MH() {
        return RuntimeHelper.requireNonNull(constants$1826.const$2,"gdk_window_get_window_type");
    }
    /**
     * {@snippet :
     * enum GdkWindowType gdk_window_get_window_type(struct _GdkWindow* window);
     * }
     */
    public static int gdk_window_get_window_type(MemorySegment window) {
        var mh$ = gdk_window_get_window_type$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_is_destroyed$MH() {
        return RuntimeHelper.requireNonNull(constants$1826.const$3,"gdk_window_is_destroyed");
    }
    /**
     * {@snippet :
     * int gdk_window_is_destroyed(struct _GdkWindow* window);
     * }
     */
    public static int gdk_window_is_destroyed(MemorySegment window) {
        var mh$ = gdk_window_is_destroyed$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_visual$MH() {
        return RuntimeHelper.requireNonNull(constants$1826.const$4,"gdk_window_get_visual");
    }
    /**
     * {@snippet :
     * struct _GdkVisual* gdk_window_get_visual(struct _GdkWindow* window);
     * }
     */
    public static MemorySegment gdk_window_get_visual(MemorySegment window) {
        var mh$ = gdk_window_get_visual$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$1826.const$5,"gdk_window_get_screen");
    }
    /**
     * {@snippet :
     * struct _GdkScreen* gdk_window_get_screen(struct _GdkWindow* window);
     * }
     */
    public static MemorySegment gdk_window_get_screen(MemorySegment window) {
        var mh$ = gdk_window_get_screen$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_display$MH() {
        return RuntimeHelper.requireNonNull(constants$1827.const$0,"gdk_window_get_display");
    }
    /**
     * {@snippet :
     * struct _GdkDisplay* gdk_window_get_display(struct _GdkWindow* window);
     * }
     */
    public static MemorySegment gdk_window_get_display(MemorySegment window) {
        var mh$ = gdk_window_get_display$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_at_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$1827.const$1,"gdk_window_at_pointer");
    }
    /**
     * {@snippet :
     * struct _GdkWindow* gdk_window_at_pointer(int* win_x, int* win_y);
     * }
     */
    public static MemorySegment gdk_window_at_pointer(MemorySegment win_x, MemorySegment win_y) {
        var mh$ = gdk_window_at_pointer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(win_x, win_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_show$MH() {
        return RuntimeHelper.requireNonNull(constants$1827.const$2,"gdk_window_show");
    }
    /**
     * {@snippet :
     * void gdk_window_show(struct _GdkWindow* window);
     * }
     */
    public static void gdk_window_show(MemorySegment window) {
        var mh$ = gdk_window_show$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_hide$MH() {
        return RuntimeHelper.requireNonNull(constants$1827.const$3,"gdk_window_hide");
    }
    /**
     * {@snippet :
     * void gdk_window_hide(struct _GdkWindow* window);
     * }
     */
    public static void gdk_window_hide(MemorySegment window) {
        var mh$ = gdk_window_hide$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_withdraw$MH() {
        return RuntimeHelper.requireNonNull(constants$1827.const$4,"gdk_window_withdraw");
    }
    /**
     * {@snippet :
     * void gdk_window_withdraw(struct _GdkWindow* window);
     * }
     */
    public static void gdk_window_withdraw(MemorySegment window) {
        var mh$ = gdk_window_withdraw$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_show_unraised$MH() {
        return RuntimeHelper.requireNonNull(constants$1827.const$5,"gdk_window_show_unraised");
    }
    /**
     * {@snippet :
     * void gdk_window_show_unraised(struct _GdkWindow* window);
     * }
     */
    public static void gdk_window_show_unraised(MemorySegment window) {
        var mh$ = gdk_window_show_unraised$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_move$MH() {
        return RuntimeHelper.requireNonNull(constants$1828.const$0,"gdk_window_move");
    }
    /**
     * {@snippet :
     * void gdk_window_move(struct _GdkWindow* window, int x, int y);
     * }
     */
    public static void gdk_window_move(MemorySegment window, int x, int y) {
        var mh$ = gdk_window_move$MH();
        try {
            mh$.invokeExact(window, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_resize$MH() {
        return RuntimeHelper.requireNonNull(constants$1828.const$1,"gdk_window_resize");
    }
    /**
     * {@snippet :
     * void gdk_window_resize(struct _GdkWindow* window, int width, int height);
     * }
     */
    public static void gdk_window_resize(MemorySegment window, int width, int height) {
        var mh$ = gdk_window_resize$MH();
        try {
            mh$.invokeExact(window, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_move_resize$MH() {
        return RuntimeHelper.requireNonNull(constants$1828.const$2,"gdk_window_move_resize");
    }
    /**
     * {@snippet :
     * void gdk_window_move_resize(struct _GdkWindow* window, int x, int y, int width, int height);
     * }
     */
    public static void gdk_window_move_resize(MemorySegment window, int x, int y, int width, int height) {
        var mh$ = gdk_window_move_resize$MH();
        try {
            mh$.invokeExact(window, x, y, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_move_to_rect$MH() {
        return RuntimeHelper.requireNonNull(constants$1828.const$4,"gdk_window_move_to_rect");
    }
    /**
     * {@snippet :
     * void gdk_window_move_to_rect(struct _GdkWindow* window, struct _cairo_rectangle_int* rect, enum GdkGravity rect_anchor, enum GdkGravity window_anchor, enum GdkAnchorHints anchor_hints, int rect_anchor_dx, int rect_anchor_dy);
     * }
     */
    public static void gdk_window_move_to_rect(MemorySegment window, MemorySegment rect, int rect_anchor, int window_anchor, int anchor_hints, int rect_anchor_dx, int rect_anchor_dy) {
        var mh$ = gdk_window_move_to_rect$MH();
        try {
            mh$.invokeExact(window, rect, rect_anchor, window_anchor, anchor_hints, rect_anchor_dx, rect_anchor_dy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_reparent$MH() {
        return RuntimeHelper.requireNonNull(constants$1828.const$5,"gdk_window_reparent");
    }
    /**
     * {@snippet :
     * void gdk_window_reparent(struct _GdkWindow* window, struct _GdkWindow* new_parent, int x, int y);
     * }
     */
    public static void gdk_window_reparent(MemorySegment window, MemorySegment new_parent, int x, int y) {
        var mh$ = gdk_window_reparent$MH();
        try {
            mh$.invokeExact(window, new_parent, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_raise$MH() {
        return RuntimeHelper.requireNonNull(constants$1829.const$0,"gdk_window_raise");
    }
    /**
     * {@snippet :
     * void gdk_window_raise(struct _GdkWindow* window);
     * }
     */
    public static void gdk_window_raise(MemorySegment window) {
        var mh$ = gdk_window_raise$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_lower$MH() {
        return RuntimeHelper.requireNonNull(constants$1829.const$1,"gdk_window_lower");
    }
    /**
     * {@snippet :
     * void gdk_window_lower(struct _GdkWindow* window);
     * }
     */
    public static void gdk_window_lower(MemorySegment window) {
        var mh$ = gdk_window_lower$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_restack$MH() {
        return RuntimeHelper.requireNonNull(constants$1829.const$2,"gdk_window_restack");
    }
    /**
     * {@snippet :
     * void gdk_window_restack(struct _GdkWindow* window, struct _GdkWindow* sibling, int above);
     * }
     */
    public static void gdk_window_restack(MemorySegment window, MemorySegment sibling, int above) {
        var mh$ = gdk_window_restack$MH();
        try {
            mh$.invokeExact(window, sibling, above);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1829.const$3,"gdk_window_focus");
    }
    /**
     * {@snippet :
     * void gdk_window_focus(struct _GdkWindow* window, unsigned int timestamp);
     * }
     */
    public static void gdk_window_focus(MemorySegment window, int timestamp) {
        var mh$ = gdk_window_focus$MH();
        try {
            mh$.invokeExact(window, timestamp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$1829.const$4,"gdk_window_set_user_data");
    }
    /**
     * {@snippet :
     * void gdk_window_set_user_data(struct _GdkWindow* window, void* user_data);
     * }
     */
    public static void gdk_window_set_user_data(MemorySegment window, MemorySegment user_data) {
        var mh$ = gdk_window_set_user_data$MH();
        try {
            mh$.invokeExact(window, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_override_redirect$MH() {
        return RuntimeHelper.requireNonNull(constants$1829.const$5,"gdk_window_set_override_redirect");
    }
    /**
     * {@snippet :
     * void gdk_window_set_override_redirect(struct _GdkWindow* window, int override_redirect);
     * }
     */
    public static void gdk_window_set_override_redirect(MemorySegment window, int override_redirect) {
        var mh$ = gdk_window_set_override_redirect$MH();
        try {
            mh$.invokeExact(window, override_redirect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_accept_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1830.const$0,"gdk_window_get_accept_focus");
    }
    /**
     * {@snippet :
     * int gdk_window_get_accept_focus(struct _GdkWindow* window);
     * }
     */
    public static int gdk_window_get_accept_focus(MemorySegment window) {
        var mh$ = gdk_window_get_accept_focus$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_accept_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$1830.const$1,"gdk_window_set_accept_focus");
    }
    /**
     * {@snippet :
     * void gdk_window_set_accept_focus(struct _GdkWindow* window, int accept_focus);
     * }
     */
    public static void gdk_window_set_accept_focus(MemorySegment window, int accept_focus) {
        var mh$ = gdk_window_set_accept_focus$MH();
        try {
            mh$.invokeExact(window, accept_focus);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_focus_on_map$MH() {
        return RuntimeHelper.requireNonNull(constants$1830.const$2,"gdk_window_get_focus_on_map");
    }
    /**
     * {@snippet :
     * int gdk_window_get_focus_on_map(struct _GdkWindow* window);
     * }
     */
    public static int gdk_window_get_focus_on_map(MemorySegment window) {
        var mh$ = gdk_window_get_focus_on_map$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_focus_on_map$MH() {
        return RuntimeHelper.requireNonNull(constants$1830.const$3,"gdk_window_set_focus_on_map");
    }
    /**
     * {@snippet :
     * void gdk_window_set_focus_on_map(struct _GdkWindow* window, int focus_on_map);
     * }
     */
    public static void gdk_window_set_focus_on_map(MemorySegment window, int focus_on_map) {
        var mh$ = gdk_window_set_focus_on_map$MH();
        try {
            mh$.invokeExact(window, focus_on_map);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_add_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$1830.const$5,"gdk_window_add_filter");
    }
    /**
     * {@snippet :
     * void gdk_window_add_filter(struct _GdkWindow* window, enum GdkFilterReturn (*function)(void*,union _GdkEvent*,void*), void* data);
     * }
     */
    public static void gdk_window_add_filter(MemorySegment window, MemorySegment function, MemorySegment data) {
        var mh$ = gdk_window_add_filter$MH();
        try {
            mh$.invokeExact(window, function, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_remove_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$1831.const$1,"gdk_window_remove_filter");
    }
    /**
     * {@snippet :
     * void gdk_window_remove_filter(struct _GdkWindow* window, enum GdkFilterReturn (*function)(void*,union _GdkEvent*,void*), void* data);
     * }
     */
    public static void gdk_window_remove_filter(MemorySegment window, MemorySegment function, MemorySegment data) {
        var mh$ = gdk_window_remove_filter$MH();
        try {
            mh$.invokeExact(window, function, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_scroll$MH() {
        return RuntimeHelper.requireNonNull(constants$1831.const$2,"gdk_window_scroll");
    }
    /**
     * {@snippet :
     * void gdk_window_scroll(struct _GdkWindow* window, int dx, int dy);
     * }
     */
    public static void gdk_window_scroll(MemorySegment window, int dx, int dy) {
        var mh$ = gdk_window_scroll$MH();
        try {
            mh$.invokeExact(window, dx, dy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_move_region$MH() {
        return RuntimeHelper.requireNonNull(constants$1831.const$3,"gdk_window_move_region");
    }
    /**
     * {@snippet :
     * void gdk_window_move_region(struct _GdkWindow* window, struct _cairo_region* region, int dx, int dy);
     * }
     */
    public static void gdk_window_move_region(MemorySegment window, MemorySegment region, int dx, int dy) {
        var mh$ = gdk_window_move_region$MH();
        try {
            mh$.invokeExact(window, region, dx, dy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_ensure_native$MH() {
        return RuntimeHelper.requireNonNull(constants$1831.const$4,"gdk_window_ensure_native");
    }
    /**
     * {@snippet :
     * int gdk_window_ensure_native(struct _GdkWindow* window);
     * }
     */
    public static int gdk_window_ensure_native(MemorySegment window) {
        var mh$ = gdk_window_ensure_native$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_shape_combine_region$MH() {
        return RuntimeHelper.requireNonNull(constants$1831.const$5,"gdk_window_shape_combine_region");
    }
    /**
     * {@snippet :
     * void gdk_window_shape_combine_region(struct _GdkWindow* window, struct _cairo_region* shape_region, int offset_x, int offset_y);
     * }
     */
    public static void gdk_window_shape_combine_region(MemorySegment window, MemorySegment shape_region, int offset_x, int offset_y) {
        var mh$ = gdk_window_shape_combine_region$MH();
        try {
            mh$.invokeExact(window, shape_region, offset_x, offset_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_child_shapes$MH() {
        return RuntimeHelper.requireNonNull(constants$1832.const$0,"gdk_window_set_child_shapes");
    }
    /**
     * {@snippet :
     * void gdk_window_set_child_shapes(struct _GdkWindow* window);
     * }
     */
    public static void gdk_window_set_child_shapes(MemorySegment window) {
        var mh$ = gdk_window_set_child_shapes$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_composited$MH() {
        return RuntimeHelper.requireNonNull(constants$1832.const$1,"gdk_window_get_composited");
    }
    /**
     * {@snippet :
     * int gdk_window_get_composited(struct _GdkWindow* window);
     * }
     */
    public static int gdk_window_get_composited(MemorySegment window) {
        var mh$ = gdk_window_get_composited$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_composited$MH() {
        return RuntimeHelper.requireNonNull(constants$1832.const$2,"gdk_window_set_composited");
    }
    /**
     * {@snippet :
     * void gdk_window_set_composited(struct _GdkWindow* window, int composited);
     * }
     */
    public static void gdk_window_set_composited(MemorySegment window, int composited) {
        var mh$ = gdk_window_set_composited$MH();
        try {
            mh$.invokeExact(window, composited);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_merge_child_shapes$MH() {
        return RuntimeHelper.requireNonNull(constants$1832.const$3,"gdk_window_merge_child_shapes");
    }
    /**
     * {@snippet :
     * void gdk_window_merge_child_shapes(struct _GdkWindow* window);
     * }
     */
    public static void gdk_window_merge_child_shapes(MemorySegment window) {
        var mh$ = gdk_window_merge_child_shapes$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_input_shape_combine_region$MH() {
        return RuntimeHelper.requireNonNull(constants$1832.const$4,"gdk_window_input_shape_combine_region");
    }
    /**
     * {@snippet :
     * void gdk_window_input_shape_combine_region(struct _GdkWindow* window, struct _cairo_region* shape_region, int offset_x, int offset_y);
     * }
     */
    public static void gdk_window_input_shape_combine_region(MemorySegment window, MemorySegment shape_region, int offset_x, int offset_y) {
        var mh$ = gdk_window_input_shape_combine_region$MH();
        try {
            mh$.invokeExact(window, shape_region, offset_x, offset_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_child_input_shapes$MH() {
        return RuntimeHelper.requireNonNull(constants$1832.const$5,"gdk_window_set_child_input_shapes");
    }
    /**
     * {@snippet :
     * void gdk_window_set_child_input_shapes(struct _GdkWindow* window);
     * }
     */
    public static void gdk_window_set_child_input_shapes(MemorySegment window) {
        var mh$ = gdk_window_set_child_input_shapes$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_merge_child_input_shapes$MH() {
        return RuntimeHelper.requireNonNull(constants$1833.const$0,"gdk_window_merge_child_input_shapes");
    }
    /**
     * {@snippet :
     * void gdk_window_merge_child_input_shapes(struct _GdkWindow* window);
     * }
     */
    public static void gdk_window_merge_child_input_shapes(MemorySegment window) {
        var mh$ = gdk_window_merge_child_input_shapes$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_pass_through$MH() {
        return RuntimeHelper.requireNonNull(constants$1833.const$1,"gdk_window_set_pass_through");
    }
    /**
     * {@snippet :
     * void gdk_window_set_pass_through(struct _GdkWindow* window, int pass_through);
     * }
     */
    public static void gdk_window_set_pass_through(MemorySegment window, int pass_through) {
        var mh$ = gdk_window_set_pass_through$MH();
        try {
            mh$.invokeExact(window, pass_through);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_pass_through$MH() {
        return RuntimeHelper.requireNonNull(constants$1833.const$2,"gdk_window_get_pass_through");
    }
    /**
     * {@snippet :
     * int gdk_window_get_pass_through(struct _GdkWindow* window);
     * }
     */
    public static int gdk_window_get_pass_through(MemorySegment window) {
        var mh$ = gdk_window_get_pass_through$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_is_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$1833.const$3,"gdk_window_is_visible");
    }
    /**
     * {@snippet :
     * int gdk_window_is_visible(struct _GdkWindow* window);
     * }
     */
    public static int gdk_window_is_visible(MemorySegment window) {
        var mh$ = gdk_window_is_visible$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_is_viewable$MH() {
        return RuntimeHelper.requireNonNull(constants$1833.const$4,"gdk_window_is_viewable");
    }
    /**
     * {@snippet :
     * int gdk_window_is_viewable(struct _GdkWindow* window);
     * }
     */
    public static int gdk_window_is_viewable(MemorySegment window) {
        var mh$ = gdk_window_is_viewable$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_is_input_only$MH() {
        return RuntimeHelper.requireNonNull(constants$1833.const$5,"gdk_window_is_input_only");
    }
    /**
     * {@snippet :
     * int gdk_window_is_input_only(struct _GdkWindow* window);
     * }
     */
    public static int gdk_window_is_input_only(MemorySegment window) {
        var mh$ = gdk_window_is_input_only$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_is_shaped$MH() {
        return RuntimeHelper.requireNonNull(constants$1834.const$0,"gdk_window_is_shaped");
    }
    /**
     * {@snippet :
     * int gdk_window_is_shaped(struct _GdkWindow* window);
     * }
     */
    public static int gdk_window_is_shaped(MemorySegment window) {
        var mh$ = gdk_window_is_shaped$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_state$MH() {
        return RuntimeHelper.requireNonNull(constants$1834.const$1,"gdk_window_get_state");
    }
    /**
     * {@snippet :
     * enum GdkWindowState gdk_window_get_state(struct _GdkWindow* window);
     * }
     */
    public static int gdk_window_get_state(MemorySegment window) {
        var mh$ = gdk_window_get_state$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_static_gravities$MH() {
        return RuntimeHelper.requireNonNull(constants$1834.const$2,"gdk_window_set_static_gravities");
    }
    /**
     * {@snippet :
     * int gdk_window_set_static_gravities(struct _GdkWindow* window, int use_static);
     * }
     */
    public static int gdk_window_set_static_gravities(MemorySegment window, int use_static) {
        var mh$ = gdk_window_set_static_gravities$MH();
        try {
            return (int)mh$.invokeExact(window, use_static);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_invalidate_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$1834.const$5,"gdk_window_set_invalidate_handler");
    }
    /**
     * {@snippet :
     * void gdk_window_set_invalidate_handler(struct _GdkWindow* window, void (*handler)(struct _GdkWindow*,struct _cairo_region*));
     * }
     */
    public static void gdk_window_set_invalidate_handler(MemorySegment window, MemorySegment handler) {
        var mh$ = gdk_window_set_invalidate_handler$MH();
        try {
            mh$.invokeExact(window, handler);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_has_native$MH() {
        return RuntimeHelper.requireNonNull(constants$1835.const$0,"gdk_window_has_native");
    }
    /**
     * {@snippet :
     * int gdk_window_has_native(struct _GdkWindow* window);
     * }
     */
    public static int gdk_window_has_native(MemorySegment window) {
        var mh$ = gdk_window_has_native$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_type_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$1835.const$1,"gdk_window_set_type_hint");
    }
    /**
     * {@snippet :
     * void gdk_window_set_type_hint(struct _GdkWindow* window, enum GdkWindowTypeHint hint);
     * }
     */
    public static void gdk_window_set_type_hint(MemorySegment window, int hint) {
        var mh$ = gdk_window_set_type_hint$MH();
        try {
            mh$.invokeExact(window, hint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_type_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$1835.const$2,"gdk_window_get_type_hint");
    }
    /**
     * {@snippet :
     * enum GdkWindowTypeHint gdk_window_get_type_hint(struct _GdkWindow* window);
     * }
     */
    public static int gdk_window_get_type_hint(MemorySegment window) {
        var mh$ = gdk_window_get_type_hint$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_modal_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$1835.const$3,"gdk_window_get_modal_hint");
    }
    /**
     * {@snippet :
     * int gdk_window_get_modal_hint(struct _GdkWindow* window);
     * }
     */
    public static int gdk_window_get_modal_hint(MemorySegment window) {
        var mh$ = gdk_window_get_modal_hint$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_modal_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$1835.const$4,"gdk_window_set_modal_hint");
    }
    /**
     * {@snippet :
     * void gdk_window_set_modal_hint(struct _GdkWindow* window, int modal);
     * }
     */
    public static void gdk_window_set_modal_hint(MemorySegment window, int modal) {
        var mh$ = gdk_window_set_modal_hint$MH();
        try {
            mh$.invokeExact(window, modal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_skip_taskbar_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$1835.const$5,"gdk_window_set_skip_taskbar_hint");
    }
    /**
     * {@snippet :
     * void gdk_window_set_skip_taskbar_hint(struct _GdkWindow* window, int skips_taskbar);
     * }
     */
    public static void gdk_window_set_skip_taskbar_hint(MemorySegment window, int skips_taskbar) {
        var mh$ = gdk_window_set_skip_taskbar_hint$MH();
        try {
            mh$.invokeExact(window, skips_taskbar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_skip_pager_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$1836.const$0,"gdk_window_set_skip_pager_hint");
    }
    /**
     * {@snippet :
     * void gdk_window_set_skip_pager_hint(struct _GdkWindow* window, int skips_pager);
     * }
     */
    public static void gdk_window_set_skip_pager_hint(MemorySegment window, int skips_pager) {
        var mh$ = gdk_window_set_skip_pager_hint$MH();
        try {
            mh$.invokeExact(window, skips_pager);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_urgency_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$1836.const$1,"gdk_window_set_urgency_hint");
    }
    /**
     * {@snippet :
     * void gdk_window_set_urgency_hint(struct _GdkWindow* window, int urgent);
     * }
     */
    public static void gdk_window_set_urgency_hint(MemorySegment window, int urgent) {
        var mh$ = gdk_window_set_urgency_hint$MH();
        try {
            mh$.invokeExact(window, urgent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_geometry_hints$MH() {
        return RuntimeHelper.requireNonNull(constants$1836.const$2,"gdk_window_set_geometry_hints");
    }
    /**
     * {@snippet :
     * void gdk_window_set_geometry_hints(struct _GdkWindow* window, struct _GdkGeometry* geometry, enum GdkWindowHints geom_mask);
     * }
     */
    public static void gdk_window_set_geometry_hints(MemorySegment window, MemorySegment geometry, int geom_mask) {
        var mh$ = gdk_window_set_geometry_hints$MH();
        try {
            mh$.invokeExact(window, geometry, geom_mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_clip_region$MH() {
        return RuntimeHelper.requireNonNull(constants$1836.const$3,"gdk_window_get_clip_region");
    }
    /**
     * {@snippet :
     * struct _cairo_region* gdk_window_get_clip_region(struct _GdkWindow* window);
     * }
     */
    public static MemorySegment gdk_window_get_clip_region(MemorySegment window) {
        var mh$ = gdk_window_get_clip_region$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_visible_region$MH() {
        return RuntimeHelper.requireNonNull(constants$1836.const$4,"gdk_window_get_visible_region");
    }
    /**
     * {@snippet :
     * struct _cairo_region* gdk_window_get_visible_region(struct _GdkWindow* window);
     * }
     */
    public static MemorySegment gdk_window_get_visible_region(MemorySegment window) {
        var mh$ = gdk_window_get_visible_region$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_begin_paint_rect$MH() {
        return RuntimeHelper.requireNonNull(constants$1836.const$5,"gdk_window_begin_paint_rect");
    }
    /**
     * {@snippet :
     * void gdk_window_begin_paint_rect(struct _GdkWindow* window, struct _cairo_rectangle_int* rectangle);
     * }
     */
    public static void gdk_window_begin_paint_rect(MemorySegment window, MemorySegment rectangle) {
        var mh$ = gdk_window_begin_paint_rect$MH();
        try {
            mh$.invokeExact(window, rectangle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_mark_paint_from_clip$MH() {
        return RuntimeHelper.requireNonNull(constants$1837.const$0,"gdk_window_mark_paint_from_clip");
    }
    /**
     * {@snippet :
     * void gdk_window_mark_paint_from_clip(struct _GdkWindow* window, struct _cairo* cr);
     * }
     */
    public static void gdk_window_mark_paint_from_clip(MemorySegment window, MemorySegment cr) {
        var mh$ = gdk_window_mark_paint_from_clip$MH();
        try {
            mh$.invokeExact(window, cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_begin_paint_region$MH() {
        return RuntimeHelper.requireNonNull(constants$1837.const$1,"gdk_window_begin_paint_region");
    }
    /**
     * {@snippet :
     * void gdk_window_begin_paint_region(struct _GdkWindow* window, struct _cairo_region* region);
     * }
     */
    public static void gdk_window_begin_paint_region(MemorySegment window, MemorySegment region) {
        var mh$ = gdk_window_begin_paint_region$MH();
        try {
            mh$.invokeExact(window, region);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_end_paint$MH() {
        return RuntimeHelper.requireNonNull(constants$1837.const$2,"gdk_window_end_paint");
    }
    /**
     * {@snippet :
     * void gdk_window_end_paint(struct _GdkWindow* window);
     * }
     */
    public static void gdk_window_end_paint(MemorySegment window) {
        var mh$ = gdk_window_end_paint$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_begin_draw_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$1837.const$3,"gdk_window_begin_draw_frame");
    }
    /**
     * {@snippet :
     * struct _GdkDrawingContext* gdk_window_begin_draw_frame(struct _GdkWindow* window, struct _cairo_region* region);
     * }
     */
    public static MemorySegment gdk_window_begin_draw_frame(MemorySegment window, MemorySegment region) {
        var mh$ = gdk_window_begin_draw_frame$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window, region);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_end_draw_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$1837.const$4,"gdk_window_end_draw_frame");
    }
    /**
     * {@snippet :
     * void gdk_window_end_draw_frame(struct _GdkWindow* window, struct _GdkDrawingContext* context);
     * }
     */
    public static void gdk_window_end_draw_frame(MemorySegment window, MemorySegment context) {
        var mh$ = gdk_window_end_draw_frame$MH();
        try {
            mh$.invokeExact(window, context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_flush$MH() {
        return RuntimeHelper.requireNonNull(constants$1837.const$5,"gdk_window_flush");
    }
    /**
     * {@snippet :
     * void gdk_window_flush(struct _GdkWindow* window);
     * }
     */
    public static void gdk_window_flush(MemorySegment window) {
        var mh$ = gdk_window_flush$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_title$MH() {
        return RuntimeHelper.requireNonNull(constants$1838.const$0,"gdk_window_set_title");
    }
    /**
     * {@snippet :
     * void gdk_window_set_title(struct _GdkWindow* window, char* title);
     * }
     */
    public static void gdk_window_set_title(MemorySegment window, MemorySegment title) {
        var mh$ = gdk_window_set_title$MH();
        try {
            mh$.invokeExact(window, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_role$MH() {
        return RuntimeHelper.requireNonNull(constants$1838.const$1,"gdk_window_set_role");
    }
    /**
     * {@snippet :
     * void gdk_window_set_role(struct _GdkWindow* window, char* role);
     * }
     */
    public static void gdk_window_set_role(MemorySegment window, MemorySegment role) {
        var mh$ = gdk_window_set_role$MH();
        try {
            mh$.invokeExact(window, role);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_startup_id$MH() {
        return RuntimeHelper.requireNonNull(constants$1838.const$2,"gdk_window_set_startup_id");
    }
    /**
     * {@snippet :
     * void gdk_window_set_startup_id(struct _GdkWindow* window, char* startup_id);
     * }
     */
    public static void gdk_window_set_startup_id(MemorySegment window, MemorySegment startup_id) {
        var mh$ = gdk_window_set_startup_id$MH();
        try {
            mh$.invokeExact(window, startup_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_transient_for$MH() {
        return RuntimeHelper.requireNonNull(constants$1838.const$3,"gdk_window_set_transient_for");
    }
    /**
     * {@snippet :
     * void gdk_window_set_transient_for(struct _GdkWindow* window, struct _GdkWindow* parent);
     * }
     */
    public static void gdk_window_set_transient_for(MemorySegment window, MemorySegment parent) {
        var mh$ = gdk_window_set_transient_for$MH();
        try {
            mh$.invokeExact(window, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_background$MH() {
        return RuntimeHelper.requireNonNull(constants$1838.const$4,"gdk_window_set_background");
    }
    /**
     * {@snippet :
     * void gdk_window_set_background(struct _GdkWindow* window, struct _GdkColor* color);
     * }
     */
    public static void gdk_window_set_background(MemorySegment window, MemorySegment color) {
        var mh$ = gdk_window_set_background$MH();
        try {
            mh$.invokeExact(window, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_background_rgba$MH() {
        return RuntimeHelper.requireNonNull(constants$1838.const$5,"gdk_window_set_background_rgba");
    }
    /**
     * {@snippet :
     * void gdk_window_set_background_rgba(struct _GdkWindow* window, struct _GdkRGBA* rgba);
     * }
     */
    public static void gdk_window_set_background_rgba(MemorySegment window, MemorySegment rgba) {
        var mh$ = gdk_window_set_background_rgba$MH();
        try {
            mh$.invokeExact(window, rgba);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_background_pattern$MH() {
        return RuntimeHelper.requireNonNull(constants$1839.const$0,"gdk_window_set_background_pattern");
    }
    /**
     * {@snippet :
     * void gdk_window_set_background_pattern(struct _GdkWindow* window, struct _cairo_pattern* pattern);
     * }
     */
    public static void gdk_window_set_background_pattern(MemorySegment window, MemorySegment pattern) {
        var mh$ = gdk_window_set_background_pattern$MH();
        try {
            mh$.invokeExact(window, pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_background_pattern$MH() {
        return RuntimeHelper.requireNonNull(constants$1839.const$1,"gdk_window_get_background_pattern");
    }
    /**
     * {@snippet :
     * struct _cairo_pattern* gdk_window_get_background_pattern(struct _GdkWindow* window);
     * }
     */
    public static MemorySegment gdk_window_get_background_pattern(MemorySegment window) {
        var mh$ = gdk_window_get_background_pattern$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_set_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$1839.const$2,"gdk_window_set_cursor");
    }
    /**
     * {@snippet :
     * void gdk_window_set_cursor(struct _GdkWindow* window, struct _GdkCursor* cursor);
     * }
     */
    public static void gdk_window_set_cursor(MemorySegment window, MemorySegment cursor) {
        var mh$ = gdk_window_set_cursor$MH();
        try {
            mh$.invokeExact(window, cursor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gdk_window_get_cursor$MH() {
        return RuntimeHelper.requireNonNull(constants$1839.const$3,"gdk_window_get_cursor");
    }
    /**
     * {@snippet :
     * struct _GdkCursor* gdk_window_get_cursor(struct _GdkWindow* window);
     * }
     */
    public static MemorySegment gdk_window_get_cursor(MemorySegment window) {
        var mh$ = gdk_window_get_cursor$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


