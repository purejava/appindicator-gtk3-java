// Generated by jextract

package org.purejava.appindicator;

import java.lang.invoke.MethodHandle;
import java.lang.foreign.*;

final class constants$1098 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$1098() {}
    static final FunctionDescriptor gdk_window_deiconify$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gdk_window_deiconify$MH = RuntimeHelper.downcallHandle(
        "gdk_window_deiconify",
        constants$1098.gdk_window_deiconify$FUNC
    );
    static final FunctionDescriptor gdk_window_stick$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gdk_window_stick$MH = RuntimeHelper.downcallHandle(
        "gdk_window_stick",
        constants$1098.gdk_window_stick$FUNC
    );
    static final FunctionDescriptor gdk_window_unstick$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gdk_window_unstick$MH = RuntimeHelper.downcallHandle(
        "gdk_window_unstick",
        constants$1098.gdk_window_unstick$FUNC
    );
    static final FunctionDescriptor gdk_window_maximize$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gdk_window_maximize$MH = RuntimeHelper.downcallHandle(
        "gdk_window_maximize",
        constants$1098.gdk_window_maximize$FUNC
    );
    static final FunctionDescriptor gdk_window_unmaximize$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gdk_window_unmaximize$MH = RuntimeHelper.downcallHandle(
        "gdk_window_unmaximize",
        constants$1098.gdk_window_unmaximize$FUNC
    );
    static final FunctionDescriptor gdk_window_fullscreen$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gdk_window_fullscreen$MH = RuntimeHelper.downcallHandle(
        "gdk_window_fullscreen",
        constants$1098.gdk_window_fullscreen$FUNC
    );
}


