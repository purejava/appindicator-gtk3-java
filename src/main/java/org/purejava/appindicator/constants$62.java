// Generated by jextract

package org.purejava.appindicator;

import java.lang.invoke.MethodHandle;
import java.lang.foreign.*;

final class constants$62 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$62() {}
    static final FunctionDescriptor g_thread_unref$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_thread_unref$MH = RuntimeHelper.downcallHandle(
        "g_thread_unref",
        constants$62.g_thread_unref$FUNC
    );
    static final FunctionDescriptor g_thread_new$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_thread_new$MH = RuntimeHelper.downcallHandle(
        "g_thread_new",
        constants$62.g_thread_new$FUNC
    );
    static final FunctionDescriptor g_thread_try_new$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_thread_try_new$MH = RuntimeHelper.downcallHandle(
        "g_thread_try_new",
        constants$62.g_thread_try_new$FUNC
    );
    static final FunctionDescriptor g_thread_self$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle g_thread_self$MH = RuntimeHelper.downcallHandle(
        "g_thread_self",
        constants$62.g_thread_self$FUNC
    );
    static final FunctionDescriptor g_thread_exit$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_thread_exit$MH = RuntimeHelper.downcallHandle(
        "g_thread_exit",
        constants$62.g_thread_exit$FUNC
    );
    static final FunctionDescriptor g_thread_join$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_thread_join$MH = RuntimeHelper.downcallHandle(
        "g_thread_join",
        constants$62.g_thread_join$FUNC
    );
}


