// Generated by jextract

package org.purejava.appindicator;

import java.lang.foreign.*;

/**
 * {@snippet :
 * int (*GDBusInterfaceSetPropertyFunc)(struct _GDBusConnection* connection,char* sender,char* object_path,char* interface_name,char* property_name,struct _GVariant* value,struct _GError** error,void* user_data);
 * }
 */
public interface GDBusInterfaceSetPropertyFunc {

    int apply(java.lang.foreign.MemorySegment connection, java.lang.foreign.MemorySegment sender, java.lang.foreign.MemorySegment object_path, java.lang.foreign.MemorySegment interface_name, java.lang.foreign.MemorySegment property_name, java.lang.foreign.MemorySegment value, java.lang.foreign.MemorySegment error, java.lang.foreign.MemorySegment user_data);
    static MemorySegment allocate(GDBusInterfaceSetPropertyFunc fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(constants$556.GDBusInterfaceSetPropertyFunc_UP$MH, fi, constants$556.GDBusInterfaceSetPropertyFunc$FUNC, scope);
    }
    static GDBusInterfaceSetPropertyFunc ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (java.lang.foreign.MemorySegment _connection, java.lang.foreign.MemorySegment _sender, java.lang.foreign.MemorySegment _object_path, java.lang.foreign.MemorySegment _interface_name, java.lang.foreign.MemorySegment _property_name, java.lang.foreign.MemorySegment _value, java.lang.foreign.MemorySegment _error, java.lang.foreign.MemorySegment _user_data) -> {
            try {
                return (int)constants$556.GDBusInterfaceSetPropertyFunc_DOWN$MH.invokeExact(symbol, _connection, _sender, _object_path, _interface_name, _property_name, _value, _error, _user_data);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


