// Generated by jextract

package org.purejava.appindicator;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class app_indicator_h_15 extends app_indicator_h_14 {

    public static MethodHandle gtk_widget_get_style_context$MH() {
        return RuntimeHelper.requireNonNull(constants$2162.const$2,"gtk_widget_get_style_context");
    }
    /**
     * {@snippet :
     * struct _GtkStyleContext* gtk_widget_get_style_context(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_style_context(MemorySegment widget) {
        var mh$ = gtk_widget_get_style_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2162.const$3,"gtk_widget_get_path");
    }
    /**
     * {@snippet :
     * struct _GtkWidgetPath* gtk_widget_get_path(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_path(MemorySegment widget) {
        var mh$ = gtk_widget_get_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_set_css_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2162.const$4,"gtk_widget_class_set_css_name");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_set_css_name(struct _GtkWidgetClass* widget_class, char* name);
     * }
     */
    public static void gtk_widget_class_set_css_name(MemorySegment widget_class, MemorySegment name) {
        var mh$ = gtk_widget_class_set_css_name$MH();
        try {
            mh$.invokeExact(widget_class, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_get_css_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2162.const$5,"gtk_widget_class_get_css_name");
    }
    /**
     * {@snippet :
     * char* gtk_widget_class_get_css_name(struct _GtkWidgetClass* widget_class);
     * }
     */
    public static MemorySegment gtk_widget_class_get_css_name(MemorySegment widget_class) {
        var mh$ = gtk_widget_class_get_css_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_modifier_mask$MH() {
        return RuntimeHelper.requireNonNull(constants$2163.const$0,"gtk_widget_get_modifier_mask");
    }
    /**
     * {@snippet :
     * enum GdkModifierType gtk_widget_get_modifier_mask(struct _GtkWidget* widget, enum GdkModifierIntent intent);
     * }
     */
    public static int gtk_widget_get_modifier_mask(MemorySegment widget, int intent) {
        var mh$ = gtk_widget_get_modifier_mask$MH();
        try {
            return (int)mh$.invokeExact(widget, intent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_insert_action_group$MH() {
        return RuntimeHelper.requireNonNull(constants$2163.const$1,"gtk_widget_insert_action_group");
    }
    /**
     * {@snippet :
     * void gtk_widget_insert_action_group(struct _GtkWidget* widget, char* name, struct _GActionGroup* group);
     * }
     */
    public static void gtk_widget_insert_action_group(MemorySegment widget, MemorySegment name, MemorySegment group) {
        var mh$ = gtk_widget_insert_action_group$MH();
        try {
            mh$.invokeExact(widget, name, group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_add_tick_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$2163.const$4,"gtk_widget_add_tick_callback");
    }
    /**
     * {@snippet :
     * unsigned int gtk_widget_add_tick_callback(struct _GtkWidget* widget, int (*callback)(struct _GtkWidget*,struct _GdkFrameClock*,void*), void* user_data, void (*notify)(void*));
     * }
     */
    public static int gtk_widget_add_tick_callback(MemorySegment widget, MemorySegment callback, MemorySegment user_data, MemorySegment notify) {
        var mh$ = gtk_widget_add_tick_callback$MH();
        try {
            return (int)mh$.invokeExact(widget, callback, user_data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_remove_tick_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$2163.const$5,"gtk_widget_remove_tick_callback");
    }
    /**
     * {@snippet :
     * void gtk_widget_remove_tick_callback(struct _GtkWidget* widget, unsigned int id);
     * }
     */
    public static void gtk_widget_remove_tick_callback(MemorySegment widget, int id) {
        var mh$ = gtk_widget_remove_tick_callback$MH();
        try {
            mh$.invokeExact(widget, id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_init_template$MH() {
        return RuntimeHelper.requireNonNull(constants$2164.const$0,"gtk_widget_init_template");
    }
    /**
     * {@snippet :
     * void gtk_widget_init_template(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_widget_init_template(MemorySegment widget) {
        var mh$ = gtk_widget_init_template$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_template_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2164.const$1,"gtk_widget_get_template_child");
    }
    /**
     * {@snippet :
     * struct _GObject* gtk_widget_get_template_child(struct _GtkWidget* widget, unsigned long widget_type, char* name);
     * }
     */
    public static MemorySegment gtk_widget_get_template_child(MemorySegment widget, long widget_type, MemorySegment name) {
        var mh$ = gtk_widget_get_template_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget, widget_type, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_set_template$MH() {
        return RuntimeHelper.requireNonNull(constants$2164.const$2,"gtk_widget_class_set_template");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_set_template(struct _GtkWidgetClass* widget_class, struct _GBytes* template_bytes);
     * }
     */
    public static void gtk_widget_class_set_template(MemorySegment widget_class, MemorySegment template_bytes) {
        var mh$ = gtk_widget_class_set_template$MH();
        try {
            mh$.invokeExact(widget_class, template_bytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_set_template_from_resource$MH() {
        return RuntimeHelper.requireNonNull(constants$2164.const$3,"gtk_widget_class_set_template_from_resource");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_set_template_from_resource(struct _GtkWidgetClass* widget_class, char* resource_name);
     * }
     */
    public static void gtk_widget_class_set_template_from_resource(MemorySegment widget_class, MemorySegment resource_name) {
        var mh$ = gtk_widget_class_set_template_from_resource$MH();
        try {
            mh$.invokeExact(widget_class, resource_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_bind_template_callback_full$MH() {
        return RuntimeHelper.requireNonNull(constants$2164.const$5,"gtk_widget_class_bind_template_callback_full");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_bind_template_callback_full(struct _GtkWidgetClass* widget_class, char* callback_name, void (*callback_symbol)());
     * }
     */
    public static void gtk_widget_class_bind_template_callback_full(MemorySegment widget_class, MemorySegment callback_name, MemorySegment callback_symbol) {
        var mh$ = gtk_widget_class_bind_template_callback_full$MH();
        try {
            mh$.invokeExact(widget_class, callback_name, callback_symbol);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_set_connect_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2165.const$2,"gtk_widget_class_set_connect_func");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_set_connect_func(struct _GtkWidgetClass* widget_class, void (*connect_func)(struct _GtkBuilder*,struct _GObject*,char*,char*,struct _GObject*,enum GConnectFlags,void*), void* connect_data, void (*connect_data_destroy)(void*));
     * }
     */
    public static void gtk_widget_class_set_connect_func(MemorySegment widget_class, MemorySegment connect_func, MemorySegment connect_data, MemorySegment connect_data_destroy) {
        var mh$ = gtk_widget_class_set_connect_func$MH();
        try {
            mh$.invokeExact(widget_class, connect_func, connect_data, connect_data_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_class_bind_template_child_full$MH() {
        return RuntimeHelper.requireNonNull(constants$2165.const$4,"gtk_widget_class_bind_template_child_full");
    }
    /**
     * {@snippet :
     * void gtk_widget_class_bind_template_child_full(struct _GtkWidgetClass* widget_class, char* name, int internal_child, long struct_offset);
     * }
     */
    public static void gtk_widget_class_bind_template_child_full(MemorySegment widget_class, MemorySegment name, int internal_child, long struct_offset) {
        var mh$ = gtk_widget_class_bind_template_child_full$MH();
        try {
            mh$.invokeExact(widget_class, name, internal_child, struct_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_action_group$MH() {
        return RuntimeHelper.requireNonNull(constants$2165.const$5,"gtk_widget_get_action_group");
    }
    /**
     * {@snippet :
     * struct _GActionGroup* gtk_widget_get_action_group(struct _GtkWidget* widget, char* prefix);
     * }
     */
    public static MemorySegment gtk_widget_get_action_group(MemorySegment widget, MemorySegment prefix) {
        var mh$ = gtk_widget_get_action_group$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget, prefix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_list_action_prefixes$MH() {
        return RuntimeHelper.requireNonNull(constants$2166.const$0,"gtk_widget_list_action_prefixes");
    }
    /**
     * {@snippet :
     * char** gtk_widget_list_action_prefixes(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_list_action_prefixes(MemorySegment widget) {
        var mh$ = gtk_widget_list_action_prefixes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_set_font_map$MH() {
        return RuntimeHelper.requireNonNull(constants$2166.const$1,"gtk_widget_set_font_map");
    }
    /**
     * {@snippet :
     * void gtk_widget_set_font_map(struct _GtkWidget* widget, struct _PangoFontMap* font_map);
     * }
     */
    public static void gtk_widget_set_font_map(MemorySegment widget, MemorySegment font_map) {
        var mh$ = gtk_widget_set_font_map$MH();
        try {
            mh$.invokeExact(widget, font_map);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_widget_get_font_map$MH() {
        return RuntimeHelper.requireNonNull(constants$2166.const$2,"gtk_widget_get_font_map");
    }
    /**
     * {@snippet :
     * struct _PangoFontMap* gtk_widget_get_font_map(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_widget_get_font_map(MemorySegment widget) {
        var mh$ = gtk_widget_get_font_map$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkWidget* GtkWidget_autoptr;
     * }
     */
    public static final AddressLayout GtkWidget_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GtkWidget_listautoptr;
     * }
     */
    public static final AddressLayout GtkWidget_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkWidget_slistautoptr;
     * }
     */
    public static final AddressLayout GtkWidget_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkWidget_queueautoptr;
     * }
     */
    public static final AddressLayout GtkWidget_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GtkRequisition* GtkRequisition_autoptr;
     * }
     */
    public static final AddressLayout GtkRequisition_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GtkRequisition_listautoptr;
     * }
     */
    public static final AddressLayout GtkRequisition_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkRequisition_slistautoptr;
     * }
     */
    public static final AddressLayout GtkRequisition_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkRequisition_queueautoptr;
     * }
     */
    public static final AddressLayout GtkRequisition_queueautoptr = RuntimeHelper.POINTER;
    public static MethodHandle gtk_application_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2167.const$4,"gtk_application_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_application_get_type();
     * }
     */
    public static long gtk_application_get_type() {
        var mh$ = gtk_application_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2167.const$5,"gtk_application_new");
    }
    /**
     * {@snippet :
     * struct _GtkApplication* gtk_application_new(char* application_id, enum GApplicationFlags flags);
     * }
     */
    public static MemorySegment gtk_application_new(MemorySegment application_id, int flags) {
        var mh$ = gtk_application_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application_id, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_add_window$MH() {
        return RuntimeHelper.requireNonNull(constants$2168.const$0,"gtk_application_add_window");
    }
    /**
     * {@snippet :
     * void gtk_application_add_window(struct _GtkApplication* application, struct _GtkWindow* window);
     * }
     */
    public static void gtk_application_add_window(MemorySegment application, MemorySegment window) {
        var mh$ = gtk_application_add_window$MH();
        try {
            mh$.invokeExact(application, window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_remove_window$MH() {
        return RuntimeHelper.requireNonNull(constants$2168.const$1,"gtk_application_remove_window");
    }
    /**
     * {@snippet :
     * void gtk_application_remove_window(struct _GtkApplication* application, struct _GtkWindow* window);
     * }
     */
    public static void gtk_application_remove_window(MemorySegment application, MemorySegment window) {
        var mh$ = gtk_application_remove_window$MH();
        try {
            mh$.invokeExact(application, window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_get_windows$MH() {
        return RuntimeHelper.requireNonNull(constants$2168.const$2,"gtk_application_get_windows");
    }
    /**
     * {@snippet :
     * struct _GList* gtk_application_get_windows(struct _GtkApplication* application);
     * }
     */
    public static MemorySegment gtk_application_get_windows(MemorySegment application) {
        var mh$ = gtk_application_get_windows$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_get_app_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$2168.const$3,"gtk_application_get_app_menu");
    }
    /**
     * {@snippet :
     * struct _GMenuModel* gtk_application_get_app_menu(struct _GtkApplication* application);
     * }
     */
    public static MemorySegment gtk_application_get_app_menu(MemorySegment application) {
        var mh$ = gtk_application_get_app_menu$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_set_app_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$2168.const$4,"gtk_application_set_app_menu");
    }
    /**
     * {@snippet :
     * void gtk_application_set_app_menu(struct _GtkApplication* application, struct _GMenuModel* app_menu);
     * }
     */
    public static void gtk_application_set_app_menu(MemorySegment application, MemorySegment app_menu) {
        var mh$ = gtk_application_set_app_menu$MH();
        try {
            mh$.invokeExact(application, app_menu);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_get_menubar$MH() {
        return RuntimeHelper.requireNonNull(constants$2168.const$5,"gtk_application_get_menubar");
    }
    /**
     * {@snippet :
     * struct _GMenuModel* gtk_application_get_menubar(struct _GtkApplication* application);
     * }
     */
    public static MemorySegment gtk_application_get_menubar(MemorySegment application) {
        var mh$ = gtk_application_get_menubar$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_set_menubar$MH() {
        return RuntimeHelper.requireNonNull(constants$2169.const$0,"gtk_application_set_menubar");
    }
    /**
     * {@snippet :
     * void gtk_application_set_menubar(struct _GtkApplication* application, struct _GMenuModel* menubar);
     * }
     */
    public static void gtk_application_set_menubar(MemorySegment application, MemorySegment menubar) {
        var mh$ = gtk_application_set_menubar$MH();
        try {
            mh$.invokeExact(application, menubar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_add_accelerator$MH() {
        return RuntimeHelper.requireNonNull(constants$2169.const$1,"gtk_application_add_accelerator");
    }
    /**
     * {@snippet :
     * void gtk_application_add_accelerator(struct _GtkApplication* application, char* accelerator, char* action_name, struct _GVariant* parameter);
     * }
     */
    public static void gtk_application_add_accelerator(MemorySegment application, MemorySegment accelerator, MemorySegment action_name, MemorySegment parameter) {
        var mh$ = gtk_application_add_accelerator$MH();
        try {
            mh$.invokeExact(application, accelerator, action_name, parameter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_remove_accelerator$MH() {
        return RuntimeHelper.requireNonNull(constants$2169.const$2,"gtk_application_remove_accelerator");
    }
    /**
     * {@snippet :
     * void gtk_application_remove_accelerator(struct _GtkApplication* application, char* action_name, struct _GVariant* parameter);
     * }
     */
    public static void gtk_application_remove_accelerator(MemorySegment application, MemorySegment action_name, MemorySegment parameter) {
        var mh$ = gtk_application_remove_accelerator$MH();
        try {
            mh$.invokeExact(application, action_name, parameter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkApplicationInhibitFlags.GTK_APPLICATION_INHIBIT_LOGOUT = 1;
     * }
     */
    public static int GTK_APPLICATION_INHIBIT_LOGOUT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkApplicationInhibitFlags.GTK_APPLICATION_INHIBIT_SWITCH = 2;
     * }
     */
    public static int GTK_APPLICATION_INHIBIT_SWITCH() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkApplicationInhibitFlags.GTK_APPLICATION_INHIBIT_SUSPEND = 4;
     * }
     */
    public static int GTK_APPLICATION_INHIBIT_SUSPEND() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkApplicationInhibitFlags.GTK_APPLICATION_INHIBIT_IDLE = 8;
     * }
     */
    public static int GTK_APPLICATION_INHIBIT_IDLE() {
        return (int)8L;
    }
    public static MethodHandle gtk_application_inhibit$MH() {
        return RuntimeHelper.requireNonNull(constants$2169.const$3,"gtk_application_inhibit");
    }
    /**
     * {@snippet :
     * unsigned int gtk_application_inhibit(struct _GtkApplication* application, struct _GtkWindow* window, enum GtkApplicationInhibitFlags flags, char* reason);
     * }
     */
    public static int gtk_application_inhibit(MemorySegment application, MemorySegment window, int flags, MemorySegment reason) {
        var mh$ = gtk_application_inhibit$MH();
        try {
            return (int)mh$.invokeExact(application, window, flags, reason);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_uninhibit$MH() {
        return RuntimeHelper.requireNonNull(constants$2169.const$4,"gtk_application_uninhibit");
    }
    /**
     * {@snippet :
     * void gtk_application_uninhibit(struct _GtkApplication* application, unsigned int cookie);
     * }
     */
    public static void gtk_application_uninhibit(MemorySegment application, int cookie) {
        var mh$ = gtk_application_uninhibit$MH();
        try {
            mh$.invokeExact(application, cookie);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_is_inhibited$MH() {
        return RuntimeHelper.requireNonNull(constants$2169.const$5,"gtk_application_is_inhibited");
    }
    /**
     * {@snippet :
     * int gtk_application_is_inhibited(struct _GtkApplication* application, enum GtkApplicationInhibitFlags flags);
     * }
     */
    public static int gtk_application_is_inhibited(MemorySegment application, int flags) {
        var mh$ = gtk_application_is_inhibited$MH();
        try {
            return (int)mh$.invokeExact(application, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_get_window_by_id$MH() {
        return RuntimeHelper.requireNonNull(constants$2170.const$0,"gtk_application_get_window_by_id");
    }
    /**
     * {@snippet :
     * struct _GtkWindow* gtk_application_get_window_by_id(struct _GtkApplication* application, unsigned int id);
     * }
     */
    public static MemorySegment gtk_application_get_window_by_id(MemorySegment application, int id) {
        var mh$ = gtk_application_get_window_by_id$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application, id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_get_active_window$MH() {
        return RuntimeHelper.requireNonNull(constants$2170.const$1,"gtk_application_get_active_window");
    }
    /**
     * {@snippet :
     * struct _GtkWindow* gtk_application_get_active_window(struct _GtkApplication* application);
     * }
     */
    public static MemorySegment gtk_application_get_active_window(MemorySegment application) {
        var mh$ = gtk_application_get_active_window$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_list_action_descriptions$MH() {
        return RuntimeHelper.requireNonNull(constants$2170.const$2,"gtk_application_list_action_descriptions");
    }
    /**
     * {@snippet :
     * char** gtk_application_list_action_descriptions(struct _GtkApplication* application);
     * }
     */
    public static MemorySegment gtk_application_list_action_descriptions(MemorySegment application) {
        var mh$ = gtk_application_list_action_descriptions$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_get_accels_for_action$MH() {
        return RuntimeHelper.requireNonNull(constants$2170.const$3,"gtk_application_get_accels_for_action");
    }
    /**
     * {@snippet :
     * char** gtk_application_get_accels_for_action(struct _GtkApplication* application, char* detailed_action_name);
     * }
     */
    public static MemorySegment gtk_application_get_accels_for_action(MemorySegment application, MemorySegment detailed_action_name) {
        var mh$ = gtk_application_get_accels_for_action$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application, detailed_action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_get_actions_for_accel$MH() {
        return RuntimeHelper.requireNonNull(constants$2170.const$4,"gtk_application_get_actions_for_accel");
    }
    /**
     * {@snippet :
     * char** gtk_application_get_actions_for_accel(struct _GtkApplication* application, char* accel);
     * }
     */
    public static MemorySegment gtk_application_get_actions_for_accel(MemorySegment application, MemorySegment accel) {
        var mh$ = gtk_application_get_actions_for_accel$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application, accel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_set_accels_for_action$MH() {
        return RuntimeHelper.requireNonNull(constants$2170.const$5,"gtk_application_set_accels_for_action");
    }
    /**
     * {@snippet :
     * void gtk_application_set_accels_for_action(struct _GtkApplication* application, char* detailed_action_name, char** accels);
     * }
     */
    public static void gtk_application_set_accels_for_action(MemorySegment application, MemorySegment detailed_action_name, MemorySegment accels) {
        var mh$ = gtk_application_set_accels_for_action$MH();
        try {
            mh$.invokeExact(application, detailed_action_name, accels);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_prefers_app_menu$MH() {
        return RuntimeHelper.requireNonNull(constants$2171.const$0,"gtk_application_prefers_app_menu");
    }
    /**
     * {@snippet :
     * int gtk_application_prefers_app_menu(struct _GtkApplication* application);
     * }
     */
    public static int gtk_application_prefers_app_menu(MemorySegment application) {
        var mh$ = gtk_application_prefers_app_menu$MH();
        try {
            return (int)mh$.invokeExact(application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_application_get_menu_by_id$MH() {
        return RuntimeHelper.requireNonNull(constants$2171.const$1,"gtk_application_get_menu_by_id");
    }
    /**
     * {@snippet :
     * struct _GMenu* gtk_application_get_menu_by_id(struct _GtkApplication* application, char* id);
     * }
     */
    public static MemorySegment gtk_application_get_menu_by_id(MemorySegment application, MemorySegment id) {
        var mh$ = gtk_application_get_menu_by_id$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(application, id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkApplication* GtkApplication_autoptr;
     * }
     */
    public static final AddressLayout GtkApplication_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GtkApplication_listautoptr;
     * }
     */
    public static final AddressLayout GtkApplication_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkApplication_slistautoptr;
     * }
     */
    public static final AddressLayout GtkApplication_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkApplication_queueautoptr;
     * }
     */
    public static final AddressLayout GtkApplication_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum GtkResizeMode.GTK_RESIZE_PARENT = 0;
     * }
     */
    public static int GTK_RESIZE_PARENT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkResizeMode.GTK_RESIZE_QUEUE = 1;
     * }
     */
    public static int GTK_RESIZE_QUEUE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkResizeMode.GTK_RESIZE_IMMEDIATE = 2;
     * }
     */
    public static int GTK_RESIZE_IMMEDIATE() {
        return (int)2L;
    }
    public static MethodHandle gtk_container_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2177.const$5,"gtk_container_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_container_get_type();
     * }
     */
    public static long gtk_container_get_type() {
        var mh$ = gtk_container_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_set_border_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2178.const$0,"gtk_container_set_border_width");
    }
    /**
     * {@snippet :
     * void gtk_container_set_border_width(struct _GtkContainer* container, unsigned int border_width);
     * }
     */
    public static void gtk_container_set_border_width(MemorySegment container, int border_width) {
        var mh$ = gtk_container_set_border_width$MH();
        try {
            mh$.invokeExact(container, border_width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_get_border_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2178.const$1,"gtk_container_get_border_width");
    }
    /**
     * {@snippet :
     * unsigned int gtk_container_get_border_width(struct _GtkContainer* container);
     * }
     */
    public static int gtk_container_get_border_width(MemorySegment container) {
        var mh$ = gtk_container_get_border_width$MH();
        try {
            return (int)mh$.invokeExact(container);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_add$MH() {
        return RuntimeHelper.requireNonNull(constants$2178.const$2,"gtk_container_add");
    }
    /**
     * {@snippet :
     * void gtk_container_add(struct _GtkContainer* container, struct _GtkWidget* widget);
     * }
     */
    public static void gtk_container_add(MemorySegment container, MemorySegment widget) {
        var mh$ = gtk_container_add$MH();
        try {
            mh$.invokeExact(container, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$2178.const$3,"gtk_container_remove");
    }
    /**
     * {@snippet :
     * void gtk_container_remove(struct _GtkContainer* container, struct _GtkWidget* widget);
     * }
     */
    public static void gtk_container_remove(MemorySegment container, MemorySegment widget) {
        var mh$ = gtk_container_remove$MH();
        try {
            mh$.invokeExact(container, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_set_resize_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2178.const$4,"gtk_container_set_resize_mode");
    }
    /**
     * {@snippet :
     * void gtk_container_set_resize_mode(struct _GtkContainer* container, enum GtkResizeMode resize_mode);
     * }
     */
    public static void gtk_container_set_resize_mode(MemorySegment container, int resize_mode) {
        var mh$ = gtk_container_set_resize_mode$MH();
        try {
            mh$.invokeExact(container, resize_mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_get_resize_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2178.const$5,"gtk_container_get_resize_mode");
    }
    /**
     * {@snippet :
     * enum GtkResizeMode gtk_container_get_resize_mode(struct _GtkContainer* container);
     * }
     */
    public static int gtk_container_get_resize_mode(MemorySegment container) {
        var mh$ = gtk_container_get_resize_mode$MH();
        try {
            return (int)mh$.invokeExact(container);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_check_resize$MH() {
        return RuntimeHelper.requireNonNull(constants$2179.const$0,"gtk_container_check_resize");
    }
    /**
     * {@snippet :
     * void gtk_container_check_resize(struct _GtkContainer* container);
     * }
     */
    public static void gtk_container_check_resize(MemorySegment container) {
        var mh$ = gtk_container_check_resize$MH();
        try {
            mh$.invokeExact(container);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$2179.const$2,"gtk_container_foreach");
    }
    /**
     * {@snippet :
     * void gtk_container_foreach(struct _GtkContainer* container, void (*callback)(struct _GtkWidget*,void*), void* callback_data);
     * }
     */
    public static void gtk_container_foreach(MemorySegment container, MemorySegment callback, MemorySegment callback_data) {
        var mh$ = gtk_container_foreach$MH();
        try {
            mh$.invokeExact(container, callback, callback_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_get_children$MH() {
        return RuntimeHelper.requireNonNull(constants$2179.const$3,"gtk_container_get_children");
    }
    /**
     * {@snippet :
     * struct _GList* gtk_container_get_children(struct _GtkContainer* container);
     * }
     */
    public static MemorySegment gtk_container_get_children(MemorySegment container) {
        var mh$ = gtk_container_get_children$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(container);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_propagate_draw$MH() {
        return RuntimeHelper.requireNonNull(constants$2179.const$4,"gtk_container_propagate_draw");
    }
    /**
     * {@snippet :
     * void gtk_container_propagate_draw(struct _GtkContainer* container, struct _GtkWidget* child, struct _cairo* cr);
     * }
     */
    public static void gtk_container_propagate_draw(MemorySegment container, MemorySegment child, MemorySegment cr) {
        var mh$ = gtk_container_propagate_draw$MH();
        try {
            mh$.invokeExact(container, child, cr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_set_focus_chain$MH() {
        return RuntimeHelper.requireNonNull(constants$2179.const$5,"gtk_container_set_focus_chain");
    }
    /**
     * {@snippet :
     * void gtk_container_set_focus_chain(struct _GtkContainer* container, struct _GList* focusable_widgets);
     * }
     */
    public static void gtk_container_set_focus_chain(MemorySegment container, MemorySegment focusable_widgets) {
        var mh$ = gtk_container_set_focus_chain$MH();
        try {
            mh$.invokeExact(container, focusable_widgets);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_get_focus_chain$MH() {
        return RuntimeHelper.requireNonNull(constants$2180.const$0,"gtk_container_get_focus_chain");
    }
    /**
     * {@snippet :
     * int gtk_container_get_focus_chain(struct _GtkContainer* container, struct _GList** focusable_widgets);
     * }
     */
    public static int gtk_container_get_focus_chain(MemorySegment container, MemorySegment focusable_widgets) {
        var mh$ = gtk_container_get_focus_chain$MH();
        try {
            return (int)mh$.invokeExact(container, focusable_widgets);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_unset_focus_chain$MH() {
        return RuntimeHelper.requireNonNull(constants$2180.const$1,"gtk_container_unset_focus_chain");
    }
    /**
     * {@snippet :
     * void gtk_container_unset_focus_chain(struct _GtkContainer* container);
     * }
     */
    public static void gtk_container_unset_focus_chain(MemorySegment container) {
        var mh$ = gtk_container_unset_focus_chain$MH();
        try {
            mh$.invokeExact(container);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_set_reallocate_redraws$MH() {
        return RuntimeHelper.requireNonNull(constants$2180.const$2,"gtk_container_set_reallocate_redraws");
    }
    /**
     * {@snippet :
     * void gtk_container_set_reallocate_redraws(struct _GtkContainer* container, int needs_redraws);
     * }
     */
    public static void gtk_container_set_reallocate_redraws(MemorySegment container, int needs_redraws) {
        var mh$ = gtk_container_set_reallocate_redraws$MH();
        try {
            mh$.invokeExact(container, needs_redraws);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_set_focus_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2180.const$3,"gtk_container_set_focus_child");
    }
    /**
     * {@snippet :
     * void gtk_container_set_focus_child(struct _GtkContainer* container, struct _GtkWidget* child);
     * }
     */
    public static void gtk_container_set_focus_child(MemorySegment container, MemorySegment child) {
        var mh$ = gtk_container_set_focus_child$MH();
        try {
            mh$.invokeExact(container, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_get_focus_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2180.const$4,"gtk_container_get_focus_child");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_container_get_focus_child(struct _GtkContainer* container);
     * }
     */
    public static MemorySegment gtk_container_get_focus_child(MemorySegment container) {
        var mh$ = gtk_container_get_focus_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(container);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_set_focus_vadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2180.const$5,"gtk_container_set_focus_vadjustment");
    }
    /**
     * {@snippet :
     * void gtk_container_set_focus_vadjustment(struct _GtkContainer* container, struct _GtkAdjustment* adjustment);
     * }
     */
    public static void gtk_container_set_focus_vadjustment(MemorySegment container, MemorySegment adjustment) {
        var mh$ = gtk_container_set_focus_vadjustment$MH();
        try {
            mh$.invokeExact(container, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_get_focus_vadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2181.const$0,"gtk_container_get_focus_vadjustment");
    }
    /**
     * {@snippet :
     * struct _GtkAdjustment* gtk_container_get_focus_vadjustment(struct _GtkContainer* container);
     * }
     */
    public static MemorySegment gtk_container_get_focus_vadjustment(MemorySegment container) {
        var mh$ = gtk_container_get_focus_vadjustment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(container);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_set_focus_hadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2181.const$1,"gtk_container_set_focus_hadjustment");
    }
    /**
     * {@snippet :
     * void gtk_container_set_focus_hadjustment(struct _GtkContainer* container, struct _GtkAdjustment* adjustment);
     * }
     */
    public static void gtk_container_set_focus_hadjustment(MemorySegment container, MemorySegment adjustment) {
        var mh$ = gtk_container_set_focus_hadjustment$MH();
        try {
            mh$.invokeExact(container, adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_get_focus_hadjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$2181.const$2,"gtk_container_get_focus_hadjustment");
    }
    /**
     * {@snippet :
     * struct _GtkAdjustment* gtk_container_get_focus_hadjustment(struct _GtkContainer* container);
     * }
     */
    public static MemorySegment gtk_container_get_focus_hadjustment(MemorySegment container) {
        var mh$ = gtk_container_get_focus_hadjustment$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(container);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_resize_children$MH() {
        return RuntimeHelper.requireNonNull(constants$2181.const$3,"gtk_container_resize_children");
    }
    /**
     * {@snippet :
     * void gtk_container_resize_children(struct _GtkContainer* container);
     * }
     */
    public static void gtk_container_resize_children(MemorySegment container) {
        var mh$ = gtk_container_resize_children$MH();
        try {
            mh$.invokeExact(container);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_child_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2181.const$4,"gtk_container_child_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_container_child_type(struct _GtkContainer* container);
     * }
     */
    public static long gtk_container_child_type(MemorySegment container) {
        var mh$ = gtk_container_child_type$MH();
        try {
            return (long)mh$.invokeExact(container);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_class_install_child_property$MH() {
        return RuntimeHelper.requireNonNull(constants$2181.const$5,"gtk_container_class_install_child_property");
    }
    /**
     * {@snippet :
     * void gtk_container_class_install_child_property(struct _GtkContainerClass* cclass, unsigned int property_id, struct _GParamSpec* pspec);
     * }
     */
    public static void gtk_container_class_install_child_property(MemorySegment cclass, int property_id, MemorySegment pspec) {
        var mh$ = gtk_container_class_install_child_property$MH();
        try {
            mh$.invokeExact(cclass, property_id, pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_class_install_child_properties$MH() {
        return RuntimeHelper.requireNonNull(constants$2182.const$0,"gtk_container_class_install_child_properties");
    }
    /**
     * {@snippet :
     * void gtk_container_class_install_child_properties(struct _GtkContainerClass* cclass, unsigned int n_pspecs, struct _GParamSpec** pspecs);
     * }
     */
    public static void gtk_container_class_install_child_properties(MemorySegment cclass, int n_pspecs, MemorySegment pspecs) {
        var mh$ = gtk_container_class_install_child_properties$MH();
        try {
            mh$.invokeExact(cclass, n_pspecs, pspecs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_class_find_child_property$MH() {
        return RuntimeHelper.requireNonNull(constants$2182.const$1,"gtk_container_class_find_child_property");
    }
    /**
     * {@snippet :
     * struct _GParamSpec* gtk_container_class_find_child_property(struct _GObjectClass* cclass, char* property_name);
     * }
     */
    public static MemorySegment gtk_container_class_find_child_property(MemorySegment cclass, MemorySegment property_name) {
        var mh$ = gtk_container_class_find_child_property$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cclass, property_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_class_list_child_properties$MH() {
        return RuntimeHelper.requireNonNull(constants$2182.const$2,"gtk_container_class_list_child_properties");
    }
    /**
     * {@snippet :
     * struct _GParamSpec** gtk_container_class_list_child_properties(struct _GObjectClass* cclass, unsigned int* n_properties);
     * }
     */
    public static MemorySegment gtk_container_class_list_child_properties(MemorySegment cclass, MemorySegment n_properties) {
        var mh$ = gtk_container_class_list_child_properties$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cclass, n_properties);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_add_with_properties$MH() {
        return RuntimeHelper.requireNonNull(constants$2182.const$3,"gtk_container_add_with_properties");
    }
    /**
     * {@snippet :
     * void gtk_container_add_with_properties(struct _GtkContainer* container, struct _GtkWidget* widget, char* first_prop_name,...);
     * }
     */
    public static void gtk_container_add_with_properties(MemorySegment container, MemorySegment widget, MemorySegment first_prop_name, Object... x3) {
        var mh$ = gtk_container_add_with_properties$MH();
        try {
            mh$.invokeExact(container, widget, first_prop_name, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_child_set$MH() {
        return RuntimeHelper.requireNonNull(constants$2182.const$4,"gtk_container_child_set");
    }
    /**
     * {@snippet :
     * void gtk_container_child_set(struct _GtkContainer* container, struct _GtkWidget* child, char* first_prop_name,...);
     * }
     */
    public static void gtk_container_child_set(MemorySegment container, MemorySegment child, MemorySegment first_prop_name, Object... x3) {
        var mh$ = gtk_container_child_set$MH();
        try {
            mh$.invokeExact(container, child, first_prop_name, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_child_get$MH() {
        return RuntimeHelper.requireNonNull(constants$2182.const$5,"gtk_container_child_get");
    }
    /**
     * {@snippet :
     * void gtk_container_child_get(struct _GtkContainer* container, struct _GtkWidget* child, char* first_prop_name,...);
     * }
     */
    public static void gtk_container_child_get(MemorySegment container, MemorySegment child, MemorySegment first_prop_name, Object... x3) {
        var mh$ = gtk_container_child_get$MH();
        try {
            mh$.invokeExact(container, child, first_prop_name, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_child_set_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$2183.const$1,"gtk_container_child_set_valist");
    }
    /**
     * {@snippet :
     * void gtk_container_child_set_valist(struct _GtkContainer* container, struct _GtkWidget* child, char* first_property_name, struct __va_list var_args);
     * }
     */
    public static void gtk_container_child_set_valist(MemorySegment container, MemorySegment child, MemorySegment first_property_name, MemorySegment var_args) {
        var mh$ = gtk_container_child_set_valist$MH();
        try {
            mh$.invokeExact(container, child, first_property_name, var_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_child_get_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$2183.const$2,"gtk_container_child_get_valist");
    }
    /**
     * {@snippet :
     * void gtk_container_child_get_valist(struct _GtkContainer* container, struct _GtkWidget* child, char* first_property_name, struct __va_list var_args);
     * }
     */
    public static void gtk_container_child_get_valist(MemorySegment container, MemorySegment child, MemorySegment first_property_name, MemorySegment var_args) {
        var mh$ = gtk_container_child_get_valist$MH();
        try {
            mh$.invokeExact(container, child, first_property_name, var_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_child_set_property$MH() {
        return RuntimeHelper.requireNonNull(constants$2183.const$3,"gtk_container_child_set_property");
    }
    /**
     * {@snippet :
     * void gtk_container_child_set_property(struct _GtkContainer* container, struct _GtkWidget* child, char* property_name, struct _GValue* value);
     * }
     */
    public static void gtk_container_child_set_property(MemorySegment container, MemorySegment child, MemorySegment property_name, MemorySegment value) {
        var mh$ = gtk_container_child_set_property$MH();
        try {
            mh$.invokeExact(container, child, property_name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_child_get_property$MH() {
        return RuntimeHelper.requireNonNull(constants$2183.const$4,"gtk_container_child_get_property");
    }
    /**
     * {@snippet :
     * void gtk_container_child_get_property(struct _GtkContainer* container, struct _GtkWidget* child, char* property_name, struct _GValue* value);
     * }
     */
    public static void gtk_container_child_get_property(MemorySegment container, MemorySegment child, MemorySegment property_name, MemorySegment value) {
        var mh$ = gtk_container_child_get_property$MH();
        try {
            mh$.invokeExact(container, child, property_name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_child_notify$MH() {
        return RuntimeHelper.requireNonNull(constants$2183.const$5,"gtk_container_child_notify");
    }
    /**
     * {@snippet :
     * void gtk_container_child_notify(struct _GtkContainer* container, struct _GtkWidget* child, char* child_property);
     * }
     */
    public static void gtk_container_child_notify(MemorySegment container, MemorySegment child, MemorySegment child_property) {
        var mh$ = gtk_container_child_notify$MH();
        try {
            mh$.invokeExact(container, child, child_property);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_child_notify_by_pspec$MH() {
        return RuntimeHelper.requireNonNull(constants$2184.const$0,"gtk_container_child_notify_by_pspec");
    }
    /**
     * {@snippet :
     * void gtk_container_child_notify_by_pspec(struct _GtkContainer* container, struct _GtkWidget* child, struct _GParamSpec* pspec);
     * }
     */
    public static void gtk_container_child_notify_by_pspec(MemorySegment container, MemorySegment child, MemorySegment pspec) {
        var mh$ = gtk_container_child_notify_by_pspec$MH();
        try {
            mh$.invokeExact(container, child, pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_forall$MH() {
        return RuntimeHelper.requireNonNull(constants$2184.const$2,"gtk_container_forall");
    }
    /**
     * {@snippet :
     * void gtk_container_forall(struct _GtkContainer* container, void (*callback)(struct _GtkWidget*,void*), void* callback_data);
     * }
     */
    public static void gtk_container_forall(MemorySegment container, MemorySegment callback, MemorySegment callback_data) {
        var mh$ = gtk_container_forall$MH();
        try {
            mh$.invokeExact(container, callback, callback_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_class_handle_border_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2184.const$3,"gtk_container_class_handle_border_width");
    }
    /**
     * {@snippet :
     * void gtk_container_class_handle_border_width(struct _GtkContainerClass* klass);
     * }
     */
    public static void gtk_container_class_handle_border_width(MemorySegment klass) {
        var mh$ = gtk_container_class_handle_border_width$MH();
        try {
            mh$.invokeExact(klass);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_container_get_path_for_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2184.const$4,"gtk_container_get_path_for_child");
    }
    /**
     * {@snippet :
     * struct _GtkWidgetPath* gtk_container_get_path_for_child(struct _GtkContainer* container, struct _GtkWidget* child);
     * }
     */
    public static MemorySegment gtk_container_get_path_for_child(MemorySegment container, MemorySegment child) {
        var mh$ = gtk_container_get_path_for_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(container, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkContainer* GtkContainer_autoptr;
     * }
     */
    public static final AddressLayout GtkContainer_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GtkContainer_listautoptr;
     * }
     */
    public static final AddressLayout GtkContainer_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkContainer_slistautoptr;
     * }
     */
    public static final AddressLayout GtkContainer_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkContainer_queueautoptr;
     * }
     */
    public static final AddressLayout GtkContainer_queueautoptr = RuntimeHelper.POINTER;
    public static MethodHandle gtk_bin_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2186.const$4,"gtk_bin_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_bin_get_type();
     * }
     */
    public static long gtk_bin_get_type() {
        var mh$ = gtk_bin_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_bin_get_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2186.const$5,"gtk_bin_get_child");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_bin_get_child(struct _GtkBin* bin);
     * }
     */
    public static MemorySegment gtk_bin_get_child(MemorySegment bin) {
        var mh$ = gtk_bin_get_child$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(bin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gtk_bin_set_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2187.const$0,"_gtk_bin_set_child");
    }
    /**
     * {@snippet :
     * void _gtk_bin_set_child(struct _GtkBin* bin, struct _GtkWidget* widget);
     * }
     */
    public static void _gtk_bin_set_child(MemorySegment bin, MemorySegment widget) {
        var mh$ = _gtk_bin_set_child$MH();
        try {
            mh$.invokeExact(bin, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkBin* GtkBin_autoptr;
     * }
     */
    public static final AddressLayout GtkBin_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GtkBin_listautoptr;
     * }
     */
    public static final AddressLayout GtkBin_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkBin_slistautoptr;
     * }
     */
    public static final AddressLayout GtkBin_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkBin_queueautoptr;
     * }
     */
    public static final AddressLayout GtkBin_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum GtkWindowType.GTK_WINDOW_TOPLEVEL = 0;
     * }
     */
    public static int GTK_WINDOW_TOPLEVEL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkWindowType.GTK_WINDOW_POPUP = 1;
     * }
     */
    public static int GTK_WINDOW_POPUP() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkWindowPosition.GTK_WIN_POS_NONE = 0;
     * }
     */
    public static int GTK_WIN_POS_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkWindowPosition.GTK_WIN_POS_CENTER = 1;
     * }
     */
    public static int GTK_WIN_POS_CENTER() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkWindowPosition.GTK_WIN_POS_MOUSE = 2;
     * }
     */
    public static int GTK_WIN_POS_MOUSE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkWindowPosition.GTK_WIN_POS_CENTER_ALWAYS = 3;
     * }
     */
    public static int GTK_WIN_POS_CENTER_ALWAYS() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkWindowPosition.GTK_WIN_POS_CENTER_ON_PARENT = 4;
     * }
     */
    public static int GTK_WIN_POS_CENTER_ON_PARENT() {
        return (int)4L;
    }
    public static MethodHandle gtk_window_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2190.const$2,"gtk_window_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_window_get_type();
     * }
     */
    public static long gtk_window_get_type() {
        var mh$ = gtk_window_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2190.const$3,"gtk_window_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_window_new(enum GtkWindowType type);
     * }
     */
    public static MemorySegment gtk_window_new(int type) {
        var mh$ = gtk_window_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_title$MH() {
        return RuntimeHelper.requireNonNull(constants$2190.const$4,"gtk_window_set_title");
    }
    /**
     * {@snippet :
     * void gtk_window_set_title(struct _GtkWindow* window, char* title);
     * }
     */
    public static void gtk_window_set_title(MemorySegment window, MemorySegment title) {
        var mh$ = gtk_window_set_title$MH();
        try {
            mh$.invokeExact(window, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_title$MH() {
        return RuntimeHelper.requireNonNull(constants$2190.const$5,"gtk_window_get_title");
    }
    /**
     * {@snippet :
     * char* gtk_window_get_title(struct _GtkWindow* window);
     * }
     */
    public static MemorySegment gtk_window_get_title(MemorySegment window) {
        var mh$ = gtk_window_get_title$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_wmclass$MH() {
        return RuntimeHelper.requireNonNull(constants$2191.const$0,"gtk_window_set_wmclass");
    }
    /**
     * {@snippet :
     * void gtk_window_set_wmclass(struct _GtkWindow* window, char* wmclass_name, char* wmclass_class);
     * }
     */
    public static void gtk_window_set_wmclass(MemorySegment window, MemorySegment wmclass_name, MemorySegment wmclass_class) {
        var mh$ = gtk_window_set_wmclass$MH();
        try {
            mh$.invokeExact(window, wmclass_name, wmclass_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_role$MH() {
        return RuntimeHelper.requireNonNull(constants$2191.const$1,"gtk_window_set_role");
    }
    /**
     * {@snippet :
     * void gtk_window_set_role(struct _GtkWindow* window, char* role);
     * }
     */
    public static void gtk_window_set_role(MemorySegment window, MemorySegment role) {
        var mh$ = gtk_window_set_role$MH();
        try {
            mh$.invokeExact(window, role);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_startup_id$MH() {
        return RuntimeHelper.requireNonNull(constants$2191.const$2,"gtk_window_set_startup_id");
    }
    /**
     * {@snippet :
     * void gtk_window_set_startup_id(struct _GtkWindow* window, char* startup_id);
     * }
     */
    public static void gtk_window_set_startup_id(MemorySegment window, MemorySegment startup_id) {
        var mh$ = gtk_window_set_startup_id$MH();
        try {
            mh$.invokeExact(window, startup_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_role$MH() {
        return RuntimeHelper.requireNonNull(constants$2191.const$3,"gtk_window_get_role");
    }
    /**
     * {@snippet :
     * char* gtk_window_get_role(struct _GtkWindow* window);
     * }
     */
    public static MemorySegment gtk_window_get_role(MemorySegment window) {
        var mh$ = gtk_window_get_role$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_add_accel_group$MH() {
        return RuntimeHelper.requireNonNull(constants$2191.const$4,"gtk_window_add_accel_group");
    }
    /**
     * {@snippet :
     * void gtk_window_add_accel_group(struct _GtkWindow* window, struct _GtkAccelGroup* accel_group);
     * }
     */
    public static void gtk_window_add_accel_group(MemorySegment window, MemorySegment accel_group) {
        var mh$ = gtk_window_add_accel_group$MH();
        try {
            mh$.invokeExact(window, accel_group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_remove_accel_group$MH() {
        return RuntimeHelper.requireNonNull(constants$2191.const$5,"gtk_window_remove_accel_group");
    }
    /**
     * {@snippet :
     * void gtk_window_remove_accel_group(struct _GtkWindow* window, struct _GtkAccelGroup* accel_group);
     * }
     */
    public static void gtk_window_remove_accel_group(MemorySegment window, MemorySegment accel_group) {
        var mh$ = gtk_window_remove_accel_group$MH();
        try {
            mh$.invokeExact(window, accel_group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2192.const$0,"gtk_window_set_position");
    }
    /**
     * {@snippet :
     * void gtk_window_set_position(struct _GtkWindow* window, enum GtkWindowPosition position);
     * }
     */
    public static void gtk_window_set_position(MemorySegment window, int position) {
        var mh$ = gtk_window_set_position$MH();
        try {
            mh$.invokeExact(window, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_activate_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$2192.const$1,"gtk_window_activate_focus");
    }
    /**
     * {@snippet :
     * int gtk_window_activate_focus(struct _GtkWindow* window);
     * }
     */
    public static int gtk_window_activate_focus(MemorySegment window) {
        var mh$ = gtk_window_activate_focus$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$2192.const$2,"gtk_window_set_focus");
    }
    /**
     * {@snippet :
     * void gtk_window_set_focus(struct _GtkWindow* window, struct _GtkWidget* focus);
     * }
     */
    public static void gtk_window_set_focus(MemorySegment window, MemorySegment focus) {
        var mh$ = gtk_window_set_focus$MH();
        try {
            mh$.invokeExact(window, focus);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$2192.const$3,"gtk_window_get_focus");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_window_get_focus(struct _GtkWindow* window);
     * }
     */
    public static MemorySegment gtk_window_get_focus(MemorySegment window) {
        var mh$ = gtk_window_get_focus$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_default$MH() {
        return RuntimeHelper.requireNonNull(constants$2192.const$4,"gtk_window_set_default");
    }
    /**
     * {@snippet :
     * void gtk_window_set_default(struct _GtkWindow* window, struct _GtkWidget* default_widget);
     * }
     */
    public static void gtk_window_set_default(MemorySegment window, MemorySegment default_widget) {
        var mh$ = gtk_window_set_default$MH();
        try {
            mh$.invokeExact(window, default_widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_default_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2192.const$5,"gtk_window_get_default_widget");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_window_get_default_widget(struct _GtkWindow* window);
     * }
     */
    public static MemorySegment gtk_window_get_default_widget(MemorySegment window) {
        var mh$ = gtk_window_get_default_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_activate_default$MH() {
        return RuntimeHelper.requireNonNull(constants$2193.const$0,"gtk_window_activate_default");
    }
    /**
     * {@snippet :
     * int gtk_window_activate_default(struct _GtkWindow* window);
     * }
     */
    public static int gtk_window_activate_default(MemorySegment window) {
        var mh$ = gtk_window_activate_default$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_transient_for$MH() {
        return RuntimeHelper.requireNonNull(constants$2193.const$1,"gtk_window_set_transient_for");
    }
    /**
     * {@snippet :
     * void gtk_window_set_transient_for(struct _GtkWindow* window, struct _GtkWindow* parent);
     * }
     */
    public static void gtk_window_set_transient_for(MemorySegment window, MemorySegment parent) {
        var mh$ = gtk_window_set_transient_for$MH();
        try {
            mh$.invokeExact(window, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_transient_for$MH() {
        return RuntimeHelper.requireNonNull(constants$2193.const$2,"gtk_window_get_transient_for");
    }
    /**
     * {@snippet :
     * struct _GtkWindow* gtk_window_get_transient_for(struct _GtkWindow* window);
     * }
     */
    public static MemorySegment gtk_window_get_transient_for(MemorySegment window) {
        var mh$ = gtk_window_get_transient_for$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_attached_to$MH() {
        return RuntimeHelper.requireNonNull(constants$2193.const$3,"gtk_window_set_attached_to");
    }
    /**
     * {@snippet :
     * void gtk_window_set_attached_to(struct _GtkWindow* window, struct _GtkWidget* attach_widget);
     * }
     */
    public static void gtk_window_set_attached_to(MemorySegment window, MemorySegment attach_widget) {
        var mh$ = gtk_window_set_attached_to$MH();
        try {
            mh$.invokeExact(window, attach_widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_attached_to$MH() {
        return RuntimeHelper.requireNonNull(constants$2193.const$4,"gtk_window_get_attached_to");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_window_get_attached_to(struct _GtkWindow* window);
     * }
     */
    public static MemorySegment gtk_window_get_attached_to(MemorySegment window) {
        var mh$ = gtk_window_get_attached_to$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_opacity$MH() {
        return RuntimeHelper.requireNonNull(constants$2193.const$5,"gtk_window_set_opacity");
    }
    /**
     * {@snippet :
     * void gtk_window_set_opacity(struct _GtkWindow* window, double opacity);
     * }
     */
    public static void gtk_window_set_opacity(MemorySegment window, double opacity) {
        var mh$ = gtk_window_set_opacity$MH();
        try {
            mh$.invokeExact(window, opacity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_opacity$MH() {
        return RuntimeHelper.requireNonNull(constants$2194.const$0,"gtk_window_get_opacity");
    }
    /**
     * {@snippet :
     * double gtk_window_get_opacity(struct _GtkWindow* window);
     * }
     */
    public static double gtk_window_get_opacity(MemorySegment window) {
        var mh$ = gtk_window_get_opacity$MH();
        try {
            return (double)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_type_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$2194.const$1,"gtk_window_set_type_hint");
    }
    /**
     * {@snippet :
     * void gtk_window_set_type_hint(struct _GtkWindow* window, enum GdkWindowTypeHint hint);
     * }
     */
    public static void gtk_window_set_type_hint(MemorySegment window, int hint) {
        var mh$ = gtk_window_set_type_hint$MH();
        try {
            mh$.invokeExact(window, hint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_type_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$2194.const$2,"gtk_window_get_type_hint");
    }
    /**
     * {@snippet :
     * enum GdkWindowTypeHint gtk_window_get_type_hint(struct _GtkWindow* window);
     * }
     */
    public static int gtk_window_get_type_hint(MemorySegment window) {
        var mh$ = gtk_window_get_type_hint$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_skip_taskbar_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$2194.const$3,"gtk_window_set_skip_taskbar_hint");
    }
    /**
     * {@snippet :
     * void gtk_window_set_skip_taskbar_hint(struct _GtkWindow* window, int setting);
     * }
     */
    public static void gtk_window_set_skip_taskbar_hint(MemorySegment window, int setting) {
        var mh$ = gtk_window_set_skip_taskbar_hint$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_skip_taskbar_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$2194.const$4,"gtk_window_get_skip_taskbar_hint");
    }
    /**
     * {@snippet :
     * int gtk_window_get_skip_taskbar_hint(struct _GtkWindow* window);
     * }
     */
    public static int gtk_window_get_skip_taskbar_hint(MemorySegment window) {
        var mh$ = gtk_window_get_skip_taskbar_hint$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_skip_pager_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$2194.const$5,"gtk_window_set_skip_pager_hint");
    }
    /**
     * {@snippet :
     * void gtk_window_set_skip_pager_hint(struct _GtkWindow* window, int setting);
     * }
     */
    public static void gtk_window_set_skip_pager_hint(MemorySegment window, int setting) {
        var mh$ = gtk_window_set_skip_pager_hint$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_skip_pager_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$2195.const$0,"gtk_window_get_skip_pager_hint");
    }
    /**
     * {@snippet :
     * int gtk_window_get_skip_pager_hint(struct _GtkWindow* window);
     * }
     */
    public static int gtk_window_get_skip_pager_hint(MemorySegment window) {
        var mh$ = gtk_window_get_skip_pager_hint$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_urgency_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$2195.const$1,"gtk_window_set_urgency_hint");
    }
    /**
     * {@snippet :
     * void gtk_window_set_urgency_hint(struct _GtkWindow* window, int setting);
     * }
     */
    public static void gtk_window_set_urgency_hint(MemorySegment window, int setting) {
        var mh$ = gtk_window_set_urgency_hint$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_urgency_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$2195.const$2,"gtk_window_get_urgency_hint");
    }
    /**
     * {@snippet :
     * int gtk_window_get_urgency_hint(struct _GtkWindow* window);
     * }
     */
    public static int gtk_window_get_urgency_hint(MemorySegment window) {
        var mh$ = gtk_window_get_urgency_hint$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_accept_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$2195.const$3,"gtk_window_set_accept_focus");
    }
    /**
     * {@snippet :
     * void gtk_window_set_accept_focus(struct _GtkWindow* window, int setting);
     * }
     */
    public static void gtk_window_set_accept_focus(MemorySegment window, int setting) {
        var mh$ = gtk_window_set_accept_focus$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_accept_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$2195.const$4,"gtk_window_get_accept_focus");
    }
    /**
     * {@snippet :
     * int gtk_window_get_accept_focus(struct _GtkWindow* window);
     * }
     */
    public static int gtk_window_get_accept_focus(MemorySegment window) {
        var mh$ = gtk_window_get_accept_focus$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_focus_on_map$MH() {
        return RuntimeHelper.requireNonNull(constants$2195.const$5,"gtk_window_set_focus_on_map");
    }
    /**
     * {@snippet :
     * void gtk_window_set_focus_on_map(struct _GtkWindow* window, int setting);
     * }
     */
    public static void gtk_window_set_focus_on_map(MemorySegment window, int setting) {
        var mh$ = gtk_window_set_focus_on_map$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_focus_on_map$MH() {
        return RuntimeHelper.requireNonNull(constants$2196.const$0,"gtk_window_get_focus_on_map");
    }
    /**
     * {@snippet :
     * int gtk_window_get_focus_on_map(struct _GtkWindow* window);
     * }
     */
    public static int gtk_window_get_focus_on_map(MemorySegment window) {
        var mh$ = gtk_window_get_focus_on_map$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_destroy_with_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$2196.const$1,"gtk_window_set_destroy_with_parent");
    }
    /**
     * {@snippet :
     * void gtk_window_set_destroy_with_parent(struct _GtkWindow* window, int setting);
     * }
     */
    public static void gtk_window_set_destroy_with_parent(MemorySegment window, int setting) {
        var mh$ = gtk_window_set_destroy_with_parent$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_destroy_with_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$2196.const$2,"gtk_window_get_destroy_with_parent");
    }
    /**
     * {@snippet :
     * int gtk_window_get_destroy_with_parent(struct _GtkWindow* window);
     * }
     */
    public static int gtk_window_get_destroy_with_parent(MemorySegment window) {
        var mh$ = gtk_window_get_destroy_with_parent$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_hide_titlebar_when_maximized$MH() {
        return RuntimeHelper.requireNonNull(constants$2196.const$3,"gtk_window_set_hide_titlebar_when_maximized");
    }
    /**
     * {@snippet :
     * void gtk_window_set_hide_titlebar_when_maximized(struct _GtkWindow* window, int setting);
     * }
     */
    public static void gtk_window_set_hide_titlebar_when_maximized(MemorySegment window, int setting) {
        var mh$ = gtk_window_set_hide_titlebar_when_maximized$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_hide_titlebar_when_maximized$MH() {
        return RuntimeHelper.requireNonNull(constants$2196.const$4,"gtk_window_get_hide_titlebar_when_maximized");
    }
    /**
     * {@snippet :
     * int gtk_window_get_hide_titlebar_when_maximized(struct _GtkWindow* window);
     * }
     */
    public static int gtk_window_get_hide_titlebar_when_maximized(MemorySegment window) {
        var mh$ = gtk_window_get_hide_titlebar_when_maximized$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_mnemonics_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$2196.const$5,"gtk_window_set_mnemonics_visible");
    }
    /**
     * {@snippet :
     * void gtk_window_set_mnemonics_visible(struct _GtkWindow* window, int setting);
     * }
     */
    public static void gtk_window_set_mnemonics_visible(MemorySegment window, int setting) {
        var mh$ = gtk_window_set_mnemonics_visible$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_mnemonics_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$2197.const$0,"gtk_window_get_mnemonics_visible");
    }
    /**
     * {@snippet :
     * int gtk_window_get_mnemonics_visible(struct _GtkWindow* window);
     * }
     */
    public static int gtk_window_get_mnemonics_visible(MemorySegment window) {
        var mh$ = gtk_window_get_mnemonics_visible$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_focus_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$2197.const$1,"gtk_window_set_focus_visible");
    }
    /**
     * {@snippet :
     * void gtk_window_set_focus_visible(struct _GtkWindow* window, int setting);
     * }
     */
    public static void gtk_window_set_focus_visible(MemorySegment window, int setting) {
        var mh$ = gtk_window_set_focus_visible$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_focus_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$2197.const$2,"gtk_window_get_focus_visible");
    }
    /**
     * {@snippet :
     * int gtk_window_get_focus_visible(struct _GtkWindow* window);
     * }
     */
    public static int gtk_window_get_focus_visible(MemorySegment window) {
        var mh$ = gtk_window_get_focus_visible$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_resizable$MH() {
        return RuntimeHelper.requireNonNull(constants$2197.const$3,"gtk_window_set_resizable");
    }
    /**
     * {@snippet :
     * void gtk_window_set_resizable(struct _GtkWindow* window, int resizable);
     * }
     */
    public static void gtk_window_set_resizable(MemorySegment window, int resizable) {
        var mh$ = gtk_window_set_resizable$MH();
        try {
            mh$.invokeExact(window, resizable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_resizable$MH() {
        return RuntimeHelper.requireNonNull(constants$2197.const$4,"gtk_window_get_resizable");
    }
    /**
     * {@snippet :
     * int gtk_window_get_resizable(struct _GtkWindow* window);
     * }
     */
    public static int gtk_window_get_resizable(MemorySegment window) {
        var mh$ = gtk_window_get_resizable$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_gravity$MH() {
        return RuntimeHelper.requireNonNull(constants$2197.const$5,"gtk_window_set_gravity");
    }
    /**
     * {@snippet :
     * void gtk_window_set_gravity(struct _GtkWindow* window, enum GdkGravity gravity);
     * }
     */
    public static void gtk_window_set_gravity(MemorySegment window, int gravity) {
        var mh$ = gtk_window_set_gravity$MH();
        try {
            mh$.invokeExact(window, gravity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_gravity$MH() {
        return RuntimeHelper.requireNonNull(constants$2198.const$0,"gtk_window_get_gravity");
    }
    /**
     * {@snippet :
     * enum GdkGravity gtk_window_get_gravity(struct _GtkWindow* window);
     * }
     */
    public static int gtk_window_get_gravity(MemorySegment window) {
        var mh$ = gtk_window_get_gravity$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_geometry_hints$MH() {
        return RuntimeHelper.requireNonNull(constants$2198.const$1,"gtk_window_set_geometry_hints");
    }
    /**
     * {@snippet :
     * void gtk_window_set_geometry_hints(struct _GtkWindow* window, struct _GtkWidget* geometry_widget, struct _GdkGeometry* geometry, enum GdkWindowHints geom_mask);
     * }
     */
    public static void gtk_window_set_geometry_hints(MemorySegment window, MemorySegment geometry_widget, MemorySegment geometry, int geom_mask) {
        var mh$ = gtk_window_set_geometry_hints$MH();
        try {
            mh$.invokeExact(window, geometry_widget, geometry, geom_mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$2198.const$2,"gtk_window_set_screen");
    }
    /**
     * {@snippet :
     * void gtk_window_set_screen(struct _GtkWindow* window, struct _GdkScreen* screen);
     * }
     */
    public static void gtk_window_set_screen(MemorySegment window, MemorySegment screen) {
        var mh$ = gtk_window_set_screen$MH();
        try {
            mh$.invokeExact(window, screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$2198.const$3,"gtk_window_get_screen");
    }
    /**
     * {@snippet :
     * struct _GdkScreen* gtk_window_get_screen(struct _GtkWindow* window);
     * }
     */
    public static MemorySegment gtk_window_get_screen(MemorySegment window) {
        var mh$ = gtk_window_get_screen$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_is_active$MH() {
        return RuntimeHelper.requireNonNull(constants$2198.const$4,"gtk_window_is_active");
    }
    /**
     * {@snippet :
     * int gtk_window_is_active(struct _GtkWindow* window);
     * }
     */
    public static int gtk_window_is_active(MemorySegment window) {
        var mh$ = gtk_window_is_active$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_has_toplevel_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$2198.const$5,"gtk_window_has_toplevel_focus");
    }
    /**
     * {@snippet :
     * int gtk_window_has_toplevel_focus(struct _GtkWindow* window);
     * }
     */
    public static int gtk_window_has_toplevel_focus(MemorySegment window) {
        var mh$ = gtk_window_has_toplevel_focus$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_decorated$MH() {
        return RuntimeHelper.requireNonNull(constants$2199.const$0,"gtk_window_set_decorated");
    }
    /**
     * {@snippet :
     * void gtk_window_set_decorated(struct _GtkWindow* window, int setting);
     * }
     */
    public static void gtk_window_set_decorated(MemorySegment window, int setting) {
        var mh$ = gtk_window_set_decorated$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_decorated$MH() {
        return RuntimeHelper.requireNonNull(constants$2199.const$1,"gtk_window_get_decorated");
    }
    /**
     * {@snippet :
     * int gtk_window_get_decorated(struct _GtkWindow* window);
     * }
     */
    public static int gtk_window_get_decorated(MemorySegment window) {
        var mh$ = gtk_window_get_decorated$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_deletable$MH() {
        return RuntimeHelper.requireNonNull(constants$2199.const$2,"gtk_window_set_deletable");
    }
    /**
     * {@snippet :
     * void gtk_window_set_deletable(struct _GtkWindow* window, int setting);
     * }
     */
    public static void gtk_window_set_deletable(MemorySegment window, int setting) {
        var mh$ = gtk_window_set_deletable$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_deletable$MH() {
        return RuntimeHelper.requireNonNull(constants$2199.const$3,"gtk_window_get_deletable");
    }
    /**
     * {@snippet :
     * int gtk_window_get_deletable(struct _GtkWindow* window);
     * }
     */
    public static int gtk_window_get_deletable(MemorySegment window) {
        var mh$ = gtk_window_get_deletable$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_icon_list$MH() {
        return RuntimeHelper.requireNonNull(constants$2199.const$4,"gtk_window_set_icon_list");
    }
    /**
     * {@snippet :
     * void gtk_window_set_icon_list(struct _GtkWindow* window, struct _GList* list);
     * }
     */
    public static void gtk_window_set_icon_list(MemorySegment window, MemorySegment list) {
        var mh$ = gtk_window_set_icon_list$MH();
        try {
            mh$.invokeExact(window, list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_icon_list$MH() {
        return RuntimeHelper.requireNonNull(constants$2199.const$5,"gtk_window_get_icon_list");
    }
    /**
     * {@snippet :
     * struct _GList* gtk_window_get_icon_list(struct _GtkWindow* window);
     * }
     */
    public static MemorySegment gtk_window_get_icon_list(MemorySegment window) {
        var mh$ = gtk_window_get_icon_list$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$2200.const$0,"gtk_window_set_icon");
    }
    /**
     * {@snippet :
     * void gtk_window_set_icon(struct _GtkWindow* window, struct _GdkPixbuf* icon);
     * }
     */
    public static void gtk_window_set_icon(MemorySegment window, MemorySegment icon) {
        var mh$ = gtk_window_set_icon$MH();
        try {
            mh$.invokeExact(window, icon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2200.const$1,"gtk_window_set_icon_name");
    }
    /**
     * {@snippet :
     * void gtk_window_set_icon_name(struct _GtkWindow* window, char* name);
     * }
     */
    public static void gtk_window_set_icon_name(MemorySegment window, MemorySegment name) {
        var mh$ = gtk_window_set_icon_name$MH();
        try {
            mh$.invokeExact(window, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_icon_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2200.const$2,"gtk_window_set_icon_from_file");
    }
    /**
     * {@snippet :
     * int gtk_window_set_icon_from_file(struct _GtkWindow* window, char* filename, struct _GError** err);
     * }
     */
    public static int gtk_window_set_icon_from_file(MemorySegment window, MemorySegment filename, MemorySegment err) {
        var mh$ = gtk_window_set_icon_from_file$MH();
        try {
            return (int)mh$.invokeExact(window, filename, err);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$2200.const$3,"gtk_window_get_icon");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gtk_window_get_icon(struct _GtkWindow* window);
     * }
     */
    public static MemorySegment gtk_window_get_icon(MemorySegment window) {
        var mh$ = gtk_window_get_icon$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2200.const$4,"gtk_window_get_icon_name");
    }
    /**
     * {@snippet :
     * char* gtk_window_get_icon_name(struct _GtkWindow* window);
     * }
     */
    public static MemorySegment gtk_window_get_icon_name(MemorySegment window) {
        var mh$ = gtk_window_get_icon_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_default_icon_list$MH() {
        return RuntimeHelper.requireNonNull(constants$2200.const$5,"gtk_window_set_default_icon_list");
    }
    /**
     * {@snippet :
     * void gtk_window_set_default_icon_list(struct _GList* list);
     * }
     */
    public static void gtk_window_set_default_icon_list(MemorySegment list) {
        var mh$ = gtk_window_set_default_icon_list$MH();
        try {
            mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_default_icon_list$MH() {
        return RuntimeHelper.requireNonNull(constants$2201.const$0,"gtk_window_get_default_icon_list");
    }
    /**
     * {@snippet :
     * struct _GList* gtk_window_get_default_icon_list();
     * }
     */
    public static MemorySegment gtk_window_get_default_icon_list() {
        var mh$ = gtk_window_get_default_icon_list$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_default_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$2201.const$1,"gtk_window_set_default_icon");
    }
    /**
     * {@snippet :
     * void gtk_window_set_default_icon(struct _GdkPixbuf* icon);
     * }
     */
    public static void gtk_window_set_default_icon(MemorySegment icon) {
        var mh$ = gtk_window_set_default_icon$MH();
        try {
            mh$.invokeExact(icon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_default_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2201.const$2,"gtk_window_set_default_icon_name");
    }
    /**
     * {@snippet :
     * void gtk_window_set_default_icon_name(char* name);
     * }
     */
    public static void gtk_window_set_default_icon_name(MemorySegment name) {
        var mh$ = gtk_window_set_default_icon_name$MH();
        try {
            mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_default_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2201.const$3,"gtk_window_get_default_icon_name");
    }
    /**
     * {@snippet :
     * char* gtk_window_get_default_icon_name();
     * }
     */
    public static MemorySegment gtk_window_get_default_icon_name() {
        var mh$ = gtk_window_get_default_icon_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_default_icon_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$2201.const$4,"gtk_window_set_default_icon_from_file");
    }
    /**
     * {@snippet :
     * int gtk_window_set_default_icon_from_file(char* filename, struct _GError** err);
     * }
     */
    public static int gtk_window_set_default_icon_from_file(MemorySegment filename, MemorySegment err) {
        var mh$ = gtk_window_set_default_icon_from_file$MH();
        try {
            return (int)mh$.invokeExact(filename, err);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_auto_startup_notification$MH() {
        return RuntimeHelper.requireNonNull(constants$2201.const$5,"gtk_window_set_auto_startup_notification");
    }
    /**
     * {@snippet :
     * void gtk_window_set_auto_startup_notification(int setting);
     * }
     */
    public static void gtk_window_set_auto_startup_notification(int setting) {
        var mh$ = gtk_window_set_auto_startup_notification$MH();
        try {
            mh$.invokeExact(setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_modal$MH() {
        return RuntimeHelper.requireNonNull(constants$2202.const$0,"gtk_window_set_modal");
    }
    /**
     * {@snippet :
     * void gtk_window_set_modal(struct _GtkWindow* window, int modal);
     * }
     */
    public static void gtk_window_set_modal(MemorySegment window, int modal) {
        var mh$ = gtk_window_set_modal$MH();
        try {
            mh$.invokeExact(window, modal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_modal$MH() {
        return RuntimeHelper.requireNonNull(constants$2202.const$1,"gtk_window_get_modal");
    }
    /**
     * {@snippet :
     * int gtk_window_get_modal(struct _GtkWindow* window);
     * }
     */
    public static int gtk_window_get_modal(MemorySegment window) {
        var mh$ = gtk_window_get_modal$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_list_toplevels$MH() {
        return RuntimeHelper.requireNonNull(constants$2202.const$2,"gtk_window_list_toplevels");
    }
    /**
     * {@snippet :
     * struct _GList* gtk_window_list_toplevels();
     * }
     */
    public static MemorySegment gtk_window_list_toplevels() {
        var mh$ = gtk_window_list_toplevels$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_has_user_ref_count$MH() {
        return RuntimeHelper.requireNonNull(constants$2202.const$3,"gtk_window_set_has_user_ref_count");
    }
    /**
     * {@snippet :
     * void gtk_window_set_has_user_ref_count(struct _GtkWindow* window, int setting);
     * }
     */
    public static void gtk_window_set_has_user_ref_count(MemorySegment window, int setting) {
        var mh$ = gtk_window_set_has_user_ref_count$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_add_mnemonic$MH() {
        return RuntimeHelper.requireNonNull(constants$2202.const$4,"gtk_window_add_mnemonic");
    }
    /**
     * {@snippet :
     * void gtk_window_add_mnemonic(struct _GtkWindow* window, unsigned int keyval, struct _GtkWidget* target);
     * }
     */
    public static void gtk_window_add_mnemonic(MemorySegment window, int keyval, MemorySegment target) {
        var mh$ = gtk_window_add_mnemonic$MH();
        try {
            mh$.invokeExact(window, keyval, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_remove_mnemonic$MH() {
        return RuntimeHelper.requireNonNull(constants$2202.const$5,"gtk_window_remove_mnemonic");
    }
    /**
     * {@snippet :
     * void gtk_window_remove_mnemonic(struct _GtkWindow* window, unsigned int keyval, struct _GtkWidget* target);
     * }
     */
    public static void gtk_window_remove_mnemonic(MemorySegment window, int keyval, MemorySegment target) {
        var mh$ = gtk_window_remove_mnemonic$MH();
        try {
            mh$.invokeExact(window, keyval, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_mnemonic_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$2203.const$0,"gtk_window_mnemonic_activate");
    }
    /**
     * {@snippet :
     * int gtk_window_mnemonic_activate(struct _GtkWindow* window, unsigned int keyval, enum GdkModifierType modifier);
     * }
     */
    public static int gtk_window_mnemonic_activate(MemorySegment window, int keyval, int modifier) {
        var mh$ = gtk_window_mnemonic_activate$MH();
        try {
            return (int)mh$.invokeExact(window, keyval, modifier);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_mnemonic_modifier$MH() {
        return RuntimeHelper.requireNonNull(constants$2203.const$1,"gtk_window_set_mnemonic_modifier");
    }
    /**
     * {@snippet :
     * void gtk_window_set_mnemonic_modifier(struct _GtkWindow* window, enum GdkModifierType modifier);
     * }
     */
    public static void gtk_window_set_mnemonic_modifier(MemorySegment window, int modifier) {
        var mh$ = gtk_window_set_mnemonic_modifier$MH();
        try {
            mh$.invokeExact(window, modifier);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_mnemonic_modifier$MH() {
        return RuntimeHelper.requireNonNull(constants$2203.const$2,"gtk_window_get_mnemonic_modifier");
    }
    /**
     * {@snippet :
     * enum GdkModifierType gtk_window_get_mnemonic_modifier(struct _GtkWindow* window);
     * }
     */
    public static int gtk_window_get_mnemonic_modifier(MemorySegment window) {
        var mh$ = gtk_window_get_mnemonic_modifier$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_activate_key$MH() {
        return RuntimeHelper.requireNonNull(constants$2203.const$3,"gtk_window_activate_key");
    }
    /**
     * {@snippet :
     * int gtk_window_activate_key(struct _GtkWindow* window, struct _GdkEventKey* event);
     * }
     */
    public static int gtk_window_activate_key(MemorySegment window, MemorySegment event) {
        var mh$ = gtk_window_activate_key$MH();
        try {
            return (int)mh$.invokeExact(window, event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_propagate_key_event$MH() {
        return RuntimeHelper.requireNonNull(constants$2203.const$4,"gtk_window_propagate_key_event");
    }
    /**
     * {@snippet :
     * int gtk_window_propagate_key_event(struct _GtkWindow* window, struct _GdkEventKey* event);
     * }
     */
    public static int gtk_window_propagate_key_event(MemorySegment window, MemorySegment event) {
        var mh$ = gtk_window_propagate_key_event$MH();
        try {
            return (int)mh$.invokeExact(window, event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_present$MH() {
        return RuntimeHelper.requireNonNull(constants$2203.const$5,"gtk_window_present");
    }
    /**
     * {@snippet :
     * void gtk_window_present(struct _GtkWindow* window);
     * }
     */
    public static void gtk_window_present(MemorySegment window) {
        var mh$ = gtk_window_present$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_present_with_time$MH() {
        return RuntimeHelper.requireNonNull(constants$2204.const$0,"gtk_window_present_with_time");
    }
    /**
     * {@snippet :
     * void gtk_window_present_with_time(struct _GtkWindow* window, unsigned int timestamp);
     * }
     */
    public static void gtk_window_present_with_time(MemorySegment window, int timestamp) {
        var mh$ = gtk_window_present_with_time$MH();
        try {
            mh$.invokeExact(window, timestamp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_iconify$MH() {
        return RuntimeHelper.requireNonNull(constants$2204.const$1,"gtk_window_iconify");
    }
    /**
     * {@snippet :
     * void gtk_window_iconify(struct _GtkWindow* window);
     * }
     */
    public static void gtk_window_iconify(MemorySegment window) {
        var mh$ = gtk_window_iconify$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_deiconify$MH() {
        return RuntimeHelper.requireNonNull(constants$2204.const$2,"gtk_window_deiconify");
    }
    /**
     * {@snippet :
     * void gtk_window_deiconify(struct _GtkWindow* window);
     * }
     */
    public static void gtk_window_deiconify(MemorySegment window) {
        var mh$ = gtk_window_deiconify$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_stick$MH() {
        return RuntimeHelper.requireNonNull(constants$2204.const$3,"gtk_window_stick");
    }
    /**
     * {@snippet :
     * void gtk_window_stick(struct _GtkWindow* window);
     * }
     */
    public static void gtk_window_stick(MemorySegment window) {
        var mh$ = gtk_window_stick$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_unstick$MH() {
        return RuntimeHelper.requireNonNull(constants$2204.const$4,"gtk_window_unstick");
    }
    /**
     * {@snippet :
     * void gtk_window_unstick(struct _GtkWindow* window);
     * }
     */
    public static void gtk_window_unstick(MemorySegment window) {
        var mh$ = gtk_window_unstick$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_maximize$MH() {
        return RuntimeHelper.requireNonNull(constants$2204.const$5,"gtk_window_maximize");
    }
    /**
     * {@snippet :
     * void gtk_window_maximize(struct _GtkWindow* window);
     * }
     */
    public static void gtk_window_maximize(MemorySegment window) {
        var mh$ = gtk_window_maximize$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_unmaximize$MH() {
        return RuntimeHelper.requireNonNull(constants$2205.const$0,"gtk_window_unmaximize");
    }
    /**
     * {@snippet :
     * void gtk_window_unmaximize(struct _GtkWindow* window);
     * }
     */
    public static void gtk_window_unmaximize(MemorySegment window) {
        var mh$ = gtk_window_unmaximize$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_fullscreen$MH() {
        return RuntimeHelper.requireNonNull(constants$2205.const$1,"gtk_window_fullscreen");
    }
    /**
     * {@snippet :
     * void gtk_window_fullscreen(struct _GtkWindow* window);
     * }
     */
    public static void gtk_window_fullscreen(MemorySegment window) {
        var mh$ = gtk_window_fullscreen$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_unfullscreen$MH() {
        return RuntimeHelper.requireNonNull(constants$2205.const$2,"gtk_window_unfullscreen");
    }
    /**
     * {@snippet :
     * void gtk_window_unfullscreen(struct _GtkWindow* window);
     * }
     */
    public static void gtk_window_unfullscreen(MemorySegment window) {
        var mh$ = gtk_window_unfullscreen$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_fullscreen_on_monitor$MH() {
        return RuntimeHelper.requireNonNull(constants$2205.const$3,"gtk_window_fullscreen_on_monitor");
    }
    /**
     * {@snippet :
     * void gtk_window_fullscreen_on_monitor(struct _GtkWindow* window, struct _GdkScreen* screen, int monitor);
     * }
     */
    public static void gtk_window_fullscreen_on_monitor(MemorySegment window, MemorySegment screen, int monitor) {
        var mh$ = gtk_window_fullscreen_on_monitor$MH();
        try {
            mh$.invokeExact(window, screen, monitor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_close$MH() {
        return RuntimeHelper.requireNonNull(constants$2205.const$4,"gtk_window_close");
    }
    /**
     * {@snippet :
     * void gtk_window_close(struct _GtkWindow* window);
     * }
     */
    public static void gtk_window_close(MemorySegment window) {
        var mh$ = gtk_window_close$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_keep_above$MH() {
        return RuntimeHelper.requireNonNull(constants$2205.const$5,"gtk_window_set_keep_above");
    }
    /**
     * {@snippet :
     * void gtk_window_set_keep_above(struct _GtkWindow* window, int setting);
     * }
     */
    public static void gtk_window_set_keep_above(MemorySegment window, int setting) {
        var mh$ = gtk_window_set_keep_above$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_keep_below$MH() {
        return RuntimeHelper.requireNonNull(constants$2206.const$0,"gtk_window_set_keep_below");
    }
    /**
     * {@snippet :
     * void gtk_window_set_keep_below(struct _GtkWindow* window, int setting);
     * }
     */
    public static void gtk_window_set_keep_below(MemorySegment window, int setting) {
        var mh$ = gtk_window_set_keep_below$MH();
        try {
            mh$.invokeExact(window, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_begin_resize_drag$MH() {
        return RuntimeHelper.requireNonNull(constants$2206.const$1,"gtk_window_begin_resize_drag");
    }
    /**
     * {@snippet :
     * void gtk_window_begin_resize_drag(struct _GtkWindow* window, enum GdkWindowEdge edge, int button, int root_x, int root_y, unsigned int timestamp);
     * }
     */
    public static void gtk_window_begin_resize_drag(MemorySegment window, int edge, int button, int root_x, int root_y, int timestamp) {
        var mh$ = gtk_window_begin_resize_drag$MH();
        try {
            mh$.invokeExact(window, edge, button, root_x, root_y, timestamp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_begin_move_drag$MH() {
        return RuntimeHelper.requireNonNull(constants$2206.const$2,"gtk_window_begin_move_drag");
    }
    /**
     * {@snippet :
     * void gtk_window_begin_move_drag(struct _GtkWindow* window, int button, int root_x, int root_y, unsigned int timestamp);
     * }
     */
    public static void gtk_window_begin_move_drag(MemorySegment window, int button, int root_x, int root_y, int timestamp) {
        var mh$ = gtk_window_begin_move_drag$MH();
        try {
            mh$.invokeExact(window, button, root_x, root_y, timestamp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_default_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2206.const$3,"gtk_window_set_default_size");
    }
    /**
     * {@snippet :
     * void gtk_window_set_default_size(struct _GtkWindow* window, int width, int height);
     * }
     */
    public static void gtk_window_set_default_size(MemorySegment window, int width, int height) {
        var mh$ = gtk_window_set_default_size$MH();
        try {
            mh$.invokeExact(window, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_default_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2206.const$4,"gtk_window_get_default_size");
    }
    /**
     * {@snippet :
     * void gtk_window_get_default_size(struct _GtkWindow* window, int* width, int* height);
     * }
     */
    public static void gtk_window_get_default_size(MemorySegment window, MemorySegment width, MemorySegment height) {
        var mh$ = gtk_window_get_default_size$MH();
        try {
            mh$.invokeExact(window, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_resize$MH() {
        return RuntimeHelper.requireNonNull(constants$2206.const$5,"gtk_window_resize");
    }
    /**
     * {@snippet :
     * void gtk_window_resize(struct _GtkWindow* window, int width, int height);
     * }
     */
    public static void gtk_window_resize(MemorySegment window, int width, int height) {
        var mh$ = gtk_window_resize$MH();
        try {
            mh$.invokeExact(window, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2207.const$0,"gtk_window_get_size");
    }
    /**
     * {@snippet :
     * void gtk_window_get_size(struct _GtkWindow* window, int* width, int* height);
     * }
     */
    public static void gtk_window_get_size(MemorySegment window, MemorySegment width, MemorySegment height) {
        var mh$ = gtk_window_get_size$MH();
        try {
            mh$.invokeExact(window, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_move$MH() {
        return RuntimeHelper.requireNonNull(constants$2207.const$1,"gtk_window_move");
    }
    /**
     * {@snippet :
     * void gtk_window_move(struct _GtkWindow* window, int x, int y);
     * }
     */
    public static void gtk_window_move(MemorySegment window, int x, int y) {
        var mh$ = gtk_window_move$MH();
        try {
            mh$.invokeExact(window, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2207.const$2,"gtk_window_get_position");
    }
    /**
     * {@snippet :
     * void gtk_window_get_position(struct _GtkWindow* window, int* root_x, int* root_y);
     * }
     */
    public static void gtk_window_get_position(MemorySegment window, MemorySegment root_x, MemorySegment root_y) {
        var mh$ = gtk_window_get_position$MH();
        try {
            mh$.invokeExact(window, root_x, root_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_parse_geometry$MH() {
        return RuntimeHelper.requireNonNull(constants$2207.const$3,"gtk_window_parse_geometry");
    }
    /**
     * {@snippet :
     * int gtk_window_parse_geometry(struct _GtkWindow* window, char* geometry);
     * }
     */
    public static int gtk_window_parse_geometry(MemorySegment window, MemorySegment geometry) {
        var mh$ = gtk_window_parse_geometry$MH();
        try {
            return (int)mh$.invokeExact(window, geometry);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_default_geometry$MH() {
        return RuntimeHelper.requireNonNull(constants$2207.const$4,"gtk_window_set_default_geometry");
    }
    /**
     * {@snippet :
     * void gtk_window_set_default_geometry(struct _GtkWindow* window, int width, int height);
     * }
     */
    public static void gtk_window_set_default_geometry(MemorySegment window, int width, int height) {
        var mh$ = gtk_window_set_default_geometry$MH();
        try {
            mh$.invokeExact(window, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_resize_to_geometry$MH() {
        return RuntimeHelper.requireNonNull(constants$2207.const$5,"gtk_window_resize_to_geometry");
    }
    /**
     * {@snippet :
     * void gtk_window_resize_to_geometry(struct _GtkWindow* window, int width, int height);
     * }
     */
    public static void gtk_window_resize_to_geometry(MemorySegment window, int width, int height) {
        var mh$ = gtk_window_resize_to_geometry$MH();
        try {
            mh$.invokeExact(window, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_group$MH() {
        return RuntimeHelper.requireNonNull(constants$2208.const$0,"gtk_window_get_group");
    }
    /**
     * {@snippet :
     * struct _GtkWindowGroup* gtk_window_get_group(struct _GtkWindow* window);
     * }
     */
    public static MemorySegment gtk_window_get_group(MemorySegment window) {
        var mh$ = gtk_window_get_group$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_has_group$MH() {
        return RuntimeHelper.requireNonNull(constants$2208.const$1,"gtk_window_has_group");
    }
    /**
     * {@snippet :
     * int gtk_window_has_group(struct _GtkWindow* window);
     * }
     */
    public static int gtk_window_has_group(MemorySegment window) {
        var mh$ = gtk_window_has_group$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_reshow_with_initial_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2208.const$2,"gtk_window_reshow_with_initial_size");
    }
    /**
     * {@snippet :
     * void gtk_window_reshow_with_initial_size(struct _GtkWindow* window);
     * }
     */
    public static void gtk_window_reshow_with_initial_size(MemorySegment window) {
        var mh$ = gtk_window_reshow_with_initial_size$MH();
        try {
            mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_window_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2208.const$3,"gtk_window_get_window_type");
    }
    /**
     * {@snippet :
     * enum GtkWindowType gtk_window_get_window_type(struct _GtkWindow* window);
     * }
     */
    public static int gtk_window_get_window_type(MemorySegment window) {
        var mh$ = gtk_window_get_window_type$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_application$MH() {
        return RuntimeHelper.requireNonNull(constants$2208.const$4,"gtk_window_get_application");
    }
    /**
     * {@snippet :
     * struct _GtkApplication* gtk_window_get_application(struct _GtkWindow* window);
     * }
     */
    public static MemorySegment gtk_window_get_application(MemorySegment window) {
        var mh$ = gtk_window_get_application$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_application$MH() {
        return RuntimeHelper.requireNonNull(constants$2208.const$5,"gtk_window_set_application");
    }
    /**
     * {@snippet :
     * void gtk_window_set_application(struct _GtkWindow* window, struct _GtkApplication* application);
     * }
     */
    public static void gtk_window_set_application(MemorySegment window, MemorySegment application) {
        var mh$ = gtk_window_set_application$MH();
        try {
            mh$.invokeExact(window, application);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_has_resize_grip$MH() {
        return RuntimeHelper.requireNonNull(constants$2209.const$0,"gtk_window_set_has_resize_grip");
    }
    /**
     * {@snippet :
     * void gtk_window_set_has_resize_grip(struct _GtkWindow* window, int value);
     * }
     */
    public static void gtk_window_set_has_resize_grip(MemorySegment window, int value) {
        var mh$ = gtk_window_set_has_resize_grip$MH();
        try {
            mh$.invokeExact(window, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_has_resize_grip$MH() {
        return RuntimeHelper.requireNonNull(constants$2209.const$1,"gtk_window_get_has_resize_grip");
    }
    /**
     * {@snippet :
     * int gtk_window_get_has_resize_grip(struct _GtkWindow* window);
     * }
     */
    public static int gtk_window_get_has_resize_grip(MemorySegment window) {
        var mh$ = gtk_window_get_has_resize_grip$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_resize_grip_is_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$2209.const$2,"gtk_window_resize_grip_is_visible");
    }
    /**
     * {@snippet :
     * int gtk_window_resize_grip_is_visible(struct _GtkWindow* window);
     * }
     */
    public static int gtk_window_resize_grip_is_visible(MemorySegment window) {
        var mh$ = gtk_window_resize_grip_is_visible$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_resize_grip_area$MH() {
        return RuntimeHelper.requireNonNull(constants$2209.const$3,"gtk_window_get_resize_grip_area");
    }
    /**
     * {@snippet :
     * int gtk_window_get_resize_grip_area(struct _GtkWindow* window, struct _cairo_rectangle_int* rect);
     * }
     */
    public static int gtk_window_get_resize_grip_area(MemorySegment window, MemorySegment rect) {
        var mh$ = gtk_window_get_resize_grip_area$MH();
        try {
            return (int)mh$.invokeExact(window, rect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_titlebar$MH() {
        return RuntimeHelper.requireNonNull(constants$2209.const$4,"gtk_window_set_titlebar");
    }
    /**
     * {@snippet :
     * void gtk_window_set_titlebar(struct _GtkWindow* window, struct _GtkWidget* titlebar);
     * }
     */
    public static void gtk_window_set_titlebar(MemorySegment window, MemorySegment titlebar) {
        var mh$ = gtk_window_set_titlebar$MH();
        try {
            mh$.invokeExact(window, titlebar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_get_titlebar$MH() {
        return RuntimeHelper.requireNonNull(constants$2209.const$5,"gtk_window_get_titlebar");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_window_get_titlebar(struct _GtkWindow* window);
     * }
     */
    public static MemorySegment gtk_window_get_titlebar(MemorySegment window) {
        var mh$ = gtk_window_get_titlebar$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_is_maximized$MH() {
        return RuntimeHelper.requireNonNull(constants$2210.const$0,"gtk_window_is_maximized");
    }
    /**
     * {@snippet :
     * int gtk_window_is_maximized(struct _GtkWindow* window);
     * }
     */
    public static int gtk_window_is_maximized(MemorySegment window) {
        var mh$ = gtk_window_is_maximized$MH();
        try {
            return (int)mh$.invokeExact(window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_window_set_interactive_debugging$MH() {
        return RuntimeHelper.requireNonNull(constants$2210.const$1,"gtk_window_set_interactive_debugging");
    }
    /**
     * {@snippet :
     * void gtk_window_set_interactive_debugging(int enable);
     * }
     */
    public static void gtk_window_set_interactive_debugging(int enable) {
        var mh$ = gtk_window_set_interactive_debugging$MH();
        try {
            mh$.invokeExact(enable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkWindow* GtkWindow_autoptr;
     * }
     */
    public static final AddressLayout GtkWindow_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GtkWindow_listautoptr;
     * }
     */
    public static final AddressLayout GtkWindow_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkWindow_slistautoptr;
     * }
     */
    public static final AddressLayout GtkWindow_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkWindow_queueautoptr;
     * }
     */
    public static final AddressLayout GtkWindow_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GtkWindowGroup* GtkWindowGroup_autoptr;
     * }
     */
    public static final AddressLayout GtkWindowGroup_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GtkWindowGroup_listautoptr;
     * }
     */
    public static final AddressLayout GtkWindowGroup_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkWindowGroup_slistautoptr;
     * }
     */
    public static final AddressLayout GtkWindowGroup_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkWindowGroup_queueautoptr;
     * }
     */
    public static final AddressLayout GtkWindowGroup_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum GtkDialogFlags.GTK_DIALOG_MODAL = 1;
     * }
     */
    public static int GTK_DIALOG_MODAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkDialogFlags.GTK_DIALOG_DESTROY_WITH_PARENT = 2;
     * }
     */
    public static int GTK_DIALOG_DESTROY_WITH_PARENT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkDialogFlags.GTK_DIALOG_USE_HEADER_BAR = 4;
     * }
     */
    public static int GTK_DIALOG_USE_HEADER_BAR() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkResponseType.GTK_RESPONSE_NONE = -1;
     * }
     */
    public static int GTK_RESPONSE_NONE() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * enum GtkResponseType.GTK_RESPONSE_REJECT = -2;
     * }
     */
    public static int GTK_RESPONSE_REJECT() {
        return (int)-2L;
    }
    /**
     * {@snippet :
     * enum GtkResponseType.GTK_RESPONSE_ACCEPT = -3;
     * }
     */
    public static int GTK_RESPONSE_ACCEPT() {
        return (int)-3L;
    }
    /**
     * {@snippet :
     * enum GtkResponseType.GTK_RESPONSE_DELETE_EVENT = -4;
     * }
     */
    public static int GTK_RESPONSE_DELETE_EVENT() {
        return (int)-4L;
    }
    /**
     * {@snippet :
     * enum GtkResponseType.GTK_RESPONSE_OK = -5;
     * }
     */
    public static int GTK_RESPONSE_OK() {
        return (int)-5L;
    }
    /**
     * {@snippet :
     * enum GtkResponseType.GTK_RESPONSE_CANCEL = -6;
     * }
     */
    public static int GTK_RESPONSE_CANCEL() {
        return (int)-6L;
    }
    /**
     * {@snippet :
     * enum GtkResponseType.GTK_RESPONSE_CLOSE = -7;
     * }
     */
    public static int GTK_RESPONSE_CLOSE() {
        return (int)-7L;
    }
    /**
     * {@snippet :
     * enum GtkResponseType.GTK_RESPONSE_YES = -8;
     * }
     */
    public static int GTK_RESPONSE_YES() {
        return (int)-8L;
    }
    /**
     * {@snippet :
     * enum GtkResponseType.GTK_RESPONSE_NO = -9;
     * }
     */
    public static int GTK_RESPONSE_NO() {
        return (int)-9L;
    }
    /**
     * {@snippet :
     * enum GtkResponseType.GTK_RESPONSE_APPLY = -10;
     * }
     */
    public static int GTK_RESPONSE_APPLY() {
        return (int)-10L;
    }
    /**
     * {@snippet :
     * enum GtkResponseType.GTK_RESPONSE_HELP = -11;
     * }
     */
    public static int GTK_RESPONSE_HELP() {
        return (int)-11L;
    }
    public static MethodHandle gtk_dialog_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2212.const$5,"gtk_dialog_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_dialog_get_type();
     * }
     */
    public static long gtk_dialog_get_type() {
        var mh$ = gtk_dialog_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_dialog_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2213.const$0,"gtk_dialog_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_dialog_new();
     * }
     */
    public static MemorySegment gtk_dialog_new() {
        var mh$ = gtk_dialog_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_dialog_new_with_buttons$MH() {
        return RuntimeHelper.requireNonNull(constants$2213.const$1,"gtk_dialog_new_with_buttons");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_dialog_new_with_buttons(char* title, struct _GtkWindow* parent, enum GtkDialogFlags flags, char* first_button_text,...);
     * }
     */
    public static MemorySegment gtk_dialog_new_with_buttons(MemorySegment title, MemorySegment parent, int flags, MemorySegment first_button_text, Object... x4) {
        var mh$ = gtk_dialog_new_with_buttons$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(title, parent, flags, first_button_text, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_dialog_add_action_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2213.const$2,"gtk_dialog_add_action_widget");
    }
    /**
     * {@snippet :
     * void gtk_dialog_add_action_widget(struct _GtkDialog* dialog, struct _GtkWidget* child, int response_id);
     * }
     */
    public static void gtk_dialog_add_action_widget(MemorySegment dialog, MemorySegment child, int response_id) {
        var mh$ = gtk_dialog_add_action_widget$MH();
        try {
            mh$.invokeExact(dialog, child, response_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_dialog_add_button$MH() {
        return RuntimeHelper.requireNonNull(constants$2213.const$3,"gtk_dialog_add_button");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_dialog_add_button(struct _GtkDialog* dialog, char* button_text, int response_id);
     * }
     */
    public static MemorySegment gtk_dialog_add_button(MemorySegment dialog, MemorySegment button_text, int response_id) {
        var mh$ = gtk_dialog_add_button$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(dialog, button_text, response_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_dialog_add_buttons$MH() {
        return RuntimeHelper.requireNonNull(constants$2213.const$4,"gtk_dialog_add_buttons");
    }
    /**
     * {@snippet :
     * void gtk_dialog_add_buttons(struct _GtkDialog* dialog, char* first_button_text,...);
     * }
     */
    public static void gtk_dialog_add_buttons(MemorySegment dialog, MemorySegment first_button_text, Object... x2) {
        var mh$ = gtk_dialog_add_buttons$MH();
        try {
            mh$.invokeExact(dialog, first_button_text, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_dialog_set_response_sensitive$MH() {
        return RuntimeHelper.requireNonNull(constants$2213.const$5,"gtk_dialog_set_response_sensitive");
    }
    /**
     * {@snippet :
     * void gtk_dialog_set_response_sensitive(struct _GtkDialog* dialog, int response_id, int setting);
     * }
     */
    public static void gtk_dialog_set_response_sensitive(MemorySegment dialog, int response_id, int setting) {
        var mh$ = gtk_dialog_set_response_sensitive$MH();
        try {
            mh$.invokeExact(dialog, response_id, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_dialog_set_default_response$MH() {
        return RuntimeHelper.requireNonNull(constants$2214.const$0,"gtk_dialog_set_default_response");
    }
    /**
     * {@snippet :
     * void gtk_dialog_set_default_response(struct _GtkDialog* dialog, int response_id);
     * }
     */
    public static void gtk_dialog_set_default_response(MemorySegment dialog, int response_id) {
        var mh$ = gtk_dialog_set_default_response$MH();
        try {
            mh$.invokeExact(dialog, response_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_dialog_get_widget_for_response$MH() {
        return RuntimeHelper.requireNonNull(constants$2214.const$1,"gtk_dialog_get_widget_for_response");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_dialog_get_widget_for_response(struct _GtkDialog* dialog, int response_id);
     * }
     */
    public static MemorySegment gtk_dialog_get_widget_for_response(MemorySegment dialog, int response_id) {
        var mh$ = gtk_dialog_get_widget_for_response$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(dialog, response_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_dialog_get_response_for_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2214.const$2,"gtk_dialog_get_response_for_widget");
    }
    /**
     * {@snippet :
     * int gtk_dialog_get_response_for_widget(struct _GtkDialog* dialog, struct _GtkWidget* widget);
     * }
     */
    public static int gtk_dialog_get_response_for_widget(MemorySegment dialog, MemorySegment widget) {
        var mh$ = gtk_dialog_get_response_for_widget$MH();
        try {
            return (int)mh$.invokeExact(dialog, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_alternative_dialog_button_order$MH() {
        return RuntimeHelper.requireNonNull(constants$2214.const$3,"gtk_alternative_dialog_button_order");
    }
    /**
     * {@snippet :
     * int gtk_alternative_dialog_button_order(struct _GdkScreen* screen);
     * }
     */
    public static int gtk_alternative_dialog_button_order(MemorySegment screen) {
        var mh$ = gtk_alternative_dialog_button_order$MH();
        try {
            return (int)mh$.invokeExact(screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_dialog_set_alternative_button_order$MH() {
        return RuntimeHelper.requireNonNull(constants$2214.const$4,"gtk_dialog_set_alternative_button_order");
    }
    /**
     * {@snippet :
     * void gtk_dialog_set_alternative_button_order(struct _GtkDialog* dialog, int first_response_id,...);
     * }
     */
    public static void gtk_dialog_set_alternative_button_order(MemorySegment dialog, int first_response_id, Object... x2) {
        var mh$ = gtk_dialog_set_alternative_button_order$MH();
        try {
            mh$.invokeExact(dialog, first_response_id, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_dialog_set_alternative_button_order_from_array$MH() {
        return RuntimeHelper.requireNonNull(constants$2214.const$5,"gtk_dialog_set_alternative_button_order_from_array");
    }
    /**
     * {@snippet :
     * void gtk_dialog_set_alternative_button_order_from_array(struct _GtkDialog* dialog, int n_params, int* new_order);
     * }
     */
    public static void gtk_dialog_set_alternative_button_order_from_array(MemorySegment dialog, int n_params, MemorySegment new_order) {
        var mh$ = gtk_dialog_set_alternative_button_order_from_array$MH();
        try {
            mh$.invokeExact(dialog, n_params, new_order);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_dialog_response$MH() {
        return RuntimeHelper.requireNonNull(constants$2215.const$0,"gtk_dialog_response");
    }
    /**
     * {@snippet :
     * void gtk_dialog_response(struct _GtkDialog* dialog, int response_id);
     * }
     */
    public static void gtk_dialog_response(MemorySegment dialog, int response_id) {
        var mh$ = gtk_dialog_response$MH();
        try {
            mh$.invokeExact(dialog, response_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_dialog_run$MH() {
        return RuntimeHelper.requireNonNull(constants$2215.const$1,"gtk_dialog_run");
    }
    /**
     * {@snippet :
     * int gtk_dialog_run(struct _GtkDialog* dialog);
     * }
     */
    public static int gtk_dialog_run(MemorySegment dialog) {
        var mh$ = gtk_dialog_run$MH();
        try {
            return (int)mh$.invokeExact(dialog);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_dialog_get_action_area$MH() {
        return RuntimeHelper.requireNonNull(constants$2215.const$2,"gtk_dialog_get_action_area");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_dialog_get_action_area(struct _GtkDialog* dialog);
     * }
     */
    public static MemorySegment gtk_dialog_get_action_area(MemorySegment dialog) {
        var mh$ = gtk_dialog_get_action_area$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(dialog);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_dialog_get_content_area$MH() {
        return RuntimeHelper.requireNonNull(constants$2215.const$3,"gtk_dialog_get_content_area");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_dialog_get_content_area(struct _GtkDialog* dialog);
     * }
     */
    public static MemorySegment gtk_dialog_get_content_area(MemorySegment dialog) {
        var mh$ = gtk_dialog_get_content_area$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(dialog);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_dialog_get_header_bar$MH() {
        return RuntimeHelper.requireNonNull(constants$2215.const$4,"gtk_dialog_get_header_bar");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_dialog_get_header_bar(struct _GtkDialog* dialog);
     * }
     */
    public static MemorySegment gtk_dialog_get_header_bar(MemorySegment dialog) {
        var mh$ = gtk_dialog_get_header_bar$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(dialog);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkDialog* GtkDialog_autoptr;
     * }
     */
    public static final AddressLayout GtkDialog_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GtkDialog_listautoptr;
     * }
     */
    public static final AddressLayout GtkDialog_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkDialog_slistautoptr;
     * }
     */
    public static final AddressLayout GtkDialog_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkDialog_queueautoptr;
     * }
     */
    public static final AddressLayout GtkDialog_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum GtkLicense.GTK_LICENSE_UNKNOWN = 0;
     * }
     */
    public static int GTK_LICENSE_UNKNOWN() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkLicense.GTK_LICENSE_CUSTOM = 1;
     * }
     */
    public static int GTK_LICENSE_CUSTOM() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkLicense.GTK_LICENSE_GPL_2_0 = 2;
     * }
     */
    public static int GTK_LICENSE_GPL_2_0() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkLicense.GTK_LICENSE_GPL_3_0 = 3;
     * }
     */
    public static int GTK_LICENSE_GPL_3_0() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum GtkLicense.GTK_LICENSE_LGPL_2_1 = 4;
     * }
     */
    public static int GTK_LICENSE_LGPL_2_1() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkLicense.GTK_LICENSE_LGPL_3_0 = 5;
     * }
     */
    public static int GTK_LICENSE_LGPL_3_0() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum GtkLicense.GTK_LICENSE_BSD = 6;
     * }
     */
    public static int GTK_LICENSE_BSD() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum GtkLicense.GTK_LICENSE_MIT_X11 = 7;
     * }
     */
    public static int GTK_LICENSE_MIT_X11() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum GtkLicense.GTK_LICENSE_ARTISTIC = 8;
     * }
     */
    public static int GTK_LICENSE_ARTISTIC() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GtkLicense.GTK_LICENSE_GPL_2_0_ONLY = 9;
     * }
     */
    public static int GTK_LICENSE_GPL_2_0_ONLY() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum GtkLicense.GTK_LICENSE_GPL_3_0_ONLY = 10;
     * }
     */
    public static int GTK_LICENSE_GPL_3_0_ONLY() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum GtkLicense.GTK_LICENSE_LGPL_2_1_ONLY = 11;
     * }
     */
    public static int GTK_LICENSE_LGPL_2_1_ONLY() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum GtkLicense.GTK_LICENSE_LGPL_3_0_ONLY = 12;
     * }
     */
    public static int GTK_LICENSE_LGPL_3_0_ONLY() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum GtkLicense.GTK_LICENSE_AGPL_3_0 = 13;
     * }
     */
    public static int GTK_LICENSE_AGPL_3_0() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum GtkLicense.GTK_LICENSE_AGPL_3_0_ONLY = 14;
     * }
     */
    public static int GTK_LICENSE_AGPL_3_0_ONLY() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum GtkLicense.GTK_LICENSE_BSD_3 = 15;
     * }
     */
    public static int GTK_LICENSE_BSD_3() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum GtkLicense.GTK_LICENSE_APACHE_2_0 = 16;
     * }
     */
    public static int GTK_LICENSE_APACHE_2_0() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GtkLicense.GTK_LICENSE_MPL_2_0 = 17;
     * }
     */
    public static int GTK_LICENSE_MPL_2_0() {
        return (int)17L;
    }
    public static MethodHandle gtk_about_dialog_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2218.const$0,"gtk_about_dialog_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_about_dialog_get_type();
     * }
     */
    public static long gtk_about_dialog_get_type() {
        var mh$ = gtk_about_dialog_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_about_dialog_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2218.const$1,"gtk_about_dialog_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_about_dialog_new();
     * }
     */
    public static MemorySegment gtk_about_dialog_new() {
        var mh$ = gtk_about_dialog_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_show_about_dialog$MH() {
        return RuntimeHelper.requireNonNull(constants$2218.const$2,"gtk_show_about_dialog");
    }
    /**
     * {@snippet :
     * void gtk_show_about_dialog(struct _GtkWindow* parent, char* first_property_name,...);
     * }
     */
    public static void gtk_show_about_dialog(MemorySegment parent, MemorySegment first_property_name, Object... x2) {
        var mh$ = gtk_show_about_dialog$MH();
        try {
            mh$.invokeExact(parent, first_property_name, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_about_dialog_get_program_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2218.const$3,"gtk_about_dialog_get_program_name");
    }
    /**
     * {@snippet :
     * char* gtk_about_dialog_get_program_name(struct _GtkAboutDialog* about);
     * }
     */
    public static MemorySegment gtk_about_dialog_get_program_name(MemorySegment about) {
        var mh$ = gtk_about_dialog_get_program_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(about);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_about_dialog_set_program_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2218.const$4,"gtk_about_dialog_set_program_name");
    }
    /**
     * {@snippet :
     * void gtk_about_dialog_set_program_name(struct _GtkAboutDialog* about, char* name);
     * }
     */
    public static void gtk_about_dialog_set_program_name(MemorySegment about, MemorySegment name) {
        var mh$ = gtk_about_dialog_set_program_name$MH();
        try {
            mh$.invokeExact(about, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_about_dialog_get_version$MH() {
        return RuntimeHelper.requireNonNull(constants$2218.const$5,"gtk_about_dialog_get_version");
    }
    /**
     * {@snippet :
     * char* gtk_about_dialog_get_version(struct _GtkAboutDialog* about);
     * }
     */
    public static MemorySegment gtk_about_dialog_get_version(MemorySegment about) {
        var mh$ = gtk_about_dialog_get_version$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(about);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_about_dialog_set_version$MH() {
        return RuntimeHelper.requireNonNull(constants$2219.const$0,"gtk_about_dialog_set_version");
    }
    /**
     * {@snippet :
     * void gtk_about_dialog_set_version(struct _GtkAboutDialog* about, char* version);
     * }
     */
    public static void gtk_about_dialog_set_version(MemorySegment about, MemorySegment version) {
        var mh$ = gtk_about_dialog_set_version$MH();
        try {
            mh$.invokeExact(about, version);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_about_dialog_get_copyright$MH() {
        return RuntimeHelper.requireNonNull(constants$2219.const$1,"gtk_about_dialog_get_copyright");
    }
    /**
     * {@snippet :
     * char* gtk_about_dialog_get_copyright(struct _GtkAboutDialog* about);
     * }
     */
    public static MemorySegment gtk_about_dialog_get_copyright(MemorySegment about) {
        var mh$ = gtk_about_dialog_get_copyright$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(about);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_about_dialog_set_copyright$MH() {
        return RuntimeHelper.requireNonNull(constants$2219.const$2,"gtk_about_dialog_set_copyright");
    }
    /**
     * {@snippet :
     * void gtk_about_dialog_set_copyright(struct _GtkAboutDialog* about, char* copyright);
     * }
     */
    public static void gtk_about_dialog_set_copyright(MemorySegment about, MemorySegment copyright) {
        var mh$ = gtk_about_dialog_set_copyright$MH();
        try {
            mh$.invokeExact(about, copyright);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_about_dialog_get_comments$MH() {
        return RuntimeHelper.requireNonNull(constants$2219.const$3,"gtk_about_dialog_get_comments");
    }
    /**
     * {@snippet :
     * char* gtk_about_dialog_get_comments(struct _GtkAboutDialog* about);
     * }
     */
    public static MemorySegment gtk_about_dialog_get_comments(MemorySegment about) {
        var mh$ = gtk_about_dialog_get_comments$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(about);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_about_dialog_set_comments$MH() {
        return RuntimeHelper.requireNonNull(constants$2219.const$4,"gtk_about_dialog_set_comments");
    }
    /**
     * {@snippet :
     * void gtk_about_dialog_set_comments(struct _GtkAboutDialog* about, char* comments);
     * }
     */
    public static void gtk_about_dialog_set_comments(MemorySegment about, MemorySegment comments) {
        var mh$ = gtk_about_dialog_set_comments$MH();
        try {
            mh$.invokeExact(about, comments);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_about_dialog_get_license$MH() {
        return RuntimeHelper.requireNonNull(constants$2219.const$5,"gtk_about_dialog_get_license");
    }
    /**
     * {@snippet :
     * char* gtk_about_dialog_get_license(struct _GtkAboutDialog* about);
     * }
     */
    public static MemorySegment gtk_about_dialog_get_license(MemorySegment about) {
        var mh$ = gtk_about_dialog_get_license$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(about);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_about_dialog_set_license$MH() {
        return RuntimeHelper.requireNonNull(constants$2220.const$0,"gtk_about_dialog_set_license");
    }
    /**
     * {@snippet :
     * void gtk_about_dialog_set_license(struct _GtkAboutDialog* about, char* license);
     * }
     */
    public static void gtk_about_dialog_set_license(MemorySegment about, MemorySegment license) {
        var mh$ = gtk_about_dialog_set_license$MH();
        try {
            mh$.invokeExact(about, license);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_about_dialog_set_license_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2220.const$1,"gtk_about_dialog_set_license_type");
    }
    /**
     * {@snippet :
     * void gtk_about_dialog_set_license_type(struct _GtkAboutDialog* about, enum GtkLicense license_type);
     * }
     */
    public static void gtk_about_dialog_set_license_type(MemorySegment about, int license_type) {
        var mh$ = gtk_about_dialog_set_license_type$MH();
        try {
            mh$.invokeExact(about, license_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_about_dialog_get_license_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2220.const$2,"gtk_about_dialog_get_license_type");
    }
    /**
     * {@snippet :
     * enum GtkLicense gtk_about_dialog_get_license_type(struct _GtkAboutDialog* about);
     * }
     */
    public static int gtk_about_dialog_get_license_type(MemorySegment about) {
        var mh$ = gtk_about_dialog_get_license_type$MH();
        try {
            return (int)mh$.invokeExact(about);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_about_dialog_get_wrap_license$MH() {
        return RuntimeHelper.requireNonNull(constants$2220.const$3,"gtk_about_dialog_get_wrap_license");
    }
    /**
     * {@snippet :
     * int gtk_about_dialog_get_wrap_license(struct _GtkAboutDialog* about);
     * }
     */
    public static int gtk_about_dialog_get_wrap_license(MemorySegment about) {
        var mh$ = gtk_about_dialog_get_wrap_license$MH();
        try {
            return (int)mh$.invokeExact(about);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_about_dialog_set_wrap_license$MH() {
        return RuntimeHelper.requireNonNull(constants$2220.const$4,"gtk_about_dialog_set_wrap_license");
    }
    /**
     * {@snippet :
     * void gtk_about_dialog_set_wrap_license(struct _GtkAboutDialog* about, int wrap_license);
     * }
     */
    public static void gtk_about_dialog_set_wrap_license(MemorySegment about, int wrap_license) {
        var mh$ = gtk_about_dialog_set_wrap_license$MH();
        try {
            mh$.invokeExact(about, wrap_license);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_about_dialog_get_website$MH() {
        return RuntimeHelper.requireNonNull(constants$2220.const$5,"gtk_about_dialog_get_website");
    }
    /**
     * {@snippet :
     * char* gtk_about_dialog_get_website(struct _GtkAboutDialog* about);
     * }
     */
    public static MemorySegment gtk_about_dialog_get_website(MemorySegment about) {
        var mh$ = gtk_about_dialog_get_website$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(about);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_about_dialog_set_website$MH() {
        return RuntimeHelper.requireNonNull(constants$2221.const$0,"gtk_about_dialog_set_website");
    }
    /**
     * {@snippet :
     * void gtk_about_dialog_set_website(struct _GtkAboutDialog* about, char* website);
     * }
     */
    public static void gtk_about_dialog_set_website(MemorySegment about, MemorySegment website) {
        var mh$ = gtk_about_dialog_set_website$MH();
        try {
            mh$.invokeExact(about, website);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_about_dialog_get_website_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2221.const$1,"gtk_about_dialog_get_website_label");
    }
    /**
     * {@snippet :
     * char* gtk_about_dialog_get_website_label(struct _GtkAboutDialog* about);
     * }
     */
    public static MemorySegment gtk_about_dialog_get_website_label(MemorySegment about) {
        var mh$ = gtk_about_dialog_get_website_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(about);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_about_dialog_set_website_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2221.const$2,"gtk_about_dialog_set_website_label");
    }
    /**
     * {@snippet :
     * void gtk_about_dialog_set_website_label(struct _GtkAboutDialog* about, char* website_label);
     * }
     */
    public static void gtk_about_dialog_set_website_label(MemorySegment about, MemorySegment website_label) {
        var mh$ = gtk_about_dialog_set_website_label$MH();
        try {
            mh$.invokeExact(about, website_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_about_dialog_get_authors$MH() {
        return RuntimeHelper.requireNonNull(constants$2221.const$3,"gtk_about_dialog_get_authors");
    }
    /**
     * {@snippet :
     * char** gtk_about_dialog_get_authors(struct _GtkAboutDialog* about);
     * }
     */
    public static MemorySegment gtk_about_dialog_get_authors(MemorySegment about) {
        var mh$ = gtk_about_dialog_get_authors$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(about);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_about_dialog_set_authors$MH() {
        return RuntimeHelper.requireNonNull(constants$2221.const$4,"gtk_about_dialog_set_authors");
    }
    /**
     * {@snippet :
     * void gtk_about_dialog_set_authors(struct _GtkAboutDialog* about, char** authors);
     * }
     */
    public static void gtk_about_dialog_set_authors(MemorySegment about, MemorySegment authors) {
        var mh$ = gtk_about_dialog_set_authors$MH();
        try {
            mh$.invokeExact(about, authors);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_about_dialog_get_documenters$MH() {
        return RuntimeHelper.requireNonNull(constants$2221.const$5,"gtk_about_dialog_get_documenters");
    }
    /**
     * {@snippet :
     * char** gtk_about_dialog_get_documenters(struct _GtkAboutDialog* about);
     * }
     */
    public static MemorySegment gtk_about_dialog_get_documenters(MemorySegment about) {
        var mh$ = gtk_about_dialog_get_documenters$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(about);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_about_dialog_set_documenters$MH() {
        return RuntimeHelper.requireNonNull(constants$2222.const$0,"gtk_about_dialog_set_documenters");
    }
    /**
     * {@snippet :
     * void gtk_about_dialog_set_documenters(struct _GtkAboutDialog* about, char** documenters);
     * }
     */
    public static void gtk_about_dialog_set_documenters(MemorySegment about, MemorySegment documenters) {
        var mh$ = gtk_about_dialog_set_documenters$MH();
        try {
            mh$.invokeExact(about, documenters);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_about_dialog_get_artists$MH() {
        return RuntimeHelper.requireNonNull(constants$2222.const$1,"gtk_about_dialog_get_artists");
    }
    /**
     * {@snippet :
     * char** gtk_about_dialog_get_artists(struct _GtkAboutDialog* about);
     * }
     */
    public static MemorySegment gtk_about_dialog_get_artists(MemorySegment about) {
        var mh$ = gtk_about_dialog_get_artists$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(about);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_about_dialog_set_artists$MH() {
        return RuntimeHelper.requireNonNull(constants$2222.const$2,"gtk_about_dialog_set_artists");
    }
    /**
     * {@snippet :
     * void gtk_about_dialog_set_artists(struct _GtkAboutDialog* about, char** artists);
     * }
     */
    public static void gtk_about_dialog_set_artists(MemorySegment about, MemorySegment artists) {
        var mh$ = gtk_about_dialog_set_artists$MH();
        try {
            mh$.invokeExact(about, artists);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_about_dialog_get_translator_credits$MH() {
        return RuntimeHelper.requireNonNull(constants$2222.const$3,"gtk_about_dialog_get_translator_credits");
    }
    /**
     * {@snippet :
     * char* gtk_about_dialog_get_translator_credits(struct _GtkAboutDialog* about);
     * }
     */
    public static MemorySegment gtk_about_dialog_get_translator_credits(MemorySegment about) {
        var mh$ = gtk_about_dialog_get_translator_credits$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(about);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_about_dialog_set_translator_credits$MH() {
        return RuntimeHelper.requireNonNull(constants$2222.const$4,"gtk_about_dialog_set_translator_credits");
    }
    /**
     * {@snippet :
     * void gtk_about_dialog_set_translator_credits(struct _GtkAboutDialog* about, char* translator_credits);
     * }
     */
    public static void gtk_about_dialog_set_translator_credits(MemorySegment about, MemorySegment translator_credits) {
        var mh$ = gtk_about_dialog_set_translator_credits$MH();
        try {
            mh$.invokeExact(about, translator_credits);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_about_dialog_get_logo$MH() {
        return RuntimeHelper.requireNonNull(constants$2222.const$5,"gtk_about_dialog_get_logo");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gtk_about_dialog_get_logo(struct _GtkAboutDialog* about);
     * }
     */
    public static MemorySegment gtk_about_dialog_get_logo(MemorySegment about) {
        var mh$ = gtk_about_dialog_get_logo$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(about);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_about_dialog_set_logo$MH() {
        return RuntimeHelper.requireNonNull(constants$2223.const$0,"gtk_about_dialog_set_logo");
    }
    /**
     * {@snippet :
     * void gtk_about_dialog_set_logo(struct _GtkAboutDialog* about, struct _GdkPixbuf* logo);
     * }
     */
    public static void gtk_about_dialog_set_logo(MemorySegment about, MemorySegment logo) {
        var mh$ = gtk_about_dialog_set_logo$MH();
        try {
            mh$.invokeExact(about, logo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_about_dialog_get_logo_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2223.const$1,"gtk_about_dialog_get_logo_icon_name");
    }
    /**
     * {@snippet :
     * char* gtk_about_dialog_get_logo_icon_name(struct _GtkAboutDialog* about);
     * }
     */
    public static MemorySegment gtk_about_dialog_get_logo_icon_name(MemorySegment about) {
        var mh$ = gtk_about_dialog_get_logo_icon_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(about);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_about_dialog_set_logo_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2223.const$2,"gtk_about_dialog_set_logo_icon_name");
    }
    /**
     * {@snippet :
     * void gtk_about_dialog_set_logo_icon_name(struct _GtkAboutDialog* about, char* icon_name);
     * }
     */
    public static void gtk_about_dialog_set_logo_icon_name(MemorySegment about, MemorySegment icon_name) {
        var mh$ = gtk_about_dialog_set_logo_icon_name$MH();
        try {
            mh$.invokeExact(about, icon_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_about_dialog_add_credit_section$MH() {
        return RuntimeHelper.requireNonNull(constants$2223.const$3,"gtk_about_dialog_add_credit_section");
    }
    /**
     * {@snippet :
     * void gtk_about_dialog_add_credit_section(struct _GtkAboutDialog* about, char* section_name, char** people);
     * }
     */
    public static void gtk_about_dialog_add_credit_section(MemorySegment about, MemorySegment section_name, MemorySegment people) {
        var mh$ = gtk_about_dialog_add_credit_section$MH();
        try {
            mh$.invokeExact(about, section_name, people);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkAboutDialog* GtkAboutDialog_autoptr;
     * }
     */
    public static final AddressLayout GtkAboutDialog_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GtkAboutDialog_listautoptr;
     * }
     */
    public static final AddressLayout GtkAboutDialog_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkAboutDialog_slistautoptr;
     * }
     */
    public static final AddressLayout GtkAboutDialog_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkAboutDialog_queueautoptr;
     * }
     */
    public static final AddressLayout GtkAboutDialog_queueautoptr = RuntimeHelper.POINTER;
    public static MethodHandle gtk_misc_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2225.const$3,"gtk_misc_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_misc_get_type();
     * }
     */
    public static long gtk_misc_get_type() {
        var mh$ = gtk_misc_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_misc_set_alignment$MH() {
        return RuntimeHelper.requireNonNull(constants$2225.const$5,"gtk_misc_set_alignment");
    }
    /**
     * {@snippet :
     * void gtk_misc_set_alignment(struct _GtkMisc* misc, float xalign, float yalign);
     * }
     */
    public static void gtk_misc_set_alignment(MemorySegment misc, float xalign, float yalign) {
        var mh$ = gtk_misc_set_alignment$MH();
        try {
            mh$.invokeExact(misc, xalign, yalign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_misc_get_alignment$MH() {
        return RuntimeHelper.requireNonNull(constants$2226.const$0,"gtk_misc_get_alignment");
    }
    /**
     * {@snippet :
     * void gtk_misc_get_alignment(struct _GtkMisc* misc, float* xalign, float* yalign);
     * }
     */
    public static void gtk_misc_get_alignment(MemorySegment misc, MemorySegment xalign, MemorySegment yalign) {
        var mh$ = gtk_misc_get_alignment$MH();
        try {
            mh$.invokeExact(misc, xalign, yalign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_misc_set_padding$MH() {
        return RuntimeHelper.requireNonNull(constants$2226.const$1,"gtk_misc_set_padding");
    }
    /**
     * {@snippet :
     * void gtk_misc_set_padding(struct _GtkMisc* misc, int xpad, int ypad);
     * }
     */
    public static void gtk_misc_set_padding(MemorySegment misc, int xpad, int ypad) {
        var mh$ = gtk_misc_set_padding$MH();
        try {
            mh$.invokeExact(misc, xpad, ypad);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_misc_get_padding$MH() {
        return RuntimeHelper.requireNonNull(constants$2226.const$2,"gtk_misc_get_padding");
    }
    /**
     * {@snippet :
     * void gtk_misc_get_padding(struct _GtkMisc* misc, int* xpad, int* ypad);
     * }
     */
    public static void gtk_misc_get_padding(MemorySegment misc, MemorySegment xpad, MemorySegment ypad) {
        var mh$ = gtk_misc_get_padding$MH();
        try {
            mh$.invokeExact(misc, xpad, ypad);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gtk_misc_get_padding_and_border$MH() {
        return RuntimeHelper.requireNonNull(constants$2226.const$3,"_gtk_misc_get_padding_and_border");
    }
    /**
     * {@snippet :
     * void _gtk_misc_get_padding_and_border(struct _GtkMisc* misc, struct _GtkBorder* border);
     * }
     */
    public static void _gtk_misc_get_padding_and_border(MemorySegment misc, MemorySegment border) {
        var mh$ = _gtk_misc_get_padding_and_border$MH();
        try {
            mh$.invokeExact(misc, border);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_shell_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2231.const$3,"gtk_menu_shell_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_menu_shell_get_type();
     * }
     */
    public static long gtk_menu_shell_get_type() {
        var mh$ = gtk_menu_shell_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_shell_append$MH() {
        return RuntimeHelper.requireNonNull(constants$2231.const$4,"gtk_menu_shell_append");
    }
    /**
     * {@snippet :
     * void gtk_menu_shell_append(struct _GtkMenuShell* menu_shell, struct _GtkWidget* child);
     * }
     */
    public static void gtk_menu_shell_append(MemorySegment menu_shell, MemorySegment child) {
        var mh$ = gtk_menu_shell_append$MH();
        try {
            mh$.invokeExact(menu_shell, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_shell_prepend$MH() {
        return RuntimeHelper.requireNonNull(constants$2231.const$5,"gtk_menu_shell_prepend");
    }
    /**
     * {@snippet :
     * void gtk_menu_shell_prepend(struct _GtkMenuShell* menu_shell, struct _GtkWidget* child);
     * }
     */
    public static void gtk_menu_shell_prepend(MemorySegment menu_shell, MemorySegment child) {
        var mh$ = gtk_menu_shell_prepend$MH();
        try {
            mh$.invokeExact(menu_shell, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_shell_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$2232.const$0,"gtk_menu_shell_insert");
    }
    /**
     * {@snippet :
     * void gtk_menu_shell_insert(struct _GtkMenuShell* menu_shell, struct _GtkWidget* child, int position);
     * }
     */
    public static void gtk_menu_shell_insert(MemorySegment menu_shell, MemorySegment child, int position) {
        var mh$ = gtk_menu_shell_insert$MH();
        try {
            mh$.invokeExact(menu_shell, child, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_shell_deactivate$MH() {
        return RuntimeHelper.requireNonNull(constants$2232.const$1,"gtk_menu_shell_deactivate");
    }
    /**
     * {@snippet :
     * void gtk_menu_shell_deactivate(struct _GtkMenuShell* menu_shell);
     * }
     */
    public static void gtk_menu_shell_deactivate(MemorySegment menu_shell) {
        var mh$ = gtk_menu_shell_deactivate$MH();
        try {
            mh$.invokeExact(menu_shell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_shell_select_item$MH() {
        return RuntimeHelper.requireNonNull(constants$2232.const$2,"gtk_menu_shell_select_item");
    }
    /**
     * {@snippet :
     * void gtk_menu_shell_select_item(struct _GtkMenuShell* menu_shell, struct _GtkWidget* menu_item);
     * }
     */
    public static void gtk_menu_shell_select_item(MemorySegment menu_shell, MemorySegment menu_item) {
        var mh$ = gtk_menu_shell_select_item$MH();
        try {
            mh$.invokeExact(menu_shell, menu_item);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_shell_deselect$MH() {
        return RuntimeHelper.requireNonNull(constants$2232.const$3,"gtk_menu_shell_deselect");
    }
    /**
     * {@snippet :
     * void gtk_menu_shell_deselect(struct _GtkMenuShell* menu_shell);
     * }
     */
    public static void gtk_menu_shell_deselect(MemorySegment menu_shell) {
        var mh$ = gtk_menu_shell_deselect$MH();
        try {
            mh$.invokeExact(menu_shell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_shell_activate_item$MH() {
        return RuntimeHelper.requireNonNull(constants$2232.const$4,"gtk_menu_shell_activate_item");
    }
    /**
     * {@snippet :
     * void gtk_menu_shell_activate_item(struct _GtkMenuShell* menu_shell, struct _GtkWidget* menu_item, int force_deactivate);
     * }
     */
    public static void gtk_menu_shell_activate_item(MemorySegment menu_shell, MemorySegment menu_item, int force_deactivate) {
        var mh$ = gtk_menu_shell_activate_item$MH();
        try {
            mh$.invokeExact(menu_shell, menu_item, force_deactivate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_shell_select_first$MH() {
        return RuntimeHelper.requireNonNull(constants$2232.const$5,"gtk_menu_shell_select_first");
    }
    /**
     * {@snippet :
     * void gtk_menu_shell_select_first(struct _GtkMenuShell* menu_shell, int search_sensitive);
     * }
     */
    public static void gtk_menu_shell_select_first(MemorySegment menu_shell, int search_sensitive) {
        var mh$ = gtk_menu_shell_select_first$MH();
        try {
            mh$.invokeExact(menu_shell, search_sensitive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_shell_cancel$MH() {
        return RuntimeHelper.requireNonNull(constants$2233.const$0,"gtk_menu_shell_cancel");
    }
    /**
     * {@snippet :
     * void gtk_menu_shell_cancel(struct _GtkMenuShell* menu_shell);
     * }
     */
    public static void gtk_menu_shell_cancel(MemorySegment menu_shell) {
        var mh$ = gtk_menu_shell_cancel$MH();
        try {
            mh$.invokeExact(menu_shell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_shell_get_take_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$2233.const$1,"gtk_menu_shell_get_take_focus");
    }
    /**
     * {@snippet :
     * int gtk_menu_shell_get_take_focus(struct _GtkMenuShell* menu_shell);
     * }
     */
    public static int gtk_menu_shell_get_take_focus(MemorySegment menu_shell) {
        var mh$ = gtk_menu_shell_get_take_focus$MH();
        try {
            return (int)mh$.invokeExact(menu_shell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_shell_set_take_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$2233.const$2,"gtk_menu_shell_set_take_focus");
    }
    /**
     * {@snippet :
     * void gtk_menu_shell_set_take_focus(struct _GtkMenuShell* menu_shell, int take_focus);
     * }
     */
    public static void gtk_menu_shell_set_take_focus(MemorySegment menu_shell, int take_focus) {
        var mh$ = gtk_menu_shell_set_take_focus$MH();
        try {
            mh$.invokeExact(menu_shell, take_focus);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_shell_get_selected_item$MH() {
        return RuntimeHelper.requireNonNull(constants$2233.const$3,"gtk_menu_shell_get_selected_item");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_menu_shell_get_selected_item(struct _GtkMenuShell* menu_shell);
     * }
     */
    public static MemorySegment gtk_menu_shell_get_selected_item(MemorySegment menu_shell) {
        var mh$ = gtk_menu_shell_get_selected_item$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(menu_shell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_shell_get_parent_shell$MH() {
        return RuntimeHelper.requireNonNull(constants$2233.const$4,"gtk_menu_shell_get_parent_shell");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_menu_shell_get_parent_shell(struct _GtkMenuShell* menu_shell);
     * }
     */
    public static MemorySegment gtk_menu_shell_get_parent_shell(MemorySegment menu_shell) {
        var mh$ = gtk_menu_shell_get_parent_shell$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(menu_shell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_shell_bind_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2233.const$5,"gtk_menu_shell_bind_model");
    }
    /**
     * {@snippet :
     * void gtk_menu_shell_bind_model(struct _GtkMenuShell* menu_shell, struct _GMenuModel* model, char* action_namespace, int with_separators);
     * }
     */
    public static void gtk_menu_shell_bind_model(MemorySegment menu_shell, MemorySegment model, MemorySegment action_namespace, int with_separators) {
        var mh$ = gtk_menu_shell_bind_model$MH();
        try {
            mh$.invokeExact(menu_shell, model, action_namespace, with_separators);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkMenuShell* GtkMenuShell_autoptr;
     * }
     */
    public static final AddressLayout GtkMenuShell_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GtkMenuShell_listautoptr;
     * }
     */
    public static final AddressLayout GtkMenuShell_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkMenuShell_slistautoptr;
     * }
     */
    public static final AddressLayout GtkMenuShell_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkMenuShell_queueautoptr;
     * }
     */
    public static final AddressLayout GtkMenuShell_queueautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum GtkArrowPlacement.GTK_ARROWS_BOTH = 0;
     * }
     */
    public static int GTK_ARROWS_BOTH() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkArrowPlacement.GTK_ARROWS_START = 1;
     * }
     */
    public static int GTK_ARROWS_START() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkArrowPlacement.GTK_ARROWS_END = 2;
     * }
     */
    public static int GTK_ARROWS_END() {
        return (int)2L;
    }
    public static MethodHandle gtk_menu_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2236.const$1,"gtk_menu_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_menu_get_type();
     * }
     */
    public static long gtk_menu_get_type() {
        var mh$ = gtk_menu_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2236.const$2,"gtk_menu_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_menu_new();
     * }
     */
    public static MemorySegment gtk_menu_new() {
        var mh$ = gtk_menu_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_new_from_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2236.const$3,"gtk_menu_new_from_model");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_menu_new_from_model(struct _GMenuModel* model);
     * }
     */
    public static MemorySegment gtk_menu_new_from_model(MemorySegment model) {
        var mh$ = gtk_menu_new_from_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_popup$MH() {
        return RuntimeHelper.requireNonNull(constants$2236.const$6,"gtk_menu_popup");
    }
    /**
     * {@snippet :
     * void gtk_menu_popup(struct _GtkMenu* menu, struct _GtkWidget* parent_menu_shell, struct _GtkWidget* parent_menu_item, void (*func)(struct _GtkMenu*,int*,int*,int*,void*), void* data, unsigned int button, unsigned int activate_time);
     * }
     */
    public static void gtk_menu_popup(MemorySegment menu, MemorySegment parent_menu_shell, MemorySegment parent_menu_item, MemorySegment func, MemorySegment data, int button, int activate_time) {
        var mh$ = gtk_menu_popup$MH();
        try {
            mh$.invokeExact(menu, parent_menu_shell, parent_menu_item, func, data, button, activate_time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_popup_for_device$MH() {
        return RuntimeHelper.requireNonNull(constants$2237.const$3,"gtk_menu_popup_for_device");
    }
    /**
     * {@snippet :
     * void gtk_menu_popup_for_device(struct _GtkMenu* menu, struct _GdkDevice* device, struct _GtkWidget* parent_menu_shell, struct _GtkWidget* parent_menu_item, void (*func)(struct _GtkMenu*,int*,int*,int*,void*), void* data, void (*destroy)(void*), unsigned int button, unsigned int activate_time);
     * }
     */
    public static void gtk_menu_popup_for_device(MemorySegment menu, MemorySegment device, MemorySegment parent_menu_shell, MemorySegment parent_menu_item, MemorySegment func, MemorySegment data, MemorySegment destroy, int button, int activate_time) {
        var mh$ = gtk_menu_popup_for_device$MH();
        try {
            mh$.invokeExact(menu, device, parent_menu_shell, parent_menu_item, func, data, destroy, button, activate_time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_popup_at_rect$MH() {
        return RuntimeHelper.requireNonNull(constants$2237.const$4,"gtk_menu_popup_at_rect");
    }
    /**
     * {@snippet :
     * void gtk_menu_popup_at_rect(struct _GtkMenu* menu, struct _GdkWindow* rect_window, struct _cairo_rectangle_int* rect, enum GdkGravity rect_anchor, enum GdkGravity menu_anchor, union _GdkEvent* trigger_event);
     * }
     */
    public static void gtk_menu_popup_at_rect(MemorySegment menu, MemorySegment rect_window, MemorySegment rect, int rect_anchor, int menu_anchor, MemorySegment trigger_event) {
        var mh$ = gtk_menu_popup_at_rect$MH();
        try {
            mh$.invokeExact(menu, rect_window, rect, rect_anchor, menu_anchor, trigger_event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_popup_at_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2237.const$5,"gtk_menu_popup_at_widget");
    }
    /**
     * {@snippet :
     * void gtk_menu_popup_at_widget(struct _GtkMenu* menu, struct _GtkWidget* widget, enum GdkGravity widget_anchor, enum GdkGravity menu_anchor, union _GdkEvent* trigger_event);
     * }
     */
    public static void gtk_menu_popup_at_widget(MemorySegment menu, MemorySegment widget, int widget_anchor, int menu_anchor, MemorySegment trigger_event) {
        var mh$ = gtk_menu_popup_at_widget$MH();
        try {
            mh$.invokeExact(menu, widget, widget_anchor, menu_anchor, trigger_event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_popup_at_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$2238.const$0,"gtk_menu_popup_at_pointer");
    }
    /**
     * {@snippet :
     * void gtk_menu_popup_at_pointer(struct _GtkMenu* menu, union _GdkEvent* trigger_event);
     * }
     */
    public static void gtk_menu_popup_at_pointer(MemorySegment menu, MemorySegment trigger_event) {
        var mh$ = gtk_menu_popup_at_pointer$MH();
        try {
            mh$.invokeExact(menu, trigger_event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_reposition$MH() {
        return RuntimeHelper.requireNonNull(constants$2238.const$1,"gtk_menu_reposition");
    }
    /**
     * {@snippet :
     * void gtk_menu_reposition(struct _GtkMenu* menu);
     * }
     */
    public static void gtk_menu_reposition(MemorySegment menu) {
        var mh$ = gtk_menu_reposition$MH();
        try {
            mh$.invokeExact(menu);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_popdown$MH() {
        return RuntimeHelper.requireNonNull(constants$2238.const$2,"gtk_menu_popdown");
    }
    /**
     * {@snippet :
     * void gtk_menu_popdown(struct _GtkMenu* menu);
     * }
     */
    public static void gtk_menu_popdown(MemorySegment menu) {
        var mh$ = gtk_menu_popdown$MH();
        try {
            mh$.invokeExact(menu);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_get_active$MH() {
        return RuntimeHelper.requireNonNull(constants$2238.const$3,"gtk_menu_get_active");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_menu_get_active(struct _GtkMenu* menu);
     * }
     */
    public static MemorySegment gtk_menu_get_active(MemorySegment menu) {
        var mh$ = gtk_menu_get_active$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(menu);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_set_active$MH() {
        return RuntimeHelper.requireNonNull(constants$2238.const$4,"gtk_menu_set_active");
    }
    /**
     * {@snippet :
     * void gtk_menu_set_active(struct _GtkMenu* menu, unsigned int index);
     * }
     */
    public static void gtk_menu_set_active(MemorySegment menu, int index) {
        var mh$ = gtk_menu_set_active$MH();
        try {
            mh$.invokeExact(menu, index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_set_accel_group$MH() {
        return RuntimeHelper.requireNonNull(constants$2238.const$5,"gtk_menu_set_accel_group");
    }
    /**
     * {@snippet :
     * void gtk_menu_set_accel_group(struct _GtkMenu* menu, struct _GtkAccelGroup* accel_group);
     * }
     */
    public static void gtk_menu_set_accel_group(MemorySegment menu, MemorySegment accel_group) {
        var mh$ = gtk_menu_set_accel_group$MH();
        try {
            mh$.invokeExact(menu, accel_group);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_get_accel_group$MH() {
        return RuntimeHelper.requireNonNull(constants$2239.const$0,"gtk_menu_get_accel_group");
    }
    /**
     * {@snippet :
     * struct _GtkAccelGroup* gtk_menu_get_accel_group(struct _GtkMenu* menu);
     * }
     */
    public static MemorySegment gtk_menu_get_accel_group(MemorySegment menu) {
        var mh$ = gtk_menu_get_accel_group$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(menu);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_set_accel_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2239.const$1,"gtk_menu_set_accel_path");
    }
    /**
     * {@snippet :
     * void gtk_menu_set_accel_path(struct _GtkMenu* menu, char* accel_path);
     * }
     */
    public static void gtk_menu_set_accel_path(MemorySegment menu, MemorySegment accel_path) {
        var mh$ = gtk_menu_set_accel_path$MH();
        try {
            mh$.invokeExact(menu, accel_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_get_accel_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2239.const$2,"gtk_menu_get_accel_path");
    }
    /**
     * {@snippet :
     * char* gtk_menu_get_accel_path(struct _GtkMenu* menu);
     * }
     */
    public static MemorySegment gtk_menu_get_accel_path(MemorySegment menu) {
        var mh$ = gtk_menu_get_accel_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(menu);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_attach_to_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2239.const$4,"gtk_menu_attach_to_widget");
    }
    /**
     * {@snippet :
     * void gtk_menu_attach_to_widget(struct _GtkMenu* menu, struct _GtkWidget* attach_widget, void (*detacher)(struct _GtkWidget*,struct _GtkMenu*));
     * }
     */
    public static void gtk_menu_attach_to_widget(MemorySegment menu, MemorySegment attach_widget, MemorySegment detacher) {
        var mh$ = gtk_menu_attach_to_widget$MH();
        try {
            mh$.invokeExact(menu, attach_widget, detacher);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_detach$MH() {
        return RuntimeHelper.requireNonNull(constants$2239.const$5,"gtk_menu_detach");
    }
    /**
     * {@snippet :
     * void gtk_menu_detach(struct _GtkMenu* menu);
     * }
     */
    public static void gtk_menu_detach(MemorySegment menu) {
        var mh$ = gtk_menu_detach$MH();
        try {
            mh$.invokeExact(menu);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_get_attach_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2240.const$0,"gtk_menu_get_attach_widget");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_menu_get_attach_widget(struct _GtkMenu* menu);
     * }
     */
    public static MemorySegment gtk_menu_get_attach_widget(MemorySegment menu) {
        var mh$ = gtk_menu_get_attach_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(menu);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_set_tearoff_state$MH() {
        return RuntimeHelper.requireNonNull(constants$2240.const$1,"gtk_menu_set_tearoff_state");
    }
    /**
     * {@snippet :
     * void gtk_menu_set_tearoff_state(struct _GtkMenu* menu, int torn_off);
     * }
     */
    public static void gtk_menu_set_tearoff_state(MemorySegment menu, int torn_off) {
        var mh$ = gtk_menu_set_tearoff_state$MH();
        try {
            mh$.invokeExact(menu, torn_off);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_get_tearoff_state$MH() {
        return RuntimeHelper.requireNonNull(constants$2240.const$2,"gtk_menu_get_tearoff_state");
    }
    /**
     * {@snippet :
     * int gtk_menu_get_tearoff_state(struct _GtkMenu* menu);
     * }
     */
    public static int gtk_menu_get_tearoff_state(MemorySegment menu) {
        var mh$ = gtk_menu_get_tearoff_state$MH();
        try {
            return (int)mh$.invokeExact(menu);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_set_title$MH() {
        return RuntimeHelper.requireNonNull(constants$2240.const$3,"gtk_menu_set_title");
    }
    /**
     * {@snippet :
     * void gtk_menu_set_title(struct _GtkMenu* menu, char* title);
     * }
     */
    public static void gtk_menu_set_title(MemorySegment menu, MemorySegment title) {
        var mh$ = gtk_menu_set_title$MH();
        try {
            mh$.invokeExact(menu, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_get_title$MH() {
        return RuntimeHelper.requireNonNull(constants$2240.const$4,"gtk_menu_get_title");
    }
    /**
     * {@snippet :
     * char* gtk_menu_get_title(struct _GtkMenu* menu);
     * }
     */
    public static MemorySegment gtk_menu_get_title(MemorySegment menu) {
        var mh$ = gtk_menu_get_title$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(menu);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_reorder_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2240.const$5,"gtk_menu_reorder_child");
    }
    /**
     * {@snippet :
     * void gtk_menu_reorder_child(struct _GtkMenu* menu, struct _GtkWidget* child, int position);
     * }
     */
    public static void gtk_menu_reorder_child(MemorySegment menu, MemorySegment child, int position) {
        var mh$ = gtk_menu_reorder_child$MH();
        try {
            mh$.invokeExact(menu, child, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_set_screen$MH() {
        return RuntimeHelper.requireNonNull(constants$2241.const$0,"gtk_menu_set_screen");
    }
    /**
     * {@snippet :
     * void gtk_menu_set_screen(struct _GtkMenu* menu, struct _GdkScreen* screen);
     * }
     */
    public static void gtk_menu_set_screen(MemorySegment menu, MemorySegment screen) {
        var mh$ = gtk_menu_set_screen$MH();
        try {
            mh$.invokeExact(menu, screen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_attach$MH() {
        return RuntimeHelper.requireNonNull(constants$2241.const$1,"gtk_menu_attach");
    }
    /**
     * {@snippet :
     * void gtk_menu_attach(struct _GtkMenu* menu, struct _GtkWidget* child, unsigned int left_attach, unsigned int right_attach, unsigned int top_attach, unsigned int bottom_attach);
     * }
     */
    public static void gtk_menu_attach(MemorySegment menu, MemorySegment child, int left_attach, int right_attach, int top_attach, int bottom_attach) {
        var mh$ = gtk_menu_attach$MH();
        try {
            mh$.invokeExact(menu, child, left_attach, right_attach, top_attach, bottom_attach);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_set_monitor$MH() {
        return RuntimeHelper.requireNonNull(constants$2241.const$2,"gtk_menu_set_monitor");
    }
    /**
     * {@snippet :
     * void gtk_menu_set_monitor(struct _GtkMenu* menu, int monitor_num);
     * }
     */
    public static void gtk_menu_set_monitor(MemorySegment menu, int monitor_num) {
        var mh$ = gtk_menu_set_monitor$MH();
        try {
            mh$.invokeExact(menu, monitor_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_get_monitor$MH() {
        return RuntimeHelper.requireNonNull(constants$2241.const$3,"gtk_menu_get_monitor");
    }
    /**
     * {@snippet :
     * int gtk_menu_get_monitor(struct _GtkMenu* menu);
     * }
     */
    public static int gtk_menu_get_monitor(MemorySegment menu) {
        var mh$ = gtk_menu_get_monitor$MH();
        try {
            return (int)mh$.invokeExact(menu);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_place_on_monitor$MH() {
        return RuntimeHelper.requireNonNull(constants$2241.const$4,"gtk_menu_place_on_monitor");
    }
    /**
     * {@snippet :
     * void gtk_menu_place_on_monitor(struct _GtkMenu* menu, struct _GdkMonitor* monitor);
     * }
     */
    public static void gtk_menu_place_on_monitor(MemorySegment menu, MemorySegment monitor) {
        var mh$ = gtk_menu_place_on_monitor$MH();
        try {
            mh$.invokeExact(menu, monitor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_get_for_attach_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2241.const$5,"gtk_menu_get_for_attach_widget");
    }
    /**
     * {@snippet :
     * struct _GList* gtk_menu_get_for_attach_widget(struct _GtkWidget* widget);
     * }
     */
    public static MemorySegment gtk_menu_get_for_attach_widget(MemorySegment widget) {
        var mh$ = gtk_menu_get_for_attach_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_set_reserve_toggle_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2242.const$0,"gtk_menu_set_reserve_toggle_size");
    }
    /**
     * {@snippet :
     * void gtk_menu_set_reserve_toggle_size(struct _GtkMenu* menu, int reserve_toggle_size);
     * }
     */
    public static void gtk_menu_set_reserve_toggle_size(MemorySegment menu, int reserve_toggle_size) {
        var mh$ = gtk_menu_set_reserve_toggle_size$MH();
        try {
            mh$.invokeExact(menu, reserve_toggle_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_menu_get_reserve_toggle_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2242.const$1,"gtk_menu_get_reserve_toggle_size");
    }
    /**
     * {@snippet :
     * int gtk_menu_get_reserve_toggle_size(struct _GtkMenu* menu);
     * }
     */
    public static int gtk_menu_get_reserve_toggle_size(MemorySegment menu) {
        var mh$ = gtk_menu_get_reserve_toggle_size$MH();
        try {
            return (int)mh$.invokeExact(menu);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkMenu* GtkMenu_autoptr;
     * }
     */
    public static final AddressLayout GtkMenu_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GtkMenu_listautoptr;
     * }
     */
    public static final AddressLayout GtkMenu_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkMenu_slistautoptr;
     * }
     */
    public static final AddressLayout GtkMenu_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkMenu_queueautoptr;
     * }
     */
    public static final AddressLayout GtkMenu_queueautoptr = RuntimeHelper.POINTER;
    public static MethodHandle gtk_label_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2247.const$0,"gtk_label_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_label_get_type();
     * }
     */
    public static long gtk_label_get_type() {
        var mh$ = gtk_label_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2247.const$1,"gtk_label_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_label_new(char* str);
     * }
     */
    public static MemorySegment gtk_label_new(MemorySegment str) {
        var mh$ = gtk_label_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_new_with_mnemonic$MH() {
        return RuntimeHelper.requireNonNull(constants$2247.const$2,"gtk_label_new_with_mnemonic");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_label_new_with_mnemonic(char* str);
     * }
     */
    public static MemorySegment gtk_label_new_with_mnemonic(MemorySegment str) {
        var mh$ = gtk_label_new_with_mnemonic$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2247.const$3,"gtk_label_set_text");
    }
    /**
     * {@snippet :
     * void gtk_label_set_text(struct _GtkLabel* label, char* str);
     * }
     */
    public static void gtk_label_set_text(MemorySegment label, MemorySegment str) {
        var mh$ = gtk_label_set_text$MH();
        try {
            mh$.invokeExact(label, str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2247.const$4,"gtk_label_get_text");
    }
    /**
     * {@snippet :
     * char* gtk_label_get_text(struct _GtkLabel* label);
     * }
     */
    public static MemorySegment gtk_label_get_text(MemorySegment label) {
        var mh$ = gtk_label_get_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$2247.const$5,"gtk_label_set_attributes");
    }
    /**
     * {@snippet :
     * void gtk_label_set_attributes(struct _GtkLabel* label, struct _PangoAttrList* attrs);
     * }
     */
    public static void gtk_label_set_attributes(MemorySegment label, MemorySegment attrs) {
        var mh$ = gtk_label_set_attributes$MH();
        try {
            mh$.invokeExact(label, attrs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$2248.const$0,"gtk_label_get_attributes");
    }
    /**
     * {@snippet :
     * struct _PangoAttrList* gtk_label_get_attributes(struct _GtkLabel* label);
     * }
     */
    public static MemorySegment gtk_label_get_attributes(MemorySegment label) {
        var mh$ = gtk_label_get_attributes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2248.const$1,"gtk_label_set_label");
    }
    /**
     * {@snippet :
     * void gtk_label_set_label(struct _GtkLabel* label, char* str);
     * }
     */
    public static void gtk_label_set_label(MemorySegment label, MemorySegment str) {
        var mh$ = gtk_label_set_label$MH();
        try {
            mh$.invokeExact(label, str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2248.const$2,"gtk_label_get_label");
    }
    /**
     * {@snippet :
     * char* gtk_label_get_label(struct _GtkLabel* label);
     * }
     */
    public static MemorySegment gtk_label_get_label(MemorySegment label) {
        var mh$ = gtk_label_get_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$2248.const$3,"gtk_label_set_markup");
    }
    /**
     * {@snippet :
     * void gtk_label_set_markup(struct _GtkLabel* label, char* str);
     * }
     */
    public static void gtk_label_set_markup(MemorySegment label, MemorySegment str) {
        var mh$ = gtk_label_set_markup$MH();
        try {
            mh$.invokeExact(label, str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_use_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$2248.const$4,"gtk_label_set_use_markup");
    }
    /**
     * {@snippet :
     * void gtk_label_set_use_markup(struct _GtkLabel* label, int setting);
     * }
     */
    public static void gtk_label_set_use_markup(MemorySegment label, int setting) {
        var mh$ = gtk_label_set_use_markup$MH();
        try {
            mh$.invokeExact(label, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_use_markup$MH() {
        return RuntimeHelper.requireNonNull(constants$2248.const$5,"gtk_label_get_use_markup");
    }
    /**
     * {@snippet :
     * int gtk_label_get_use_markup(struct _GtkLabel* label);
     * }
     */
    public static int gtk_label_get_use_markup(MemorySegment label) {
        var mh$ = gtk_label_get_use_markup$MH();
        try {
            return (int)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_use_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$2249.const$0,"gtk_label_set_use_underline");
    }
    /**
     * {@snippet :
     * void gtk_label_set_use_underline(struct _GtkLabel* label, int setting);
     * }
     */
    public static void gtk_label_set_use_underline(MemorySegment label, int setting) {
        var mh$ = gtk_label_set_use_underline$MH();
        try {
            mh$.invokeExact(label, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_use_underline$MH() {
        return RuntimeHelper.requireNonNull(constants$2249.const$1,"gtk_label_get_use_underline");
    }
    /**
     * {@snippet :
     * int gtk_label_get_use_underline(struct _GtkLabel* label);
     * }
     */
    public static int gtk_label_get_use_underline(MemorySegment label) {
        var mh$ = gtk_label_get_use_underline$MH();
        try {
            return (int)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_markup_with_mnemonic$MH() {
        return RuntimeHelper.requireNonNull(constants$2249.const$2,"gtk_label_set_markup_with_mnemonic");
    }
    /**
     * {@snippet :
     * void gtk_label_set_markup_with_mnemonic(struct _GtkLabel* label, char* str);
     * }
     */
    public static void gtk_label_set_markup_with_mnemonic(MemorySegment label, MemorySegment str) {
        var mh$ = gtk_label_set_markup_with_mnemonic$MH();
        try {
            mh$.invokeExact(label, str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_mnemonic_keyval$MH() {
        return RuntimeHelper.requireNonNull(constants$2249.const$3,"gtk_label_get_mnemonic_keyval");
    }
    /**
     * {@snippet :
     * unsigned int gtk_label_get_mnemonic_keyval(struct _GtkLabel* label);
     * }
     */
    public static int gtk_label_get_mnemonic_keyval(MemorySegment label) {
        var mh$ = gtk_label_get_mnemonic_keyval$MH();
        try {
            return (int)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_mnemonic_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2249.const$4,"gtk_label_set_mnemonic_widget");
    }
    /**
     * {@snippet :
     * void gtk_label_set_mnemonic_widget(struct _GtkLabel* label, struct _GtkWidget* widget);
     * }
     */
    public static void gtk_label_set_mnemonic_widget(MemorySegment label, MemorySegment widget) {
        var mh$ = gtk_label_set_mnemonic_widget$MH();
        try {
            mh$.invokeExact(label, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_mnemonic_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2249.const$5,"gtk_label_get_mnemonic_widget");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_label_get_mnemonic_widget(struct _GtkLabel* label);
     * }
     */
    public static MemorySegment gtk_label_get_mnemonic_widget(MemorySegment label) {
        var mh$ = gtk_label_get_mnemonic_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_text_with_mnemonic$MH() {
        return RuntimeHelper.requireNonNull(constants$2250.const$0,"gtk_label_set_text_with_mnemonic");
    }
    /**
     * {@snippet :
     * void gtk_label_set_text_with_mnemonic(struct _GtkLabel* label, char* str);
     * }
     */
    public static void gtk_label_set_text_with_mnemonic(MemorySegment label, MemorySegment str) {
        var mh$ = gtk_label_set_text_with_mnemonic$MH();
        try {
            mh$.invokeExact(label, str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_justify$MH() {
        return RuntimeHelper.requireNonNull(constants$2250.const$1,"gtk_label_set_justify");
    }
    /**
     * {@snippet :
     * void gtk_label_set_justify(struct _GtkLabel* label, enum GtkJustification jtype);
     * }
     */
    public static void gtk_label_set_justify(MemorySegment label, int jtype) {
        var mh$ = gtk_label_set_justify$MH();
        try {
            mh$.invokeExact(label, jtype);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_justify$MH() {
        return RuntimeHelper.requireNonNull(constants$2250.const$2,"gtk_label_get_justify");
    }
    /**
     * {@snippet :
     * enum GtkJustification gtk_label_get_justify(struct _GtkLabel* label);
     * }
     */
    public static int gtk_label_get_justify(MemorySegment label) {
        var mh$ = gtk_label_get_justify$MH();
        try {
            return (int)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_ellipsize$MH() {
        return RuntimeHelper.requireNonNull(constants$2250.const$3,"gtk_label_set_ellipsize");
    }
    /**
     * {@snippet :
     * void gtk_label_set_ellipsize(struct _GtkLabel* label, enum PangoEllipsizeMode mode);
     * }
     */
    public static void gtk_label_set_ellipsize(MemorySegment label, int mode) {
        var mh$ = gtk_label_set_ellipsize$MH();
        try {
            mh$.invokeExact(label, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_ellipsize$MH() {
        return RuntimeHelper.requireNonNull(constants$2250.const$4,"gtk_label_get_ellipsize");
    }
    /**
     * {@snippet :
     * enum PangoEllipsizeMode gtk_label_get_ellipsize(struct _GtkLabel* label);
     * }
     */
    public static int gtk_label_get_ellipsize(MemorySegment label) {
        var mh$ = gtk_label_get_ellipsize$MH();
        try {
            return (int)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_width_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$2250.const$5,"gtk_label_set_width_chars");
    }
    /**
     * {@snippet :
     * void gtk_label_set_width_chars(struct _GtkLabel* label, int n_chars);
     * }
     */
    public static void gtk_label_set_width_chars(MemorySegment label, int n_chars) {
        var mh$ = gtk_label_set_width_chars$MH();
        try {
            mh$.invokeExact(label, n_chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_width_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$2251.const$0,"gtk_label_get_width_chars");
    }
    /**
     * {@snippet :
     * int gtk_label_get_width_chars(struct _GtkLabel* label);
     * }
     */
    public static int gtk_label_get_width_chars(MemorySegment label) {
        var mh$ = gtk_label_get_width_chars$MH();
        try {
            return (int)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_max_width_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$2251.const$1,"gtk_label_set_max_width_chars");
    }
    /**
     * {@snippet :
     * void gtk_label_set_max_width_chars(struct _GtkLabel* label, int n_chars);
     * }
     */
    public static void gtk_label_set_max_width_chars(MemorySegment label, int n_chars) {
        var mh$ = gtk_label_set_max_width_chars$MH();
        try {
            mh$.invokeExact(label, n_chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_max_width_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$2251.const$2,"gtk_label_get_max_width_chars");
    }
    /**
     * {@snippet :
     * int gtk_label_get_max_width_chars(struct _GtkLabel* label);
     * }
     */
    public static int gtk_label_get_max_width_chars(MemorySegment label) {
        var mh$ = gtk_label_get_max_width_chars$MH();
        try {
            return (int)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$2251.const$3,"gtk_label_set_lines");
    }
    /**
     * {@snippet :
     * void gtk_label_set_lines(struct _GtkLabel* label, int lines);
     * }
     */
    public static void gtk_label_set_lines(MemorySegment label, int lines) {
        var mh$ = gtk_label_set_lines$MH();
        try {
            mh$.invokeExact(label, lines);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$2251.const$4,"gtk_label_get_lines");
    }
    /**
     * {@snippet :
     * int gtk_label_get_lines(struct _GtkLabel* label);
     * }
     */
    public static int gtk_label_get_lines(MemorySegment label) {
        var mh$ = gtk_label_get_lines$MH();
        try {
            return (int)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_pattern$MH() {
        return RuntimeHelper.requireNonNull(constants$2251.const$5,"gtk_label_set_pattern");
    }
    /**
     * {@snippet :
     * void gtk_label_set_pattern(struct _GtkLabel* label, char* pattern);
     * }
     */
    public static void gtk_label_set_pattern(MemorySegment label, MemorySegment pattern) {
        var mh$ = gtk_label_set_pattern$MH();
        try {
            mh$.invokeExact(label, pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_line_wrap$MH() {
        return RuntimeHelper.requireNonNull(constants$2252.const$0,"gtk_label_set_line_wrap");
    }
    /**
     * {@snippet :
     * void gtk_label_set_line_wrap(struct _GtkLabel* label, int wrap);
     * }
     */
    public static void gtk_label_set_line_wrap(MemorySegment label, int wrap) {
        var mh$ = gtk_label_set_line_wrap$MH();
        try {
            mh$.invokeExact(label, wrap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_line_wrap$MH() {
        return RuntimeHelper.requireNonNull(constants$2252.const$1,"gtk_label_get_line_wrap");
    }
    /**
     * {@snippet :
     * int gtk_label_get_line_wrap(struct _GtkLabel* label);
     * }
     */
    public static int gtk_label_get_line_wrap(MemorySegment label) {
        var mh$ = gtk_label_get_line_wrap$MH();
        try {
            return (int)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_line_wrap_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2252.const$2,"gtk_label_set_line_wrap_mode");
    }
    /**
     * {@snippet :
     * void gtk_label_set_line_wrap_mode(struct _GtkLabel* label, enum PangoWrapMode wrap_mode);
     * }
     */
    public static void gtk_label_set_line_wrap_mode(MemorySegment label, int wrap_mode) {
        var mh$ = gtk_label_set_line_wrap_mode$MH();
        try {
            mh$.invokeExact(label, wrap_mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_line_wrap_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2252.const$3,"gtk_label_get_line_wrap_mode");
    }
    /**
     * {@snippet :
     * enum PangoWrapMode gtk_label_get_line_wrap_mode(struct _GtkLabel* label);
     * }
     */
    public static int gtk_label_get_line_wrap_mode(MemorySegment label) {
        var mh$ = gtk_label_get_line_wrap_mode$MH();
        try {
            return (int)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_selectable$MH() {
        return RuntimeHelper.requireNonNull(constants$2252.const$4,"gtk_label_set_selectable");
    }
    /**
     * {@snippet :
     * void gtk_label_set_selectable(struct _GtkLabel* label, int setting);
     * }
     */
    public static void gtk_label_set_selectable(MemorySegment label, int setting) {
        var mh$ = gtk_label_set_selectable$MH();
        try {
            mh$.invokeExact(label, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_selectable$MH() {
        return RuntimeHelper.requireNonNull(constants$2252.const$5,"gtk_label_get_selectable");
    }
    /**
     * {@snippet :
     * int gtk_label_get_selectable(struct _GtkLabel* label);
     * }
     */
    public static int gtk_label_get_selectable(MemorySegment label) {
        var mh$ = gtk_label_get_selectable$MH();
        try {
            return (int)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_angle$MH() {
        return RuntimeHelper.requireNonNull(constants$2253.const$0,"gtk_label_set_angle");
    }
    /**
     * {@snippet :
     * void gtk_label_set_angle(struct _GtkLabel* label, double angle);
     * }
     */
    public static void gtk_label_set_angle(MemorySegment label, double angle) {
        var mh$ = gtk_label_set_angle$MH();
        try {
            mh$.invokeExact(label, angle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_angle$MH() {
        return RuntimeHelper.requireNonNull(constants$2253.const$1,"gtk_label_get_angle");
    }
    /**
     * {@snippet :
     * double gtk_label_get_angle(struct _GtkLabel* label);
     * }
     */
    public static double gtk_label_get_angle(MemorySegment label) {
        var mh$ = gtk_label_get_angle$MH();
        try {
            return (double)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_select_region$MH() {
        return RuntimeHelper.requireNonNull(constants$2253.const$2,"gtk_label_select_region");
    }
    /**
     * {@snippet :
     * void gtk_label_select_region(struct _GtkLabel* label, int start_offset, int end_offset);
     * }
     */
    public static void gtk_label_select_region(MemorySegment label, int start_offset, int end_offset) {
        var mh$ = gtk_label_select_region$MH();
        try {
            mh$.invokeExact(label, start_offset, end_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_selection_bounds$MH() {
        return RuntimeHelper.requireNonNull(constants$2253.const$3,"gtk_label_get_selection_bounds");
    }
    /**
     * {@snippet :
     * int gtk_label_get_selection_bounds(struct _GtkLabel* label, int* start, int* end);
     * }
     */
    public static int gtk_label_get_selection_bounds(MemorySegment label, MemorySegment start, MemorySegment end) {
        var mh$ = gtk_label_get_selection_bounds$MH();
        try {
            return (int)mh$.invokeExact(label, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_layout$MH() {
        return RuntimeHelper.requireNonNull(constants$2253.const$4,"gtk_label_get_layout");
    }
    /**
     * {@snippet :
     * struct _PangoLayout* gtk_label_get_layout(struct _GtkLabel* label);
     * }
     */
    public static MemorySegment gtk_label_get_layout(MemorySegment label) {
        var mh$ = gtk_label_get_layout$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_layout_offsets$MH() {
        return RuntimeHelper.requireNonNull(constants$2253.const$5,"gtk_label_get_layout_offsets");
    }
    /**
     * {@snippet :
     * void gtk_label_get_layout_offsets(struct _GtkLabel* label, int* x, int* y);
     * }
     */
    public static void gtk_label_get_layout_offsets(MemorySegment label, MemorySegment x, MemorySegment y) {
        var mh$ = gtk_label_get_layout_offsets$MH();
        try {
            mh$.invokeExact(label, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_single_line_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2254.const$0,"gtk_label_set_single_line_mode");
    }
    /**
     * {@snippet :
     * void gtk_label_set_single_line_mode(struct _GtkLabel* label, int single_line_mode);
     * }
     */
    public static void gtk_label_set_single_line_mode(MemorySegment label, int single_line_mode) {
        var mh$ = gtk_label_set_single_line_mode$MH();
        try {
            mh$.invokeExact(label, single_line_mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_single_line_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2254.const$1,"gtk_label_get_single_line_mode");
    }
    /**
     * {@snippet :
     * int gtk_label_get_single_line_mode(struct _GtkLabel* label);
     * }
     */
    public static int gtk_label_get_single_line_mode(MemorySegment label) {
        var mh$ = gtk_label_get_single_line_mode$MH();
        try {
            return (int)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_current_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$2254.const$2,"gtk_label_get_current_uri");
    }
    /**
     * {@snippet :
     * char* gtk_label_get_current_uri(struct _GtkLabel* label);
     * }
     */
    public static MemorySegment gtk_label_get_current_uri(MemorySegment label) {
        var mh$ = gtk_label_get_current_uri$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_track_visited_links$MH() {
        return RuntimeHelper.requireNonNull(constants$2254.const$3,"gtk_label_set_track_visited_links");
    }
    /**
     * {@snippet :
     * void gtk_label_set_track_visited_links(struct _GtkLabel* label, int track_links);
     * }
     */
    public static void gtk_label_set_track_visited_links(MemorySegment label, int track_links) {
        var mh$ = gtk_label_set_track_visited_links$MH();
        try {
            mh$.invokeExact(label, track_links);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_track_visited_links$MH() {
        return RuntimeHelper.requireNonNull(constants$2254.const$4,"gtk_label_get_track_visited_links");
    }
    /**
     * {@snippet :
     * int gtk_label_get_track_visited_links(struct _GtkLabel* label);
     * }
     */
    public static int gtk_label_get_track_visited_links(MemorySegment label) {
        var mh$ = gtk_label_get_track_visited_links$MH();
        try {
            return (int)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_xalign$MH() {
        return RuntimeHelper.requireNonNull(constants$2254.const$5,"gtk_label_set_xalign");
    }
    /**
     * {@snippet :
     * void gtk_label_set_xalign(struct _GtkLabel* label, float xalign);
     * }
     */
    public static void gtk_label_set_xalign(MemorySegment label, float xalign) {
        var mh$ = gtk_label_set_xalign$MH();
        try {
            mh$.invokeExact(label, xalign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_xalign$MH() {
        return RuntimeHelper.requireNonNull(constants$2255.const$0,"gtk_label_get_xalign");
    }
    /**
     * {@snippet :
     * float gtk_label_get_xalign(struct _GtkLabel* label);
     * }
     */
    public static float gtk_label_get_xalign(MemorySegment label) {
        var mh$ = gtk_label_get_xalign$MH();
        try {
            return (float)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_set_yalign$MH() {
        return RuntimeHelper.requireNonNull(constants$2255.const$1,"gtk_label_set_yalign");
    }
    /**
     * {@snippet :
     * void gtk_label_set_yalign(struct _GtkLabel* label, float yalign);
     * }
     */
    public static void gtk_label_set_yalign(MemorySegment label, float yalign) {
        var mh$ = gtk_label_set_yalign$MH();
        try {
            mh$.invokeExact(label, yalign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_label_get_yalign$MH() {
        return RuntimeHelper.requireNonNull(constants$2255.const$2,"gtk_label_get_yalign");
    }
    /**
     * {@snippet :
     * float gtk_label_get_yalign(struct _GtkLabel* label);
     * }
     */
    public static float gtk_label_get_yalign(MemorySegment label) {
        var mh$ = gtk_label_get_yalign$MH();
        try {
            return (float)mh$.invokeExact(label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkLabel* GtkLabel_autoptr;
     * }
     */
    public static final AddressLayout GtkLabel_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GtkLabel_listautoptr;
     * }
     */
    public static final AddressLayout GtkLabel_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkLabel_slistautoptr;
     * }
     */
    public static final AddressLayout GtkLabel_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkLabel_queueautoptr;
     * }
     */
    public static final AddressLayout GtkLabel_queueautoptr = RuntimeHelper.POINTER;
    public static MethodHandle gtk_accel_label_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2258.const$2,"gtk_accel_label_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_accel_label_get_type();
     * }
     */
    public static long gtk_accel_label_get_type() {
        var mh$ = gtk_accel_label_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_label_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2258.const$3,"gtk_accel_label_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_accel_label_new(char* string);
     * }
     */
    public static MemorySegment gtk_accel_label_new(MemorySegment string) {
        var mh$ = gtk_accel_label_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_label_get_accel_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2258.const$4,"gtk_accel_label_get_accel_widget");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_accel_label_get_accel_widget(struct _GtkAccelLabel* accel_label);
     * }
     */
    public static MemorySegment gtk_accel_label_get_accel_widget(MemorySegment accel_label) {
        var mh$ = gtk_accel_label_get_accel_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(accel_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_label_get_accel_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2258.const$5,"gtk_accel_label_get_accel_width");
    }
    /**
     * {@snippet :
     * unsigned int gtk_accel_label_get_accel_width(struct _GtkAccelLabel* accel_label);
     * }
     */
    public static int gtk_accel_label_get_accel_width(MemorySegment accel_label) {
        var mh$ = gtk_accel_label_get_accel_width$MH();
        try {
            return (int)mh$.invokeExact(accel_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_label_set_accel_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2259.const$0,"gtk_accel_label_set_accel_widget");
    }
    /**
     * {@snippet :
     * void gtk_accel_label_set_accel_widget(struct _GtkAccelLabel* accel_label, struct _GtkWidget* accel_widget);
     * }
     */
    public static void gtk_accel_label_set_accel_widget(MemorySegment accel_label, MemorySegment accel_widget) {
        var mh$ = gtk_accel_label_set_accel_widget$MH();
        try {
            mh$.invokeExact(accel_label, accel_widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_label_set_accel_closure$MH() {
        return RuntimeHelper.requireNonNull(constants$2259.const$1,"gtk_accel_label_set_accel_closure");
    }
    /**
     * {@snippet :
     * void gtk_accel_label_set_accel_closure(struct _GtkAccelLabel* accel_label, struct _GClosure* accel_closure);
     * }
     */
    public static void gtk_accel_label_set_accel_closure(MemorySegment accel_label, MemorySegment accel_closure) {
        var mh$ = gtk_accel_label_set_accel_closure$MH();
        try {
            mh$.invokeExact(accel_label, accel_closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_label_refetch$MH() {
        return RuntimeHelper.requireNonNull(constants$2259.const$2,"gtk_accel_label_refetch");
    }
    /**
     * {@snippet :
     * int gtk_accel_label_refetch(struct _GtkAccelLabel* accel_label);
     * }
     */
    public static int gtk_accel_label_refetch(MemorySegment accel_label) {
        var mh$ = gtk_accel_label_refetch$MH();
        try {
            return (int)mh$.invokeExact(accel_label);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_label_set_accel$MH() {
        return RuntimeHelper.requireNonNull(constants$2259.const$3,"gtk_accel_label_set_accel");
    }
    /**
     * {@snippet :
     * void gtk_accel_label_set_accel(struct _GtkAccelLabel* accel_label, unsigned int accelerator_key, enum GdkModifierType accelerator_mods);
     * }
     */
    public static void gtk_accel_label_set_accel(MemorySegment accel_label, int accelerator_key, int accelerator_mods) {
        var mh$ = gtk_accel_label_set_accel$MH();
        try {
            mh$.invokeExact(accel_label, accelerator_key, accelerator_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_label_get_accel$MH() {
        return RuntimeHelper.requireNonNull(constants$2259.const$4,"gtk_accel_label_get_accel");
    }
    /**
     * {@snippet :
     * void gtk_accel_label_get_accel(struct _GtkAccelLabel* accel_label, unsigned int* accelerator_key, enum GdkModifierType* accelerator_mods);
     * }
     */
    public static void gtk_accel_label_get_accel(MemorySegment accel_label, MemorySegment accelerator_key, MemorySegment accelerator_mods) {
        var mh$ = gtk_accel_label_get_accel$MH();
        try {
            mh$.invokeExact(accel_label, accelerator_key, accelerator_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gtk_accel_label_class_get_accelerator_label$MH() {
        return RuntimeHelper.requireNonNull(constants$2259.const$5,"_gtk_accel_label_class_get_accelerator_label");
    }
    /**
     * {@snippet :
     * char* _gtk_accel_label_class_get_accelerator_label(struct _GtkAccelLabelClass* klass, unsigned int accelerator_key, enum GdkModifierType accelerator_mods);
     * }
     */
    public static MemorySegment _gtk_accel_label_class_get_accelerator_label(MemorySegment klass, int accelerator_key, int accelerator_mods) {
        var mh$ = _gtk_accel_label_class_get_accelerator_label$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(klass, accelerator_key, accelerator_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkAccelLabel* GtkAccelLabel_autoptr;
     * }
     */
    public static final AddressLayout GtkAccelLabel_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GtkAccelLabel_listautoptr;
     * }
     */
    public static final AddressLayout GtkAccelLabel_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkAccelLabel_slistautoptr;
     * }
     */
    public static final AddressLayout GtkAccelLabel_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkAccelLabel_queueautoptr;
     * }
     */
    public static final AddressLayout GtkAccelLabel_queueautoptr = RuntimeHelper.POINTER;
    public static MethodHandle gtk_accel_map_add_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$2260.const$2,"gtk_accel_map_add_entry");
    }
    /**
     * {@snippet :
     * void gtk_accel_map_add_entry(char* accel_path, unsigned int accel_key, enum GdkModifierType accel_mods);
     * }
     */
    public static void gtk_accel_map_add_entry(MemorySegment accel_path, int accel_key, int accel_mods) {
        var mh$ = gtk_accel_map_add_entry$MH();
        try {
            mh$.invokeExact(accel_path, accel_key, accel_mods);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_map_lookup_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$2260.const$3,"gtk_accel_map_lookup_entry");
    }
    /**
     * {@snippet :
     * int gtk_accel_map_lookup_entry(char* accel_path, struct _GtkAccelKey* key);
     * }
     */
    public static int gtk_accel_map_lookup_entry(MemorySegment accel_path, MemorySegment key) {
        var mh$ = gtk_accel_map_lookup_entry$MH();
        try {
            return (int)mh$.invokeExact(accel_path, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_map_change_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$2260.const$4,"gtk_accel_map_change_entry");
    }
    /**
     * {@snippet :
     * int gtk_accel_map_change_entry(char* accel_path, unsigned int accel_key, enum GdkModifierType accel_mods, int replace);
     * }
     */
    public static int gtk_accel_map_change_entry(MemorySegment accel_path, int accel_key, int accel_mods, int replace) {
        var mh$ = gtk_accel_map_change_entry$MH();
        try {
            return (int)mh$.invokeExact(accel_path, accel_key, accel_mods, replace);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_map_load$MH() {
        return RuntimeHelper.requireNonNull(constants$2260.const$5,"gtk_accel_map_load");
    }
    /**
     * {@snippet :
     * void gtk_accel_map_load(char* file_name);
     * }
     */
    public static void gtk_accel_map_load(MemorySegment file_name) {
        var mh$ = gtk_accel_map_load$MH();
        try {
            mh$.invokeExact(file_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_map_save$MH() {
        return RuntimeHelper.requireNonNull(constants$2261.const$0,"gtk_accel_map_save");
    }
    /**
     * {@snippet :
     * void gtk_accel_map_save(char* file_name);
     * }
     */
    public static void gtk_accel_map_save(MemorySegment file_name) {
        var mh$ = gtk_accel_map_save$MH();
        try {
            mh$.invokeExact(file_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_map_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$2261.const$2,"gtk_accel_map_foreach");
    }
    /**
     * {@snippet :
     * void gtk_accel_map_foreach(void* data, void (*foreach_func)(void*,char*,unsigned int,enum GdkModifierType,int));
     * }
     */
    public static void gtk_accel_map_foreach(MemorySegment data, MemorySegment foreach_func) {
        var mh$ = gtk_accel_map_foreach$MH();
        try {
            mh$.invokeExact(data, foreach_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_map_load_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$2261.const$3,"gtk_accel_map_load_fd");
    }
    /**
     * {@snippet :
     * void gtk_accel_map_load_fd(int fd);
     * }
     */
    public static void gtk_accel_map_load_fd(int fd) {
        var mh$ = gtk_accel_map_load_fd$MH();
        try {
            mh$.invokeExact(fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_map_load_scanner$MH() {
        return RuntimeHelper.requireNonNull(constants$2261.const$4,"gtk_accel_map_load_scanner");
    }
    /**
     * {@snippet :
     * void gtk_accel_map_load_scanner(struct _GScanner* scanner);
     * }
     */
    public static void gtk_accel_map_load_scanner(MemorySegment scanner) {
        var mh$ = gtk_accel_map_load_scanner$MH();
        try {
            mh$.invokeExact(scanner);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_map_save_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$2261.const$5,"gtk_accel_map_save_fd");
    }
    /**
     * {@snippet :
     * void gtk_accel_map_save_fd(int fd);
     * }
     */
    public static void gtk_accel_map_save_fd(int fd) {
        var mh$ = gtk_accel_map_save_fd$MH();
        try {
            mh$.invokeExact(fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_map_lock_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2262.const$0,"gtk_accel_map_lock_path");
    }
    /**
     * {@snippet :
     * void gtk_accel_map_lock_path(char* accel_path);
     * }
     */
    public static void gtk_accel_map_lock_path(MemorySegment accel_path) {
        var mh$ = gtk_accel_map_lock_path$MH();
        try {
            mh$.invokeExact(accel_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_map_unlock_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2262.const$1,"gtk_accel_map_unlock_path");
    }
    /**
     * {@snippet :
     * void gtk_accel_map_unlock_path(char* accel_path);
     * }
     */
    public static void gtk_accel_map_unlock_path(MemorySegment accel_path) {
        var mh$ = gtk_accel_map_unlock_path$MH();
        try {
            mh$.invokeExact(accel_path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_map_add_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$2262.const$2,"gtk_accel_map_add_filter");
    }
    /**
     * {@snippet :
     * void gtk_accel_map_add_filter(char* filter_pattern);
     * }
     */
    public static void gtk_accel_map_add_filter(MemorySegment filter_pattern) {
        var mh$ = gtk_accel_map_add_filter$MH();
        try {
            mh$.invokeExact(filter_pattern);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_map_foreach_unfiltered$MH() {
        return RuntimeHelper.requireNonNull(constants$2262.const$4,"gtk_accel_map_foreach_unfiltered");
    }
    /**
     * {@snippet :
     * void gtk_accel_map_foreach_unfiltered(void* data, void (*foreach_func)(void*,char*,unsigned int,enum GdkModifierType,int));
     * }
     */
    public static void gtk_accel_map_foreach_unfiltered(MemorySegment data, MemorySegment foreach_func) {
        var mh$ = gtk_accel_map_foreach_unfiltered$MH();
        try {
            mh$.invokeExact(data, foreach_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_map_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2262.const$5,"gtk_accel_map_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_accel_map_get_type();
     * }
     */
    public static long gtk_accel_map_get_type() {
        var mh$ = gtk_accel_map_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accel_map_get$MH() {
        return RuntimeHelper.requireNonNull(constants$2263.const$0,"gtk_accel_map_get");
    }
    /**
     * {@snippet :
     * struct _GtkAccelMap* gtk_accel_map_get();
     * }
     */
    public static MemorySegment gtk_accel_map_get() {
        var mh$ = gtk_accel_map_get$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _GtkAccelMap* GtkAccelMap_autoptr;
     * }
     */
    public static final AddressLayout GtkAccelMap_autoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GList* GtkAccelMap_listautoptr;
     * }
     */
    public static final AddressLayout GtkAccelMap_listautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GSList* GtkAccelMap_slistautoptr;
     * }
     */
    public static final AddressLayout GtkAccelMap_slistautoptr = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GQueue* GtkAccelMap_queueautoptr;
     * }
     */
    public static final AddressLayout GtkAccelMap_queueautoptr = RuntimeHelper.POINTER;
    public static MethodHandle gtk_accessible_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2265.const$2,"gtk_accessible_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_accessible_get_type();
     * }
     */
    public static long gtk_accessible_get_type() {
        var mh$ = gtk_accessible_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accessible_set_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2265.const$3,"gtk_accessible_set_widget");
    }
    /**
     * {@snippet :
     * void gtk_accessible_set_widget(struct _GtkAccessible* accessible, struct _GtkWidget* widget);
     * }
     */
    public static void gtk_accessible_set_widget(MemorySegment accessible, MemorySegment widget) {
        var mh$ = gtk_accessible_set_widget$MH();
        try {
            mh$.invokeExact(accessible, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accessible_get_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2265.const$4,"gtk_accessible_get_widget");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_accessible_get_widget(struct _GtkAccessible* accessible);
     * }
     */
    public static MemorySegment gtk_accessible_get_widget(MemorySegment accessible) {
        var mh$ = gtk_accessible_get_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_accessible_connect_widget_destroyed$MH() {
        return RuntimeHelper.requireNonNull(constants$2265.const$5,"gtk_accessible_connect_widget_destroyed");
    }
    /**
     * {@snippet :
     * void gtk_accessible_connect_widget_destroyed(struct _GtkAccessible* accessible);
     * }
     */
    public static void gtk_accessible_connect_widget_destroyed(MemorySegment accessible) {
        var mh$ = gtk_accessible_connect_widget_destroyed$MH();
        try {
            mh$.invokeExact(accessible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_actionable_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2267.const$3,"gtk_actionable_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_actionable_get_type();
     * }
     */
    public static long gtk_actionable_get_type() {
        var mh$ = gtk_actionable_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_actionable_get_action_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2267.const$4,"gtk_actionable_get_action_name");
    }
    /**
     * {@snippet :
     * char* gtk_actionable_get_action_name(struct _GtkActionable* actionable);
     * }
     */
    public static MemorySegment gtk_actionable_get_action_name(MemorySegment actionable) {
        var mh$ = gtk_actionable_get_action_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(actionable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_actionable_set_action_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2267.const$5,"gtk_actionable_set_action_name");
    }
    /**
     * {@snippet :
     * void gtk_actionable_set_action_name(struct _GtkActionable* actionable, char* action_name);
     * }
     */
    public static void gtk_actionable_set_action_name(MemorySegment actionable, MemorySegment action_name) {
        var mh$ = gtk_actionable_set_action_name$MH();
        try {
            mh$.invokeExact(actionable, action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_actionable_get_action_target_value$MH() {
        return RuntimeHelper.requireNonNull(constants$2268.const$0,"gtk_actionable_get_action_target_value");
    }
    /**
     * {@snippet :
     * struct _GVariant* gtk_actionable_get_action_target_value(struct _GtkActionable* actionable);
     * }
     */
    public static MemorySegment gtk_actionable_get_action_target_value(MemorySegment actionable) {
        var mh$ = gtk_actionable_get_action_target_value$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(actionable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_actionable_set_action_target_value$MH() {
        return RuntimeHelper.requireNonNull(constants$2268.const$1,"gtk_actionable_set_action_target_value");
    }
    /**
     * {@snippet :
     * void gtk_actionable_set_action_target_value(struct _GtkActionable* actionable, struct _GVariant* target_value);
     * }
     */
    public static void gtk_actionable_set_action_target_value(MemorySegment actionable, MemorySegment target_value) {
        var mh$ = gtk_actionable_set_action_target_value$MH();
        try {
            mh$.invokeExact(actionable, target_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_actionable_set_action_target$MH() {
        return RuntimeHelper.requireNonNull(constants$2268.const$2,"gtk_actionable_set_action_target");
    }
    /**
     * {@snippet :
     * void gtk_actionable_set_action_target(struct _GtkActionable* actionable, char* format_string,...);
     * }
     */
    public static void gtk_actionable_set_action_target(MemorySegment actionable, MemorySegment format_string, Object... x2) {
        var mh$ = gtk_actionable_set_action_target$MH();
        try {
            mh$.invokeExact(actionable, format_string, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_actionable_set_detailed_action_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2268.const$3,"gtk_actionable_set_detailed_action_name");
    }
    /**
     * {@snippet :
     * void gtk_actionable_set_detailed_action_name(struct _GtkActionable* actionable, char* detailed_action_name);
     * }
     */
    public static void gtk_actionable_set_detailed_action_name(MemorySegment actionable, MemorySegment detailed_action_name) {
        var mh$ = gtk_actionable_set_detailed_action_name$MH();
        try {
            mh$.invokeExact(actionable, detailed_action_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_action_bar_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2270.const$2,"gtk_action_bar_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_action_bar_get_type();
     * }
     */
    public static long gtk_action_bar_get_type() {
        var mh$ = gtk_action_bar_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_action_bar_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2270.const$3,"gtk_action_bar_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_action_bar_new();
     * }
     */
    public static MemorySegment gtk_action_bar_new() {
        var mh$ = gtk_action_bar_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_action_bar_get_center_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2270.const$4,"gtk_action_bar_get_center_widget");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_action_bar_get_center_widget(struct _GtkActionBar* action_bar);
     * }
     */
    public static MemorySegment gtk_action_bar_get_center_widget(MemorySegment action_bar) {
        var mh$ = gtk_action_bar_get_center_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(action_bar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_action_bar_set_center_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2270.const$5,"gtk_action_bar_set_center_widget");
    }
    /**
     * {@snippet :
     * void gtk_action_bar_set_center_widget(struct _GtkActionBar* action_bar, struct _GtkWidget* center_widget);
     * }
     */
    public static void gtk_action_bar_set_center_widget(MemorySegment action_bar, MemorySegment center_widget) {
        var mh$ = gtk_action_bar_set_center_widget$MH();
        try {
            mh$.invokeExact(action_bar, center_widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_action_bar_pack_start$MH() {
        return RuntimeHelper.requireNonNull(constants$2271.const$0,"gtk_action_bar_pack_start");
    }
    /**
     * {@snippet :
     * void gtk_action_bar_pack_start(struct _GtkActionBar* action_bar, struct _GtkWidget* child);
     * }
     */
    public static void gtk_action_bar_pack_start(MemorySegment action_bar, MemorySegment child) {
        var mh$ = gtk_action_bar_pack_start$MH();
        try {
            mh$.invokeExact(action_bar, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_action_bar_pack_end$MH() {
        return RuntimeHelper.requireNonNull(constants$2271.const$1,"gtk_action_bar_pack_end");
    }
    /**
     * {@snippet :
     * void gtk_action_bar_pack_end(struct _GtkActionBar* action_bar, struct _GtkWidget* child);
     * }
     */
    public static void gtk_action_bar_pack_end(MemorySegment action_bar, MemorySegment child) {
        var mh$ = gtk_action_bar_pack_end$MH();
        try {
            mh$.invokeExact(action_bar, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_adjustment_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2273.const$5,"gtk_adjustment_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_adjustment_get_type();
     * }
     */
    public static long gtk_adjustment_get_type() {
        var mh$ = gtk_adjustment_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_adjustment_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2274.const$0,"gtk_adjustment_new");
    }
    /**
     * {@snippet :
     * struct _GtkAdjustment* gtk_adjustment_new(double value, double lower, double upper, double step_increment, double page_increment, double page_size);
     * }
     */
    public static MemorySegment gtk_adjustment_new(double value, double lower, double upper, double step_increment, double page_increment, double page_size) {
        var mh$ = gtk_adjustment_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(value, lower, upper, step_increment, page_increment, page_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_adjustment_changed$MH() {
        return RuntimeHelper.requireNonNull(constants$2274.const$1,"gtk_adjustment_changed");
    }
    /**
     * {@snippet :
     * void gtk_adjustment_changed(struct _GtkAdjustment* adjustment);
     * }
     */
    public static void gtk_adjustment_changed(MemorySegment adjustment) {
        var mh$ = gtk_adjustment_changed$MH();
        try {
            mh$.invokeExact(adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_adjustment_value_changed$MH() {
        return RuntimeHelper.requireNonNull(constants$2274.const$2,"gtk_adjustment_value_changed");
    }
    /**
     * {@snippet :
     * void gtk_adjustment_value_changed(struct _GtkAdjustment* adjustment);
     * }
     */
    public static void gtk_adjustment_value_changed(MemorySegment adjustment) {
        var mh$ = gtk_adjustment_value_changed$MH();
        try {
            mh$.invokeExact(adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_adjustment_clamp_page$MH() {
        return RuntimeHelper.requireNonNull(constants$2274.const$3,"gtk_adjustment_clamp_page");
    }
    /**
     * {@snippet :
     * void gtk_adjustment_clamp_page(struct _GtkAdjustment* adjustment, double lower, double upper);
     * }
     */
    public static void gtk_adjustment_clamp_page(MemorySegment adjustment, double lower, double upper) {
        var mh$ = gtk_adjustment_clamp_page$MH();
        try {
            mh$.invokeExact(adjustment, lower, upper);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_adjustment_get_value$MH() {
        return RuntimeHelper.requireNonNull(constants$2274.const$4,"gtk_adjustment_get_value");
    }
    /**
     * {@snippet :
     * double gtk_adjustment_get_value(struct _GtkAdjustment* adjustment);
     * }
     */
    public static double gtk_adjustment_get_value(MemorySegment adjustment) {
        var mh$ = gtk_adjustment_get_value$MH();
        try {
            return (double)mh$.invokeExact(adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_adjustment_set_value$MH() {
        return RuntimeHelper.requireNonNull(constants$2274.const$5,"gtk_adjustment_set_value");
    }
    /**
     * {@snippet :
     * void gtk_adjustment_set_value(struct _GtkAdjustment* adjustment, double value);
     * }
     */
    public static void gtk_adjustment_set_value(MemorySegment adjustment, double value) {
        var mh$ = gtk_adjustment_set_value$MH();
        try {
            mh$.invokeExact(adjustment, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_adjustment_get_lower$MH() {
        return RuntimeHelper.requireNonNull(constants$2275.const$0,"gtk_adjustment_get_lower");
    }
    /**
     * {@snippet :
     * double gtk_adjustment_get_lower(struct _GtkAdjustment* adjustment);
     * }
     */
    public static double gtk_adjustment_get_lower(MemorySegment adjustment) {
        var mh$ = gtk_adjustment_get_lower$MH();
        try {
            return (double)mh$.invokeExact(adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_adjustment_set_lower$MH() {
        return RuntimeHelper.requireNonNull(constants$2275.const$1,"gtk_adjustment_set_lower");
    }
    /**
     * {@snippet :
     * void gtk_adjustment_set_lower(struct _GtkAdjustment* adjustment, double lower);
     * }
     */
    public static void gtk_adjustment_set_lower(MemorySegment adjustment, double lower) {
        var mh$ = gtk_adjustment_set_lower$MH();
        try {
            mh$.invokeExact(adjustment, lower);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_adjustment_get_upper$MH() {
        return RuntimeHelper.requireNonNull(constants$2275.const$2,"gtk_adjustment_get_upper");
    }
    /**
     * {@snippet :
     * double gtk_adjustment_get_upper(struct _GtkAdjustment* adjustment);
     * }
     */
    public static double gtk_adjustment_get_upper(MemorySegment adjustment) {
        var mh$ = gtk_adjustment_get_upper$MH();
        try {
            return (double)mh$.invokeExact(adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_adjustment_set_upper$MH() {
        return RuntimeHelper.requireNonNull(constants$2275.const$3,"gtk_adjustment_set_upper");
    }
    /**
     * {@snippet :
     * void gtk_adjustment_set_upper(struct _GtkAdjustment* adjustment, double upper);
     * }
     */
    public static void gtk_adjustment_set_upper(MemorySegment adjustment, double upper) {
        var mh$ = gtk_adjustment_set_upper$MH();
        try {
            mh$.invokeExact(adjustment, upper);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_adjustment_get_step_increment$MH() {
        return RuntimeHelper.requireNonNull(constants$2275.const$4,"gtk_adjustment_get_step_increment");
    }
    /**
     * {@snippet :
     * double gtk_adjustment_get_step_increment(struct _GtkAdjustment* adjustment);
     * }
     */
    public static double gtk_adjustment_get_step_increment(MemorySegment adjustment) {
        var mh$ = gtk_adjustment_get_step_increment$MH();
        try {
            return (double)mh$.invokeExact(adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_adjustment_set_step_increment$MH() {
        return RuntimeHelper.requireNonNull(constants$2275.const$5,"gtk_adjustment_set_step_increment");
    }
    /**
     * {@snippet :
     * void gtk_adjustment_set_step_increment(struct _GtkAdjustment* adjustment, double step_increment);
     * }
     */
    public static void gtk_adjustment_set_step_increment(MemorySegment adjustment, double step_increment) {
        var mh$ = gtk_adjustment_set_step_increment$MH();
        try {
            mh$.invokeExact(adjustment, step_increment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_adjustment_get_page_increment$MH() {
        return RuntimeHelper.requireNonNull(constants$2276.const$0,"gtk_adjustment_get_page_increment");
    }
    /**
     * {@snippet :
     * double gtk_adjustment_get_page_increment(struct _GtkAdjustment* adjustment);
     * }
     */
    public static double gtk_adjustment_get_page_increment(MemorySegment adjustment) {
        var mh$ = gtk_adjustment_get_page_increment$MH();
        try {
            return (double)mh$.invokeExact(adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_adjustment_set_page_increment$MH() {
        return RuntimeHelper.requireNonNull(constants$2276.const$1,"gtk_adjustment_set_page_increment");
    }
    /**
     * {@snippet :
     * void gtk_adjustment_set_page_increment(struct _GtkAdjustment* adjustment, double page_increment);
     * }
     */
    public static void gtk_adjustment_set_page_increment(MemorySegment adjustment, double page_increment) {
        var mh$ = gtk_adjustment_set_page_increment$MH();
        try {
            mh$.invokeExact(adjustment, page_increment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_adjustment_get_page_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2276.const$2,"gtk_adjustment_get_page_size");
    }
    /**
     * {@snippet :
     * double gtk_adjustment_get_page_size(struct _GtkAdjustment* adjustment);
     * }
     */
    public static double gtk_adjustment_get_page_size(MemorySegment adjustment) {
        var mh$ = gtk_adjustment_get_page_size$MH();
        try {
            return (double)mh$.invokeExact(adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_adjustment_set_page_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2276.const$3,"gtk_adjustment_set_page_size");
    }
    /**
     * {@snippet :
     * void gtk_adjustment_set_page_size(struct _GtkAdjustment* adjustment, double page_size);
     * }
     */
    public static void gtk_adjustment_set_page_size(MemorySegment adjustment, double page_size) {
        var mh$ = gtk_adjustment_set_page_size$MH();
        try {
            mh$.invokeExact(adjustment, page_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_adjustment_configure$MH() {
        return RuntimeHelper.requireNonNull(constants$2276.const$4,"gtk_adjustment_configure");
    }
    /**
     * {@snippet :
     * void gtk_adjustment_configure(struct _GtkAdjustment* adjustment, double value, double lower, double upper, double step_increment, double page_increment, double page_size);
     * }
     */
    public static void gtk_adjustment_configure(MemorySegment adjustment, double value, double lower, double upper, double step_increment, double page_increment, double page_size) {
        var mh$ = gtk_adjustment_configure$MH();
        try {
            mh$.invokeExact(adjustment, value, lower, upper, step_increment, page_increment, page_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_adjustment_get_minimum_increment$MH() {
        return RuntimeHelper.requireNonNull(constants$2276.const$5,"gtk_adjustment_get_minimum_increment");
    }
    /**
     * {@snippet :
     * double gtk_adjustment_get_minimum_increment(struct _GtkAdjustment* adjustment);
     * }
     */
    public static double gtk_adjustment_get_minimum_increment(MemorySegment adjustment) {
        var mh$ = gtk_adjustment_get_minimum_increment$MH();
        try {
            return (double)mh$.invokeExact(adjustment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2277.const$0,"gtk_app_chooser_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_app_chooser_get_type();
     * }
     */
    public static long gtk_app_chooser_get_type() {
        var mh$ = gtk_app_chooser_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_get_app_info$MH() {
        return RuntimeHelper.requireNonNull(constants$2277.const$1,"gtk_app_chooser_get_app_info");
    }
    /**
     * {@snippet :
     * struct _GAppInfo* gtk_app_chooser_get_app_info(struct _GtkAppChooser* self);
     * }
     */
    public static MemorySegment gtk_app_chooser_get_app_info(MemorySegment self) {
        var mh$ = gtk_app_chooser_get_app_info$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_get_content_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2277.const$2,"gtk_app_chooser_get_content_type");
    }
    /**
     * {@snippet :
     * char* gtk_app_chooser_get_content_type(struct _GtkAppChooser* self);
     * }
     */
    public static MemorySegment gtk_app_chooser_get_content_type(MemorySegment self) {
        var mh$ = gtk_app_chooser_get_content_type$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_refresh$MH() {
        return RuntimeHelper.requireNonNull(constants$2277.const$3,"gtk_app_chooser_refresh");
    }
    /**
     * {@snippet :
     * void gtk_app_chooser_refresh(struct _GtkAppChooser* self);
     * }
     */
    public static void gtk_app_chooser_refresh(MemorySegment self) {
        var mh$ = gtk_app_chooser_refresh$MH();
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_dialog_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2278.const$1,"gtk_app_chooser_dialog_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_app_chooser_dialog_get_type();
     * }
     */
    public static long gtk_app_chooser_dialog_get_type() {
        var mh$ = gtk_app_chooser_dialog_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_dialog_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2278.const$2,"gtk_app_chooser_dialog_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_app_chooser_dialog_new(struct _GtkWindow* parent, enum GtkDialogFlags flags, struct _GFile* file);
     * }
     */
    public static MemorySegment gtk_app_chooser_dialog_new(MemorySegment parent, int flags, MemorySegment file) {
        var mh$ = gtk_app_chooser_dialog_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(parent, flags, file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_dialog_new_for_content_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2278.const$3,"gtk_app_chooser_dialog_new_for_content_type");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_app_chooser_dialog_new_for_content_type(struct _GtkWindow* parent, enum GtkDialogFlags flags, char* content_type);
     * }
     */
    public static MemorySegment gtk_app_chooser_dialog_new_for_content_type(MemorySegment parent, int flags, MemorySegment content_type) {
        var mh$ = gtk_app_chooser_dialog_new_for_content_type$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(parent, flags, content_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_dialog_get_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2278.const$4,"gtk_app_chooser_dialog_get_widget");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_app_chooser_dialog_get_widget(struct _GtkAppChooserDialog* self);
     * }
     */
    public static MemorySegment gtk_app_chooser_dialog_get_widget(MemorySegment self) {
        var mh$ = gtk_app_chooser_dialog_get_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_dialog_set_heading$MH() {
        return RuntimeHelper.requireNonNull(constants$2278.const$5,"gtk_app_chooser_dialog_set_heading");
    }
    /**
     * {@snippet :
     * void gtk_app_chooser_dialog_set_heading(struct _GtkAppChooserDialog* self, char* heading);
     * }
     */
    public static void gtk_app_chooser_dialog_set_heading(MemorySegment self, MemorySegment heading) {
        var mh$ = gtk_app_chooser_dialog_set_heading$MH();
        try {
            mh$.invokeExact(self, heading);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_dialog_get_heading$MH() {
        return RuntimeHelper.requireNonNull(constants$2279.const$0,"gtk_app_chooser_dialog_get_heading");
    }
    /**
     * {@snippet :
     * char* gtk_app_chooser_dialog_get_heading(struct _GtkAppChooserDialog* self);
     * }
     */
    public static MemorySegment gtk_app_chooser_dialog_get_heading(MemorySegment self) {
        var mh$ = gtk_app_chooser_dialog_get_heading$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_box_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2281.const$0,"gtk_box_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_box_get_type();
     * }
     */
    public static long gtk_box_get_type() {
        var mh$ = gtk_box_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_box_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2281.const$1,"gtk_box_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_box_new(enum GtkOrientation orientation, int spacing);
     * }
     */
    public static MemorySegment gtk_box_new(int orientation, int spacing) {
        var mh$ = gtk_box_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(orientation, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_box_pack_start$MH() {
        return RuntimeHelper.requireNonNull(constants$2281.const$2,"gtk_box_pack_start");
    }
    /**
     * {@snippet :
     * void gtk_box_pack_start(struct _GtkBox* box, struct _GtkWidget* child, int expand, int fill, unsigned int padding);
     * }
     */
    public static void gtk_box_pack_start(MemorySegment box, MemorySegment child, int expand, int fill, int padding) {
        var mh$ = gtk_box_pack_start$MH();
        try {
            mh$.invokeExact(box, child, expand, fill, padding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_box_pack_end$MH() {
        return RuntimeHelper.requireNonNull(constants$2281.const$3,"gtk_box_pack_end");
    }
    /**
     * {@snippet :
     * void gtk_box_pack_end(struct _GtkBox* box, struct _GtkWidget* child, int expand, int fill, unsigned int padding);
     * }
     */
    public static void gtk_box_pack_end(MemorySegment box, MemorySegment child, int expand, int fill, int padding) {
        var mh$ = gtk_box_pack_end$MH();
        try {
            mh$.invokeExact(box, child, expand, fill, padding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_box_set_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$2281.const$4,"gtk_box_set_homogeneous");
    }
    /**
     * {@snippet :
     * void gtk_box_set_homogeneous(struct _GtkBox* box, int homogeneous);
     * }
     */
    public static void gtk_box_set_homogeneous(MemorySegment box, int homogeneous) {
        var mh$ = gtk_box_set_homogeneous$MH();
        try {
            mh$.invokeExact(box, homogeneous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_box_get_homogeneous$MH() {
        return RuntimeHelper.requireNonNull(constants$2281.const$5,"gtk_box_get_homogeneous");
    }
    /**
     * {@snippet :
     * int gtk_box_get_homogeneous(struct _GtkBox* box);
     * }
     */
    public static int gtk_box_get_homogeneous(MemorySegment box) {
        var mh$ = gtk_box_get_homogeneous$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_box_set_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2282.const$0,"gtk_box_set_spacing");
    }
    /**
     * {@snippet :
     * void gtk_box_set_spacing(struct _GtkBox* box, int spacing);
     * }
     */
    public static void gtk_box_set_spacing(MemorySegment box, int spacing) {
        var mh$ = gtk_box_set_spacing$MH();
        try {
            mh$.invokeExact(box, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_box_get_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2282.const$1,"gtk_box_get_spacing");
    }
    /**
     * {@snippet :
     * int gtk_box_get_spacing(struct _GtkBox* box);
     * }
     */
    public static int gtk_box_get_spacing(MemorySegment box) {
        var mh$ = gtk_box_get_spacing$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_box_set_baseline_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2282.const$2,"gtk_box_set_baseline_position");
    }
    /**
     * {@snippet :
     * void gtk_box_set_baseline_position(struct _GtkBox* box, enum GtkBaselinePosition position);
     * }
     */
    public static void gtk_box_set_baseline_position(MemorySegment box, int position) {
        var mh$ = gtk_box_set_baseline_position$MH();
        try {
            mh$.invokeExact(box, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_box_get_baseline_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2282.const$3,"gtk_box_get_baseline_position");
    }
    /**
     * {@snippet :
     * enum GtkBaselinePosition gtk_box_get_baseline_position(struct _GtkBox* box);
     * }
     */
    public static int gtk_box_get_baseline_position(MemorySegment box) {
        var mh$ = gtk_box_get_baseline_position$MH();
        try {
            return (int)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_box_reorder_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2282.const$4,"gtk_box_reorder_child");
    }
    /**
     * {@snippet :
     * void gtk_box_reorder_child(struct _GtkBox* box, struct _GtkWidget* child, int position);
     * }
     */
    public static void gtk_box_reorder_child(MemorySegment box, MemorySegment child, int position) {
        var mh$ = gtk_box_reorder_child$MH();
        try {
            mh$.invokeExact(box, child, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_box_query_child_packing$MH() {
        return RuntimeHelper.requireNonNull(constants$2282.const$5,"gtk_box_query_child_packing");
    }
    /**
     * {@snippet :
     * void gtk_box_query_child_packing(struct _GtkBox* box, struct _GtkWidget* child, int* expand, int* fill, unsigned int* padding, enum GtkPackType* pack_type);
     * }
     */
    public static void gtk_box_query_child_packing(MemorySegment box, MemorySegment child, MemorySegment expand, MemorySegment fill, MemorySegment padding, MemorySegment pack_type) {
        var mh$ = gtk_box_query_child_packing$MH();
        try {
            mh$.invokeExact(box, child, expand, fill, padding, pack_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_box_set_child_packing$MH() {
        return RuntimeHelper.requireNonNull(constants$2283.const$0,"gtk_box_set_child_packing");
    }
    /**
     * {@snippet :
     * void gtk_box_set_child_packing(struct _GtkBox* box, struct _GtkWidget* child, int expand, int fill, unsigned int padding, enum GtkPackType pack_type);
     * }
     */
    public static void gtk_box_set_child_packing(MemorySegment box, MemorySegment child, int expand, int fill, int padding, int pack_type) {
        var mh$ = gtk_box_set_child_packing$MH();
        try {
            mh$.invokeExact(box, child, expand, fill, padding, pack_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_box_set_center_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2283.const$1,"gtk_box_set_center_widget");
    }
    /**
     * {@snippet :
     * void gtk_box_set_center_widget(struct _GtkBox* box, struct _GtkWidget* widget);
     * }
     */
    public static void gtk_box_set_center_widget(MemorySegment box, MemorySegment widget) {
        var mh$ = gtk_box_set_center_widget$MH();
        try {
            mh$.invokeExact(box, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_box_get_center_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2283.const$2,"gtk_box_get_center_widget");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_box_get_center_widget(struct _GtkBox* box);
     * }
     */
    public static MemorySegment gtk_box_get_center_widget(MemorySegment box) {
        var mh$ = gtk_box_get_center_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(box);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_widget_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2285.const$0,"gtk_app_chooser_widget_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_app_chooser_widget_get_type();
     * }
     */
    public static long gtk_app_chooser_widget_get_type() {
        var mh$ = gtk_app_chooser_widget_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_widget_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2285.const$1,"gtk_app_chooser_widget_new");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_app_chooser_widget_new(char* content_type);
     * }
     */
    public static MemorySegment gtk_app_chooser_widget_new(MemorySegment content_type) {
        var mh$ = gtk_app_chooser_widget_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(content_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_widget_set_show_default$MH() {
        return RuntimeHelper.requireNonNull(constants$2285.const$2,"gtk_app_chooser_widget_set_show_default");
    }
    /**
     * {@snippet :
     * void gtk_app_chooser_widget_set_show_default(struct _GtkAppChooserWidget* self, int setting);
     * }
     */
    public static void gtk_app_chooser_widget_set_show_default(MemorySegment self, int setting) {
        var mh$ = gtk_app_chooser_widget_set_show_default$MH();
        try {
            mh$.invokeExact(self, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_widget_get_show_default$MH() {
        return RuntimeHelper.requireNonNull(constants$2285.const$3,"gtk_app_chooser_widget_get_show_default");
    }
    /**
     * {@snippet :
     * int gtk_app_chooser_widget_get_show_default(struct _GtkAppChooserWidget* self);
     * }
     */
    public static int gtk_app_chooser_widget_get_show_default(MemorySegment self) {
        var mh$ = gtk_app_chooser_widget_get_show_default$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_widget_set_show_recommended$MH() {
        return RuntimeHelper.requireNonNull(constants$2285.const$4,"gtk_app_chooser_widget_set_show_recommended");
    }
    /**
     * {@snippet :
     * void gtk_app_chooser_widget_set_show_recommended(struct _GtkAppChooserWidget* self, int setting);
     * }
     */
    public static void gtk_app_chooser_widget_set_show_recommended(MemorySegment self, int setting) {
        var mh$ = gtk_app_chooser_widget_set_show_recommended$MH();
        try {
            mh$.invokeExact(self, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_widget_get_show_recommended$MH() {
        return RuntimeHelper.requireNonNull(constants$2285.const$5,"gtk_app_chooser_widget_get_show_recommended");
    }
    /**
     * {@snippet :
     * int gtk_app_chooser_widget_get_show_recommended(struct _GtkAppChooserWidget* self);
     * }
     */
    public static int gtk_app_chooser_widget_get_show_recommended(MemorySegment self) {
        var mh$ = gtk_app_chooser_widget_get_show_recommended$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_widget_set_show_fallback$MH() {
        return RuntimeHelper.requireNonNull(constants$2286.const$0,"gtk_app_chooser_widget_set_show_fallback");
    }
    /**
     * {@snippet :
     * void gtk_app_chooser_widget_set_show_fallback(struct _GtkAppChooserWidget* self, int setting);
     * }
     */
    public static void gtk_app_chooser_widget_set_show_fallback(MemorySegment self, int setting) {
        var mh$ = gtk_app_chooser_widget_set_show_fallback$MH();
        try {
            mh$.invokeExact(self, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_widget_get_show_fallback$MH() {
        return RuntimeHelper.requireNonNull(constants$2286.const$1,"gtk_app_chooser_widget_get_show_fallback");
    }
    /**
     * {@snippet :
     * int gtk_app_chooser_widget_get_show_fallback(struct _GtkAppChooserWidget* self);
     * }
     */
    public static int gtk_app_chooser_widget_get_show_fallback(MemorySegment self) {
        var mh$ = gtk_app_chooser_widget_get_show_fallback$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_widget_set_show_other$MH() {
        return RuntimeHelper.requireNonNull(constants$2286.const$2,"gtk_app_chooser_widget_set_show_other");
    }
    /**
     * {@snippet :
     * void gtk_app_chooser_widget_set_show_other(struct _GtkAppChooserWidget* self, int setting);
     * }
     */
    public static void gtk_app_chooser_widget_set_show_other(MemorySegment self, int setting) {
        var mh$ = gtk_app_chooser_widget_set_show_other$MH();
        try {
            mh$.invokeExact(self, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_widget_get_show_other$MH() {
        return RuntimeHelper.requireNonNull(constants$2286.const$3,"gtk_app_chooser_widget_get_show_other");
    }
    /**
     * {@snippet :
     * int gtk_app_chooser_widget_get_show_other(struct _GtkAppChooserWidget* self);
     * }
     */
    public static int gtk_app_chooser_widget_get_show_other(MemorySegment self) {
        var mh$ = gtk_app_chooser_widget_get_show_other$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_widget_set_show_all$MH() {
        return RuntimeHelper.requireNonNull(constants$2286.const$4,"gtk_app_chooser_widget_set_show_all");
    }
    /**
     * {@snippet :
     * void gtk_app_chooser_widget_set_show_all(struct _GtkAppChooserWidget* self, int setting);
     * }
     */
    public static void gtk_app_chooser_widget_set_show_all(MemorySegment self, int setting) {
        var mh$ = gtk_app_chooser_widget_set_show_all$MH();
        try {
            mh$.invokeExact(self, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_widget_get_show_all$MH() {
        return RuntimeHelper.requireNonNull(constants$2286.const$5,"gtk_app_chooser_widget_get_show_all");
    }
    /**
     * {@snippet :
     * int gtk_app_chooser_widget_get_show_all(struct _GtkAppChooserWidget* self);
     * }
     */
    public static int gtk_app_chooser_widget_get_show_all(MemorySegment self) {
        var mh$ = gtk_app_chooser_widget_get_show_all$MH();
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_widget_set_default_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2287.const$0,"gtk_app_chooser_widget_set_default_text");
    }
    /**
     * {@snippet :
     * void gtk_app_chooser_widget_set_default_text(struct _GtkAppChooserWidget* self, char* text);
     * }
     */
    public static void gtk_app_chooser_widget_set_default_text(MemorySegment self, MemorySegment text) {
        var mh$ = gtk_app_chooser_widget_set_default_text$MH();
        try {
            mh$.invokeExact(self, text);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_app_chooser_widget_get_default_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2287.const$1,"gtk_app_chooser_widget_get_default_text");
    }
    /**
     * {@snippet :
     * char* gtk_app_chooser_widget_get_default_text(struct _GtkAppChooserWidget* self);
     * }
     */
    public static MemorySegment gtk_app_chooser_widget_get_default_text(MemorySegment self) {
        var mh$ = gtk_app_chooser_widget_get_default_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkTreeModelFlags.GTK_TREE_MODEL_ITERS_PERSIST = 1;
     * }
     */
    public static int GTK_TREE_MODEL_ITERS_PERSIST() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkTreeModelFlags.GTK_TREE_MODEL_LIST_ONLY = 2;
     * }
     */
    public static int GTK_TREE_MODEL_LIST_ONLY() {
        return (int)2L;
    }
    public static MethodHandle gtk_tree_path_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2295.const$2,"gtk_tree_path_new");
    }
    /**
     * {@snippet :
     * struct _GtkTreePath* gtk_tree_path_new();
     * }
     */
    public static MemorySegment gtk_tree_path_new() {
        var mh$ = gtk_tree_path_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_path_new_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$2295.const$3,"gtk_tree_path_new_from_string");
    }
    /**
     * {@snippet :
     * struct _GtkTreePath* gtk_tree_path_new_from_string(char* path);
     * }
     */
    public static MemorySegment gtk_tree_path_new_from_string(MemorySegment path) {
        var mh$ = gtk_tree_path_new_from_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_path_new_from_indices$MH() {
        return RuntimeHelper.requireNonNull(constants$2295.const$4,"gtk_tree_path_new_from_indices");
    }
    /**
     * {@snippet :
     * struct _GtkTreePath* gtk_tree_path_new_from_indices(int first_index,...);
     * }
     */
    public static MemorySegment gtk_tree_path_new_from_indices(int first_index, Object... x1) {
        var mh$ = gtk_tree_path_new_from_indices$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(first_index, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_path_new_from_indicesv$MH() {
        return RuntimeHelper.requireNonNull(constants$2295.const$5,"gtk_tree_path_new_from_indicesv");
    }
    /**
     * {@snippet :
     * struct _GtkTreePath* gtk_tree_path_new_from_indicesv(int* indices, unsigned long length);
     * }
     */
    public static MemorySegment gtk_tree_path_new_from_indicesv(MemorySegment indices, long length) {
        var mh$ = gtk_tree_path_new_from_indicesv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(indices, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_path_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$2296.const$0,"gtk_tree_path_to_string");
    }
    /**
     * {@snippet :
     * char* gtk_tree_path_to_string(struct _GtkTreePath* path);
     * }
     */
    public static MemorySegment gtk_tree_path_to_string(MemorySegment path) {
        var mh$ = gtk_tree_path_to_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_path_new_first$MH() {
        return RuntimeHelper.requireNonNull(constants$2296.const$1,"gtk_tree_path_new_first");
    }
    /**
     * {@snippet :
     * struct _GtkTreePath* gtk_tree_path_new_first();
     * }
     */
    public static MemorySegment gtk_tree_path_new_first() {
        var mh$ = gtk_tree_path_new_first$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_path_append_index$MH() {
        return RuntimeHelper.requireNonNull(constants$2296.const$2,"gtk_tree_path_append_index");
    }
    /**
     * {@snippet :
     * void gtk_tree_path_append_index(struct _GtkTreePath* path, int index_);
     * }
     */
    public static void gtk_tree_path_append_index(MemorySegment path, int index_) {
        var mh$ = gtk_tree_path_append_index$MH();
        try {
            mh$.invokeExact(path, index_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_path_prepend_index$MH() {
        return RuntimeHelper.requireNonNull(constants$2296.const$3,"gtk_tree_path_prepend_index");
    }
    /**
     * {@snippet :
     * void gtk_tree_path_prepend_index(struct _GtkTreePath* path, int index_);
     * }
     */
    public static void gtk_tree_path_prepend_index(MemorySegment path, int index_) {
        var mh$ = gtk_tree_path_prepend_index$MH();
        try {
            mh$.invokeExact(path, index_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_path_get_depth$MH() {
        return RuntimeHelper.requireNonNull(constants$2296.const$4,"gtk_tree_path_get_depth");
    }
    /**
     * {@snippet :
     * int gtk_tree_path_get_depth(struct _GtkTreePath* path);
     * }
     */
    public static int gtk_tree_path_get_depth(MemorySegment path) {
        var mh$ = gtk_tree_path_get_depth$MH();
        try {
            return (int)mh$.invokeExact(path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_path_get_indices$MH() {
        return RuntimeHelper.requireNonNull(constants$2296.const$5,"gtk_tree_path_get_indices");
    }
    /**
     * {@snippet :
     * int* gtk_tree_path_get_indices(struct _GtkTreePath* path);
     * }
     */
    public static MemorySegment gtk_tree_path_get_indices(MemorySegment path) {
        var mh$ = gtk_tree_path_get_indices$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_path_get_indices_with_depth$MH() {
        return RuntimeHelper.requireNonNull(constants$2297.const$0,"gtk_tree_path_get_indices_with_depth");
    }
    /**
     * {@snippet :
     * int* gtk_tree_path_get_indices_with_depth(struct _GtkTreePath* path, int* depth);
     * }
     */
    public static MemorySegment gtk_tree_path_get_indices_with_depth(MemorySegment path, MemorySegment depth) {
        var mh$ = gtk_tree_path_get_indices_with_depth$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(path, depth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_path_free$MH() {
        return RuntimeHelper.requireNonNull(constants$2297.const$1,"gtk_tree_path_free");
    }
    /**
     * {@snippet :
     * void gtk_tree_path_free(struct _GtkTreePath* path);
     * }
     */
    public static void gtk_tree_path_free(MemorySegment path) {
        var mh$ = gtk_tree_path_free$MH();
        try {
            mh$.invokeExact(path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_path_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$2297.const$2,"gtk_tree_path_copy");
    }
    /**
     * {@snippet :
     * struct _GtkTreePath* gtk_tree_path_copy(struct _GtkTreePath* path);
     * }
     */
    public static MemorySegment gtk_tree_path_copy(MemorySegment path) {
        var mh$ = gtk_tree_path_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_path_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2297.const$3,"gtk_tree_path_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_tree_path_get_type();
     * }
     */
    public static long gtk_tree_path_get_type() {
        var mh$ = gtk_tree_path_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_path_compare$MH() {
        return RuntimeHelper.requireNonNull(constants$2297.const$4,"gtk_tree_path_compare");
    }
    /**
     * {@snippet :
     * int gtk_tree_path_compare(struct _GtkTreePath* a, struct _GtkTreePath* b);
     * }
     */
    public static int gtk_tree_path_compare(MemorySegment a, MemorySegment b) {
        var mh$ = gtk_tree_path_compare$MH();
        try {
            return (int)mh$.invokeExact(a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_path_next$MH() {
        return RuntimeHelper.requireNonNull(constants$2297.const$5,"gtk_tree_path_next");
    }
    /**
     * {@snippet :
     * void gtk_tree_path_next(struct _GtkTreePath* path);
     * }
     */
    public static void gtk_tree_path_next(MemorySegment path) {
        var mh$ = gtk_tree_path_next$MH();
        try {
            mh$.invokeExact(path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_path_prev$MH() {
        return RuntimeHelper.requireNonNull(constants$2298.const$0,"gtk_tree_path_prev");
    }
    /**
     * {@snippet :
     * int gtk_tree_path_prev(struct _GtkTreePath* path);
     * }
     */
    public static int gtk_tree_path_prev(MemorySegment path) {
        var mh$ = gtk_tree_path_prev$MH();
        try {
            return (int)mh$.invokeExact(path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_path_up$MH() {
        return RuntimeHelper.requireNonNull(constants$2298.const$1,"gtk_tree_path_up");
    }
    /**
     * {@snippet :
     * int gtk_tree_path_up(struct _GtkTreePath* path);
     * }
     */
    public static int gtk_tree_path_up(MemorySegment path) {
        var mh$ = gtk_tree_path_up$MH();
        try {
            return (int)mh$.invokeExact(path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_path_down$MH() {
        return RuntimeHelper.requireNonNull(constants$2298.const$2,"gtk_tree_path_down");
    }
    /**
     * {@snippet :
     * void gtk_tree_path_down(struct _GtkTreePath* path);
     * }
     */
    public static void gtk_tree_path_down(MemorySegment path) {
        var mh$ = gtk_tree_path_down$MH();
        try {
            mh$.invokeExact(path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_path_is_ancestor$MH() {
        return RuntimeHelper.requireNonNull(constants$2298.const$3,"gtk_tree_path_is_ancestor");
    }
    /**
     * {@snippet :
     * int gtk_tree_path_is_ancestor(struct _GtkTreePath* path, struct _GtkTreePath* descendant);
     * }
     */
    public static int gtk_tree_path_is_ancestor(MemorySegment path, MemorySegment descendant) {
        var mh$ = gtk_tree_path_is_ancestor$MH();
        try {
            return (int)mh$.invokeExact(path, descendant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_path_is_descendant$MH() {
        return RuntimeHelper.requireNonNull(constants$2298.const$4,"gtk_tree_path_is_descendant");
    }
    /**
     * {@snippet :
     * int gtk_tree_path_is_descendant(struct _GtkTreePath* path, struct _GtkTreePath* ancestor);
     * }
     */
    public static int gtk_tree_path_is_descendant(MemorySegment path, MemorySegment ancestor) {
        var mh$ = gtk_tree_path_is_descendant$MH();
        try {
            return (int)mh$.invokeExact(path, ancestor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_row_reference_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2298.const$5,"gtk_tree_row_reference_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_tree_row_reference_get_type();
     * }
     */
    public static long gtk_tree_row_reference_get_type() {
        var mh$ = gtk_tree_row_reference_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_row_reference_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2299.const$0,"gtk_tree_row_reference_new");
    }
    /**
     * {@snippet :
     * struct _GtkTreeRowReference* gtk_tree_row_reference_new(struct _GtkTreeModel* model, struct _GtkTreePath* path);
     * }
     */
    public static MemorySegment gtk_tree_row_reference_new(MemorySegment model, MemorySegment path) {
        var mh$ = gtk_tree_row_reference_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(model, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_row_reference_new_proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$2299.const$1,"gtk_tree_row_reference_new_proxy");
    }
    /**
     * {@snippet :
     * struct _GtkTreeRowReference* gtk_tree_row_reference_new_proxy(struct _GObject* proxy, struct _GtkTreeModel* model, struct _GtkTreePath* path);
     * }
     */
    public static MemorySegment gtk_tree_row_reference_new_proxy(MemorySegment proxy, MemorySegment model, MemorySegment path) {
        var mh$ = gtk_tree_row_reference_new_proxy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(proxy, model, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_row_reference_get_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2299.const$2,"gtk_tree_row_reference_get_path");
    }
    /**
     * {@snippet :
     * struct _GtkTreePath* gtk_tree_row_reference_get_path(struct _GtkTreeRowReference* reference);
     * }
     */
    public static MemorySegment gtk_tree_row_reference_get_path(MemorySegment reference) {
        var mh$ = gtk_tree_row_reference_get_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(reference);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_row_reference_get_model$MH() {
        return RuntimeHelper.requireNonNull(constants$2299.const$3,"gtk_tree_row_reference_get_model");
    }
    /**
     * {@snippet :
     * struct _GtkTreeModel* gtk_tree_row_reference_get_model(struct _GtkTreeRowReference* reference);
     * }
     */
    public static MemorySegment gtk_tree_row_reference_get_model(MemorySegment reference) {
        var mh$ = gtk_tree_row_reference_get_model$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(reference);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_row_reference_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$2299.const$4,"gtk_tree_row_reference_valid");
    }
    /**
     * {@snippet :
     * int gtk_tree_row_reference_valid(struct _GtkTreeRowReference* reference);
     * }
     */
    public static int gtk_tree_row_reference_valid(MemorySegment reference) {
        var mh$ = gtk_tree_row_reference_valid$MH();
        try {
            return (int)mh$.invokeExact(reference);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_row_reference_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$2299.const$5,"gtk_tree_row_reference_copy");
    }
    /**
     * {@snippet :
     * struct _GtkTreeRowReference* gtk_tree_row_reference_copy(struct _GtkTreeRowReference* reference);
     * }
     */
    public static MemorySegment gtk_tree_row_reference_copy(MemorySegment reference) {
        var mh$ = gtk_tree_row_reference_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(reference);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_row_reference_free$MH() {
        return RuntimeHelper.requireNonNull(constants$2300.const$0,"gtk_tree_row_reference_free");
    }
    /**
     * {@snippet :
     * void gtk_tree_row_reference_free(struct _GtkTreeRowReference* reference);
     * }
     */
    public static void gtk_tree_row_reference_free(MemorySegment reference) {
        var mh$ = gtk_tree_row_reference_free$MH();
        try {
            mh$.invokeExact(reference);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_row_reference_inserted$MH() {
        return RuntimeHelper.requireNonNull(constants$2300.const$1,"gtk_tree_row_reference_inserted");
    }
    /**
     * {@snippet :
     * void gtk_tree_row_reference_inserted(struct _GObject* proxy, struct _GtkTreePath* path);
     * }
     */
    public static void gtk_tree_row_reference_inserted(MemorySegment proxy, MemorySegment path) {
        var mh$ = gtk_tree_row_reference_inserted$MH();
        try {
            mh$.invokeExact(proxy, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_row_reference_deleted$MH() {
        return RuntimeHelper.requireNonNull(constants$2300.const$2,"gtk_tree_row_reference_deleted");
    }
    /**
     * {@snippet :
     * void gtk_tree_row_reference_deleted(struct _GObject* proxy, struct _GtkTreePath* path);
     * }
     */
    public static void gtk_tree_row_reference_deleted(MemorySegment proxy, MemorySegment path) {
        var mh$ = gtk_tree_row_reference_deleted$MH();
        try {
            mh$.invokeExact(proxy, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_row_reference_reordered$MH() {
        return RuntimeHelper.requireNonNull(constants$2300.const$3,"gtk_tree_row_reference_reordered");
    }
    /**
     * {@snippet :
     * void gtk_tree_row_reference_reordered(struct _GObject* proxy, struct _GtkTreePath* path, struct _GtkTreeIter* iter, int* new_order);
     * }
     */
    public static void gtk_tree_row_reference_reordered(MemorySegment proxy, MemorySegment path, MemorySegment iter, MemorySegment new_order) {
        var mh$ = gtk_tree_row_reference_reordered$MH();
        try {
            mh$.invokeExact(proxy, path, iter, new_order);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_iter_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$2300.const$4,"gtk_tree_iter_copy");
    }
    /**
     * {@snippet :
     * struct _GtkTreeIter* gtk_tree_iter_copy(struct _GtkTreeIter* iter);
     * }
     */
    public static MemorySegment gtk_tree_iter_copy(MemorySegment iter) {
        var mh$ = gtk_tree_iter_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_iter_free$MH() {
        return RuntimeHelper.requireNonNull(constants$2300.const$5,"gtk_tree_iter_free");
    }
    /**
     * {@snippet :
     * void gtk_tree_iter_free(struct _GtkTreeIter* iter);
     * }
     */
    public static void gtk_tree_iter_free(MemorySegment iter) {
        var mh$ = gtk_tree_iter_free$MH();
        try {
            mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_iter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2301.const$0,"gtk_tree_iter_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_tree_iter_get_type();
     * }
     */
    public static long gtk_tree_iter_get_type() {
        var mh$ = gtk_tree_iter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2301.const$1,"gtk_tree_model_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_tree_model_get_type();
     * }
     */
    public static long gtk_tree_model_get_type() {
        var mh$ = gtk_tree_model_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$2301.const$2,"gtk_tree_model_get_flags");
    }
    /**
     * {@snippet :
     * enum GtkTreeModelFlags gtk_tree_model_get_flags(struct _GtkTreeModel* tree_model);
     * }
     */
    public static int gtk_tree_model_get_flags(MemorySegment tree_model) {
        var mh$ = gtk_tree_model_get_flags$MH();
        try {
            return (int)mh$.invokeExact(tree_model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_get_n_columns$MH() {
        return RuntimeHelper.requireNonNull(constants$2301.const$3,"gtk_tree_model_get_n_columns");
    }
    /**
     * {@snippet :
     * int gtk_tree_model_get_n_columns(struct _GtkTreeModel* tree_model);
     * }
     */
    public static int gtk_tree_model_get_n_columns(MemorySegment tree_model) {
        var mh$ = gtk_tree_model_get_n_columns$MH();
        try {
            return (int)mh$.invokeExact(tree_model);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_get_column_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2301.const$4,"gtk_tree_model_get_column_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_tree_model_get_column_type(struct _GtkTreeModel* tree_model, int index_);
     * }
     */
    public static long gtk_tree_model_get_column_type(MemorySegment tree_model, int index_) {
        var mh$ = gtk_tree_model_get_column_type$MH();
        try {
            return (long)mh$.invokeExact(tree_model, index_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_get_iter$MH() {
        return RuntimeHelper.requireNonNull(constants$2301.const$5,"gtk_tree_model_get_iter");
    }
    /**
     * {@snippet :
     * int gtk_tree_model_get_iter(struct _GtkTreeModel* tree_model, struct _GtkTreeIter* iter, struct _GtkTreePath* path);
     * }
     */
    public static int gtk_tree_model_get_iter(MemorySegment tree_model, MemorySegment iter, MemorySegment path) {
        var mh$ = gtk_tree_model_get_iter$MH();
        try {
            return (int)mh$.invokeExact(tree_model, iter, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_get_iter_from_string$MH() {
        return RuntimeHelper.requireNonNull(constants$2302.const$0,"gtk_tree_model_get_iter_from_string");
    }
    /**
     * {@snippet :
     * int gtk_tree_model_get_iter_from_string(struct _GtkTreeModel* tree_model, struct _GtkTreeIter* iter, char* path_string);
     * }
     */
    public static int gtk_tree_model_get_iter_from_string(MemorySegment tree_model, MemorySegment iter, MemorySegment path_string) {
        var mh$ = gtk_tree_model_get_iter_from_string$MH();
        try {
            return (int)mh$.invokeExact(tree_model, iter, path_string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_get_string_from_iter$MH() {
        return RuntimeHelper.requireNonNull(constants$2302.const$1,"gtk_tree_model_get_string_from_iter");
    }
    /**
     * {@snippet :
     * char* gtk_tree_model_get_string_from_iter(struct _GtkTreeModel* tree_model, struct _GtkTreeIter* iter);
     * }
     */
    public static MemorySegment gtk_tree_model_get_string_from_iter(MemorySegment tree_model, MemorySegment iter) {
        var mh$ = gtk_tree_model_get_string_from_iter$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_model, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_get_iter_first$MH() {
        return RuntimeHelper.requireNonNull(constants$2302.const$2,"gtk_tree_model_get_iter_first");
    }
    /**
     * {@snippet :
     * int gtk_tree_model_get_iter_first(struct _GtkTreeModel* tree_model, struct _GtkTreeIter* iter);
     * }
     */
    public static int gtk_tree_model_get_iter_first(MemorySegment tree_model, MemorySegment iter) {
        var mh$ = gtk_tree_model_get_iter_first$MH();
        try {
            return (int)mh$.invokeExact(tree_model, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_get_path$MH() {
        return RuntimeHelper.requireNonNull(constants$2302.const$3,"gtk_tree_model_get_path");
    }
    /**
     * {@snippet :
     * struct _GtkTreePath* gtk_tree_model_get_path(struct _GtkTreeModel* tree_model, struct _GtkTreeIter* iter);
     * }
     */
    public static MemorySegment gtk_tree_model_get_path(MemorySegment tree_model, MemorySegment iter) {
        var mh$ = gtk_tree_model_get_path$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_model, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_get_value$MH() {
        return RuntimeHelper.requireNonNull(constants$2302.const$4,"gtk_tree_model_get_value");
    }
    /**
     * {@snippet :
     * void gtk_tree_model_get_value(struct _GtkTreeModel* tree_model, struct _GtkTreeIter* iter, int column, struct _GValue* value);
     * }
     */
    public static void gtk_tree_model_get_value(MemorySegment tree_model, MemorySegment iter, int column, MemorySegment value) {
        var mh$ = gtk_tree_model_get_value$MH();
        try {
            mh$.invokeExact(tree_model, iter, column, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_iter_previous$MH() {
        return RuntimeHelper.requireNonNull(constants$2302.const$5,"gtk_tree_model_iter_previous");
    }
    /**
     * {@snippet :
     * int gtk_tree_model_iter_previous(struct _GtkTreeModel* tree_model, struct _GtkTreeIter* iter);
     * }
     */
    public static int gtk_tree_model_iter_previous(MemorySegment tree_model, MemorySegment iter) {
        var mh$ = gtk_tree_model_iter_previous$MH();
        try {
            return (int)mh$.invokeExact(tree_model, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_iter_next$MH() {
        return RuntimeHelper.requireNonNull(constants$2303.const$0,"gtk_tree_model_iter_next");
    }
    /**
     * {@snippet :
     * int gtk_tree_model_iter_next(struct _GtkTreeModel* tree_model, struct _GtkTreeIter* iter);
     * }
     */
    public static int gtk_tree_model_iter_next(MemorySegment tree_model, MemorySegment iter) {
        var mh$ = gtk_tree_model_iter_next$MH();
        try {
            return (int)mh$.invokeExact(tree_model, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_iter_children$MH() {
        return RuntimeHelper.requireNonNull(constants$2303.const$1,"gtk_tree_model_iter_children");
    }
    /**
     * {@snippet :
     * int gtk_tree_model_iter_children(struct _GtkTreeModel* tree_model, struct _GtkTreeIter* iter, struct _GtkTreeIter* parent);
     * }
     */
    public static int gtk_tree_model_iter_children(MemorySegment tree_model, MemorySegment iter, MemorySegment parent) {
        var mh$ = gtk_tree_model_iter_children$MH();
        try {
            return (int)mh$.invokeExact(tree_model, iter, parent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_iter_has_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2303.const$2,"gtk_tree_model_iter_has_child");
    }
    /**
     * {@snippet :
     * int gtk_tree_model_iter_has_child(struct _GtkTreeModel* tree_model, struct _GtkTreeIter* iter);
     * }
     */
    public static int gtk_tree_model_iter_has_child(MemorySegment tree_model, MemorySegment iter) {
        var mh$ = gtk_tree_model_iter_has_child$MH();
        try {
            return (int)mh$.invokeExact(tree_model, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_iter_n_children$MH() {
        return RuntimeHelper.requireNonNull(constants$2303.const$3,"gtk_tree_model_iter_n_children");
    }
    /**
     * {@snippet :
     * int gtk_tree_model_iter_n_children(struct _GtkTreeModel* tree_model, struct _GtkTreeIter* iter);
     * }
     */
    public static int gtk_tree_model_iter_n_children(MemorySegment tree_model, MemorySegment iter) {
        var mh$ = gtk_tree_model_iter_n_children$MH();
        try {
            return (int)mh$.invokeExact(tree_model, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_iter_nth_child$MH() {
        return RuntimeHelper.requireNonNull(constants$2303.const$4,"gtk_tree_model_iter_nth_child");
    }
    /**
     * {@snippet :
     * int gtk_tree_model_iter_nth_child(struct _GtkTreeModel* tree_model, struct _GtkTreeIter* iter, struct _GtkTreeIter* parent, int n);
     * }
     */
    public static int gtk_tree_model_iter_nth_child(MemorySegment tree_model, MemorySegment iter, MemorySegment parent, int n) {
        var mh$ = gtk_tree_model_iter_nth_child$MH();
        try {
            return (int)mh$.invokeExact(tree_model, iter, parent, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_iter_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$2303.const$5,"gtk_tree_model_iter_parent");
    }
    /**
     * {@snippet :
     * int gtk_tree_model_iter_parent(struct _GtkTreeModel* tree_model, struct _GtkTreeIter* iter, struct _GtkTreeIter* child);
     * }
     */
    public static int gtk_tree_model_iter_parent(MemorySegment tree_model, MemorySegment iter, MemorySegment child) {
        var mh$ = gtk_tree_model_iter_parent$MH();
        try {
            return (int)mh$.invokeExact(tree_model, iter, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_ref_node$MH() {
        return RuntimeHelper.requireNonNull(constants$2304.const$0,"gtk_tree_model_ref_node");
    }
    /**
     * {@snippet :
     * void gtk_tree_model_ref_node(struct _GtkTreeModel* tree_model, struct _GtkTreeIter* iter);
     * }
     */
    public static void gtk_tree_model_ref_node(MemorySegment tree_model, MemorySegment iter) {
        var mh$ = gtk_tree_model_ref_node$MH();
        try {
            mh$.invokeExact(tree_model, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_unref_node$MH() {
        return RuntimeHelper.requireNonNull(constants$2304.const$1,"gtk_tree_model_unref_node");
    }
    /**
     * {@snippet :
     * void gtk_tree_model_unref_node(struct _GtkTreeModel* tree_model, struct _GtkTreeIter* iter);
     * }
     */
    public static void gtk_tree_model_unref_node(MemorySegment tree_model, MemorySegment iter) {
        var mh$ = gtk_tree_model_unref_node$MH();
        try {
            mh$.invokeExact(tree_model, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_get$MH() {
        return RuntimeHelper.requireNonNull(constants$2304.const$2,"gtk_tree_model_get");
    }
    /**
     * {@snippet :
     * void gtk_tree_model_get(struct _GtkTreeModel* tree_model, struct _GtkTreeIter* iter,...);
     * }
     */
    public static void gtk_tree_model_get(MemorySegment tree_model, MemorySegment iter, Object... x2) {
        var mh$ = gtk_tree_model_get$MH();
        try {
            mh$.invokeExact(tree_model, iter, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_get_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$2304.const$3,"gtk_tree_model_get_valist");
    }
    /**
     * {@snippet :
     * void gtk_tree_model_get_valist(struct _GtkTreeModel* tree_model, struct _GtkTreeIter* iter, struct __va_list var_args);
     * }
     */
    public static void gtk_tree_model_get_valist(MemorySegment tree_model, MemorySegment iter, MemorySegment var_args) {
        var mh$ = gtk_tree_model_get_valist$MH();
        try {
            mh$.invokeExact(tree_model, iter, var_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$2304.const$5,"gtk_tree_model_foreach");
    }
    /**
     * {@snippet :
     * void gtk_tree_model_foreach(struct _GtkTreeModel* model, int (*func)(struct _GtkTreeModel*,struct _GtkTreePath*,struct _GtkTreeIter*,void*), void* user_data);
     * }
     */
    public static void gtk_tree_model_foreach(MemorySegment model, MemorySegment func, MemorySegment user_data) {
        var mh$ = gtk_tree_model_foreach$MH();
        try {
            mh$.invokeExact(model, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_row_changed$MH() {
        return RuntimeHelper.requireNonNull(constants$2305.const$0,"gtk_tree_model_row_changed");
    }
    /**
     * {@snippet :
     * void gtk_tree_model_row_changed(struct _GtkTreeModel* tree_model, struct _GtkTreePath* path, struct _GtkTreeIter* iter);
     * }
     */
    public static void gtk_tree_model_row_changed(MemorySegment tree_model, MemorySegment path, MemorySegment iter) {
        var mh$ = gtk_tree_model_row_changed$MH();
        try {
            mh$.invokeExact(tree_model, path, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_row_inserted$MH() {
        return RuntimeHelper.requireNonNull(constants$2305.const$1,"gtk_tree_model_row_inserted");
    }
    /**
     * {@snippet :
     * void gtk_tree_model_row_inserted(struct _GtkTreeModel* tree_model, struct _GtkTreePath* path, struct _GtkTreeIter* iter);
     * }
     */
    public static void gtk_tree_model_row_inserted(MemorySegment tree_model, MemorySegment path, MemorySegment iter) {
        var mh$ = gtk_tree_model_row_inserted$MH();
        try {
            mh$.invokeExact(tree_model, path, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_row_has_child_toggled$MH() {
        return RuntimeHelper.requireNonNull(constants$2305.const$2,"gtk_tree_model_row_has_child_toggled");
    }
    /**
     * {@snippet :
     * void gtk_tree_model_row_has_child_toggled(struct _GtkTreeModel* tree_model, struct _GtkTreePath* path, struct _GtkTreeIter* iter);
     * }
     */
    public static void gtk_tree_model_row_has_child_toggled(MemorySegment tree_model, MemorySegment path, MemorySegment iter) {
        var mh$ = gtk_tree_model_row_has_child_toggled$MH();
        try {
            mh$.invokeExact(tree_model, path, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_row_deleted$MH() {
        return RuntimeHelper.requireNonNull(constants$2305.const$3,"gtk_tree_model_row_deleted");
    }
    /**
     * {@snippet :
     * void gtk_tree_model_row_deleted(struct _GtkTreeModel* tree_model, struct _GtkTreePath* path);
     * }
     */
    public static void gtk_tree_model_row_deleted(MemorySegment tree_model, MemorySegment path) {
        var mh$ = gtk_tree_model_row_deleted$MH();
        try {
            mh$.invokeExact(tree_model, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_rows_reordered$MH() {
        return RuntimeHelper.requireNonNull(constants$2305.const$4,"gtk_tree_model_rows_reordered");
    }
    /**
     * {@snippet :
     * void gtk_tree_model_rows_reordered(struct _GtkTreeModel* tree_model, struct _GtkTreePath* path, struct _GtkTreeIter* iter, int* new_order);
     * }
     */
    public static void gtk_tree_model_rows_reordered(MemorySegment tree_model, MemorySegment path, MemorySegment iter, MemorySegment new_order) {
        var mh$ = gtk_tree_model_rows_reordered$MH();
        try {
            mh$.invokeExact(tree_model, path, iter, new_order);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_model_rows_reordered_with_length$MH() {
        return RuntimeHelper.requireNonNull(constants$2305.const$5,"gtk_tree_model_rows_reordered_with_length");
    }
    /**
     * {@snippet :
     * void gtk_tree_model_rows_reordered_with_length(struct _GtkTreeModel* tree_model, struct _GtkTreePath* path, struct _GtkTreeIter* iter, int* new_order, int length);
     * }
     */
    public static void gtk_tree_model_rows_reordered_with_length(MemorySegment tree_model, MemorySegment path, MemorySegment iter, MemorySegment new_order, int length) {
        var mh$ = gtk_tree_model_rows_reordered_with_length$MH();
        try {
            mh$.invokeExact(tree_model, path, iter, new_order, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_editable_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2307.const$1,"gtk_cell_editable_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_cell_editable_get_type();
     * }
     */
    public static long gtk_cell_editable_get_type() {
        var mh$ = gtk_cell_editable_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_editable_start_editing$MH() {
        return RuntimeHelper.requireNonNull(constants$2307.const$2,"gtk_cell_editable_start_editing");
    }
    /**
     * {@snippet :
     * void gtk_cell_editable_start_editing(struct _GtkCellEditable* cell_editable, union _GdkEvent* event);
     * }
     */
    public static void gtk_cell_editable_start_editing(MemorySegment cell_editable, MemorySegment event) {
        var mh$ = gtk_cell_editable_start_editing$MH();
        try {
            mh$.invokeExact(cell_editable, event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_editable_editing_done$MH() {
        return RuntimeHelper.requireNonNull(constants$2307.const$3,"gtk_cell_editable_editing_done");
    }
    /**
     * {@snippet :
     * void gtk_cell_editable_editing_done(struct _GtkCellEditable* cell_editable);
     * }
     */
    public static void gtk_cell_editable_editing_done(MemorySegment cell_editable) {
        var mh$ = gtk_cell_editable_editing_done$MH();
        try {
            mh$.invokeExact(cell_editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_editable_remove_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2307.const$4,"gtk_cell_editable_remove_widget");
    }
    /**
     * {@snippet :
     * void gtk_cell_editable_remove_widget(struct _GtkCellEditable* cell_editable);
     * }
     */
    public static void gtk_cell_editable_remove_widget(MemorySegment cell_editable) {
        var mh$ = gtk_cell_editable_remove_widget$MH();
        try {
            mh$.invokeExact(cell_editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkCellRendererState.GTK_CELL_RENDERER_SELECTED = 1;
     * }
     */
    public static int GTK_CELL_RENDERER_SELECTED() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkCellRendererState.GTK_CELL_RENDERER_PRELIT = 2;
     * }
     */
    public static int GTK_CELL_RENDERER_PRELIT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkCellRendererState.GTK_CELL_RENDERER_INSENSITIVE = 4;
     * }
     */
    public static int GTK_CELL_RENDERER_INSENSITIVE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkCellRendererState.GTK_CELL_RENDERER_SORTED = 8;
     * }
     */
    public static int GTK_CELL_RENDERER_SORTED() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum GtkCellRendererState.GTK_CELL_RENDERER_FOCUSED = 16;
     * }
     */
    public static int GTK_CELL_RENDERER_FOCUSED() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum GtkCellRendererState.GTK_CELL_RENDERER_EXPANDABLE = 32;
     * }
     */
    public static int GTK_CELL_RENDERER_EXPANDABLE() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum GtkCellRendererState.GTK_CELL_RENDERER_EXPANDED = 64;
     * }
     */
    public static int GTK_CELL_RENDERER_EXPANDED() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum GtkCellRendererMode.GTK_CELL_RENDERER_MODE_INERT = 0;
     * }
     */
    public static int GTK_CELL_RENDERER_MODE_INERT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkCellRendererMode.GTK_CELL_RENDERER_MODE_ACTIVATABLE = 1;
     * }
     */
    public static int GTK_CELL_RENDERER_MODE_ACTIVATABLE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkCellRendererMode.GTK_CELL_RENDERER_MODE_EDITABLE = 2;
     * }
     */
    public static int GTK_CELL_RENDERER_MODE_EDITABLE() {
        return (int)2L;
    }
    public static MethodHandle gtk_cell_renderer_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2314.const$1,"gtk_cell_renderer_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_cell_renderer_get_type();
     * }
     */
    public static long gtk_cell_renderer_get_type() {
        var mh$ = gtk_cell_renderer_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_get_request_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2314.const$2,"gtk_cell_renderer_get_request_mode");
    }
    /**
     * {@snippet :
     * enum GtkSizeRequestMode gtk_cell_renderer_get_request_mode(struct _GtkCellRenderer* cell);
     * }
     */
    public static int gtk_cell_renderer_get_request_mode(MemorySegment cell) {
        var mh$ = gtk_cell_renderer_get_request_mode$MH();
        try {
            return (int)mh$.invokeExact(cell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_get_preferred_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2314.const$3,"gtk_cell_renderer_get_preferred_width");
    }
    /**
     * {@snippet :
     * void gtk_cell_renderer_get_preferred_width(struct _GtkCellRenderer* cell, struct _GtkWidget* widget, int* minimum_size, int* natural_size);
     * }
     */
    public static void gtk_cell_renderer_get_preferred_width(MemorySegment cell, MemorySegment widget, MemorySegment minimum_size, MemorySegment natural_size) {
        var mh$ = gtk_cell_renderer_get_preferred_width$MH();
        try {
            mh$.invokeExact(cell, widget, minimum_size, natural_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_get_preferred_height_for_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2314.const$4,"gtk_cell_renderer_get_preferred_height_for_width");
    }
    /**
     * {@snippet :
     * void gtk_cell_renderer_get_preferred_height_for_width(struct _GtkCellRenderer* cell, struct _GtkWidget* widget, int width, int* minimum_height, int* natural_height);
     * }
     */
    public static void gtk_cell_renderer_get_preferred_height_for_width(MemorySegment cell, MemorySegment widget, int width, MemorySegment minimum_height, MemorySegment natural_height) {
        var mh$ = gtk_cell_renderer_get_preferred_height_for_width$MH();
        try {
            mh$.invokeExact(cell, widget, width, minimum_height, natural_height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_get_preferred_height$MH() {
        return RuntimeHelper.requireNonNull(constants$2314.const$5,"gtk_cell_renderer_get_preferred_height");
    }
    /**
     * {@snippet :
     * void gtk_cell_renderer_get_preferred_height(struct _GtkCellRenderer* cell, struct _GtkWidget* widget, int* minimum_size, int* natural_size);
     * }
     */
    public static void gtk_cell_renderer_get_preferred_height(MemorySegment cell, MemorySegment widget, MemorySegment minimum_size, MemorySegment natural_size) {
        var mh$ = gtk_cell_renderer_get_preferred_height$MH();
        try {
            mh$.invokeExact(cell, widget, minimum_size, natural_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_get_preferred_width_for_height$MH() {
        return RuntimeHelper.requireNonNull(constants$2315.const$0,"gtk_cell_renderer_get_preferred_width_for_height");
    }
    /**
     * {@snippet :
     * void gtk_cell_renderer_get_preferred_width_for_height(struct _GtkCellRenderer* cell, struct _GtkWidget* widget, int height, int* minimum_width, int* natural_width);
     * }
     */
    public static void gtk_cell_renderer_get_preferred_width_for_height(MemorySegment cell, MemorySegment widget, int height, MemorySegment minimum_width, MemorySegment natural_width) {
        var mh$ = gtk_cell_renderer_get_preferred_width_for_height$MH();
        try {
            mh$.invokeExact(cell, widget, height, minimum_width, natural_width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_get_preferred_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2315.const$1,"gtk_cell_renderer_get_preferred_size");
    }
    /**
     * {@snippet :
     * void gtk_cell_renderer_get_preferred_size(struct _GtkCellRenderer* cell, struct _GtkWidget* widget, struct _GtkRequisition* minimum_size, struct _GtkRequisition* natural_size);
     * }
     */
    public static void gtk_cell_renderer_get_preferred_size(MemorySegment cell, MemorySegment widget, MemorySegment minimum_size, MemorySegment natural_size) {
        var mh$ = gtk_cell_renderer_get_preferred_size$MH();
        try {
            mh$.invokeExact(cell, widget, minimum_size, natural_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_get_aligned_area$MH() {
        return RuntimeHelper.requireNonNull(constants$2315.const$2,"gtk_cell_renderer_get_aligned_area");
    }
    /**
     * {@snippet :
     * void gtk_cell_renderer_get_aligned_area(struct _GtkCellRenderer* cell, struct _GtkWidget* widget, enum GtkCellRendererState flags, struct _cairo_rectangle_int* cell_area, struct _cairo_rectangle_int* aligned_area);
     * }
     */
    public static void gtk_cell_renderer_get_aligned_area(MemorySegment cell, MemorySegment widget, int flags, MemorySegment cell_area, MemorySegment aligned_area) {
        var mh$ = gtk_cell_renderer_get_aligned_area$MH();
        try {
            mh$.invokeExact(cell, widget, flags, cell_area, aligned_area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_get_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2315.const$3,"gtk_cell_renderer_get_size");
    }
    /**
     * {@snippet :
     * void gtk_cell_renderer_get_size(struct _GtkCellRenderer* cell, struct _GtkWidget* widget, struct _cairo_rectangle_int* cell_area, int* x_offset, int* y_offset, int* width, int* height);
     * }
     */
    public static void gtk_cell_renderer_get_size(MemorySegment cell, MemorySegment widget, MemorySegment cell_area, MemorySegment x_offset, MemorySegment y_offset, MemorySegment width, MemorySegment height) {
        var mh$ = gtk_cell_renderer_get_size$MH();
        try {
            mh$.invokeExact(cell, widget, cell_area, x_offset, y_offset, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_render$MH() {
        return RuntimeHelper.requireNonNull(constants$2315.const$4,"gtk_cell_renderer_render");
    }
    /**
     * {@snippet :
     * void gtk_cell_renderer_render(struct _GtkCellRenderer* cell, struct _cairo* cr, struct _GtkWidget* widget, struct _cairo_rectangle_int* background_area, struct _cairo_rectangle_int* cell_area, enum GtkCellRendererState flags);
     * }
     */
    public static void gtk_cell_renderer_render(MemorySegment cell, MemorySegment cr, MemorySegment widget, MemorySegment background_area, MemorySegment cell_area, int flags) {
        var mh$ = gtk_cell_renderer_render$MH();
        try {
            mh$.invokeExact(cell, cr, widget, background_area, cell_area, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$2315.const$5,"gtk_cell_renderer_activate");
    }
    /**
     * {@snippet :
     * int gtk_cell_renderer_activate(struct _GtkCellRenderer* cell, union _GdkEvent* event, struct _GtkWidget* widget, char* path, struct _cairo_rectangle_int* background_area, struct _cairo_rectangle_int* cell_area, enum GtkCellRendererState flags);
     * }
     */
    public static int gtk_cell_renderer_activate(MemorySegment cell, MemorySegment event, MemorySegment widget, MemorySegment path, MemorySegment background_area, MemorySegment cell_area, int flags) {
        var mh$ = gtk_cell_renderer_activate$MH();
        try {
            return (int)mh$.invokeExact(cell, event, widget, path, background_area, cell_area, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_start_editing$MH() {
        return RuntimeHelper.requireNonNull(constants$2316.const$0,"gtk_cell_renderer_start_editing");
    }
    /**
     * {@snippet :
     * struct _GtkCellEditable* gtk_cell_renderer_start_editing(struct _GtkCellRenderer* cell, union _GdkEvent* event, struct _GtkWidget* widget, char* path, struct _cairo_rectangle_int* background_area, struct _cairo_rectangle_int* cell_area, enum GtkCellRendererState flags);
     * }
     */
    public static MemorySegment gtk_cell_renderer_start_editing(MemorySegment cell, MemorySegment event, MemorySegment widget, MemorySegment path, MemorySegment background_area, MemorySegment cell_area, int flags) {
        var mh$ = gtk_cell_renderer_start_editing$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(cell, event, widget, path, background_area, cell_area, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_set_fixed_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2316.const$1,"gtk_cell_renderer_set_fixed_size");
    }
    /**
     * {@snippet :
     * void gtk_cell_renderer_set_fixed_size(struct _GtkCellRenderer* cell, int width, int height);
     * }
     */
    public static void gtk_cell_renderer_set_fixed_size(MemorySegment cell, int width, int height) {
        var mh$ = gtk_cell_renderer_set_fixed_size$MH();
        try {
            mh$.invokeExact(cell, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_get_fixed_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2316.const$2,"gtk_cell_renderer_get_fixed_size");
    }
    /**
     * {@snippet :
     * void gtk_cell_renderer_get_fixed_size(struct _GtkCellRenderer* cell, int* width, int* height);
     * }
     */
    public static void gtk_cell_renderer_get_fixed_size(MemorySegment cell, MemorySegment width, MemorySegment height) {
        var mh$ = gtk_cell_renderer_get_fixed_size$MH();
        try {
            mh$.invokeExact(cell, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_set_alignment$MH() {
        return RuntimeHelper.requireNonNull(constants$2316.const$3,"gtk_cell_renderer_set_alignment");
    }
    /**
     * {@snippet :
     * void gtk_cell_renderer_set_alignment(struct _GtkCellRenderer* cell, float xalign, float yalign);
     * }
     */
    public static void gtk_cell_renderer_set_alignment(MemorySegment cell, float xalign, float yalign) {
        var mh$ = gtk_cell_renderer_set_alignment$MH();
        try {
            mh$.invokeExact(cell, xalign, yalign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_get_alignment$MH() {
        return RuntimeHelper.requireNonNull(constants$2316.const$4,"gtk_cell_renderer_get_alignment");
    }
    /**
     * {@snippet :
     * void gtk_cell_renderer_get_alignment(struct _GtkCellRenderer* cell, float* xalign, float* yalign);
     * }
     */
    public static void gtk_cell_renderer_get_alignment(MemorySegment cell, MemorySegment xalign, MemorySegment yalign) {
        var mh$ = gtk_cell_renderer_get_alignment$MH();
        try {
            mh$.invokeExact(cell, xalign, yalign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_set_padding$MH() {
        return RuntimeHelper.requireNonNull(constants$2316.const$5,"gtk_cell_renderer_set_padding");
    }
    /**
     * {@snippet :
     * void gtk_cell_renderer_set_padding(struct _GtkCellRenderer* cell, int xpad, int ypad);
     * }
     */
    public static void gtk_cell_renderer_set_padding(MemorySegment cell, int xpad, int ypad) {
        var mh$ = gtk_cell_renderer_set_padding$MH();
        try {
            mh$.invokeExact(cell, xpad, ypad);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_get_padding$MH() {
        return RuntimeHelper.requireNonNull(constants$2317.const$0,"gtk_cell_renderer_get_padding");
    }
    /**
     * {@snippet :
     * void gtk_cell_renderer_get_padding(struct _GtkCellRenderer* cell, int* xpad, int* ypad);
     * }
     */
    public static void gtk_cell_renderer_get_padding(MemorySegment cell, MemorySegment xpad, MemorySegment ypad) {
        var mh$ = gtk_cell_renderer_get_padding$MH();
        try {
            mh$.invokeExact(cell, xpad, ypad);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_set_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$2317.const$1,"gtk_cell_renderer_set_visible");
    }
    /**
     * {@snippet :
     * void gtk_cell_renderer_set_visible(struct _GtkCellRenderer* cell, int visible);
     * }
     */
    public static void gtk_cell_renderer_set_visible(MemorySegment cell, int visible) {
        var mh$ = gtk_cell_renderer_set_visible$MH();
        try {
            mh$.invokeExact(cell, visible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_get_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$2317.const$2,"gtk_cell_renderer_get_visible");
    }
    /**
     * {@snippet :
     * int gtk_cell_renderer_get_visible(struct _GtkCellRenderer* cell);
     * }
     */
    public static int gtk_cell_renderer_get_visible(MemorySegment cell) {
        var mh$ = gtk_cell_renderer_get_visible$MH();
        try {
            return (int)mh$.invokeExact(cell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_set_sensitive$MH() {
        return RuntimeHelper.requireNonNull(constants$2317.const$3,"gtk_cell_renderer_set_sensitive");
    }
    /**
     * {@snippet :
     * void gtk_cell_renderer_set_sensitive(struct _GtkCellRenderer* cell, int sensitive);
     * }
     */
    public static void gtk_cell_renderer_set_sensitive(MemorySegment cell, int sensitive) {
        var mh$ = gtk_cell_renderer_set_sensitive$MH();
        try {
            mh$.invokeExact(cell, sensitive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_get_sensitive$MH() {
        return RuntimeHelper.requireNonNull(constants$2317.const$4,"gtk_cell_renderer_get_sensitive");
    }
    /**
     * {@snippet :
     * int gtk_cell_renderer_get_sensitive(struct _GtkCellRenderer* cell);
     * }
     */
    public static int gtk_cell_renderer_get_sensitive(MemorySegment cell) {
        var mh$ = gtk_cell_renderer_get_sensitive$MH();
        try {
            return (int)mh$.invokeExact(cell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_is_activatable$MH() {
        return RuntimeHelper.requireNonNull(constants$2317.const$5,"gtk_cell_renderer_is_activatable");
    }
    /**
     * {@snippet :
     * int gtk_cell_renderer_is_activatable(struct _GtkCellRenderer* cell);
     * }
     */
    public static int gtk_cell_renderer_is_activatable(MemorySegment cell) {
        var mh$ = gtk_cell_renderer_is_activatable$MH();
        try {
            return (int)mh$.invokeExact(cell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_stop_editing$MH() {
        return RuntimeHelper.requireNonNull(constants$2318.const$0,"gtk_cell_renderer_stop_editing");
    }
    /**
     * {@snippet :
     * void gtk_cell_renderer_stop_editing(struct _GtkCellRenderer* cell, int canceled);
     * }
     */
    public static void gtk_cell_renderer_stop_editing(MemorySegment cell, int canceled) {
        var mh$ = gtk_cell_renderer_stop_editing$MH();
        try {
            mh$.invokeExact(cell, canceled);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gtk_cell_renderer_calc_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$2318.const$2,"_gtk_cell_renderer_calc_offset");
    }
    /**
     * {@snippet :
     * void _gtk_cell_renderer_calc_offset(struct _GtkCellRenderer* cell, struct _cairo_rectangle_int* cell_area, enum GtkTextDirection direction, int width, int height, int* x_offset, int* y_offset);
     * }
     */
    public static void _gtk_cell_renderer_calc_offset(MemorySegment cell, MemorySegment cell_area, int direction, int width, int height, MemorySegment x_offset, MemorySegment y_offset) {
        var mh$ = _gtk_cell_renderer_calc_offset$MH();
        try {
            mh$.invokeExact(cell, cell_area, direction, width, height, x_offset, y_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_get_state$MH() {
        return RuntimeHelper.requireNonNull(constants$2318.const$3,"gtk_cell_renderer_get_state");
    }
    /**
     * {@snippet :
     * enum GtkStateFlags gtk_cell_renderer_get_state(struct _GtkCellRenderer* cell, struct _GtkWidget* widget, enum GtkCellRendererState cell_state);
     * }
     */
    public static int gtk_cell_renderer_get_state(MemorySegment cell, MemorySegment widget, int cell_state) {
        var mh$ = gtk_cell_renderer_get_state$MH();
        try {
            return (int)mh$.invokeExact(cell, widget, cell_state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_renderer_class_set_accessible_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2318.const$4,"gtk_cell_renderer_class_set_accessible_type");
    }
    /**
     * {@snippet :
     * void gtk_cell_renderer_class_set_accessible_type(struct _GtkCellRendererClass* renderer_class, unsigned long type);
     * }
     */
    public static void gtk_cell_renderer_class_set_accessible_type(MemorySegment renderer_class, long type) {
        var mh$ = gtk_cell_renderer_class_set_accessible_type$MH();
        try {
            mh$.invokeExact(renderer_class, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gtk_cell_renderer_get_accessible_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2318.const$5,"_gtk_cell_renderer_get_accessible_type");
    }
    /**
     * {@snippet :
     * unsigned long _gtk_cell_renderer_get_accessible_type(struct _GtkCellRenderer* renderer);
     * }
     */
    public static long _gtk_cell_renderer_get_accessible_type(MemorySegment renderer) {
        var mh$ = _gtk_cell_renderer_get_accessible_type$MH();
        try {
            return (long)mh$.invokeExact(renderer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_sortable_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2321.const$2,"gtk_tree_sortable_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_tree_sortable_get_type();
     * }
     */
    public static long gtk_tree_sortable_get_type() {
        var mh$ = gtk_tree_sortable_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_sortable_sort_column_changed$MH() {
        return RuntimeHelper.requireNonNull(constants$2321.const$3,"gtk_tree_sortable_sort_column_changed");
    }
    /**
     * {@snippet :
     * void gtk_tree_sortable_sort_column_changed(struct _GtkTreeSortable* sortable);
     * }
     */
    public static void gtk_tree_sortable_sort_column_changed(MemorySegment sortable) {
        var mh$ = gtk_tree_sortable_sort_column_changed$MH();
        try {
            mh$.invokeExact(sortable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_sortable_get_sort_column_id$MH() {
        return RuntimeHelper.requireNonNull(constants$2321.const$4,"gtk_tree_sortable_get_sort_column_id");
    }
    /**
     * {@snippet :
     * int gtk_tree_sortable_get_sort_column_id(struct _GtkTreeSortable* sortable, int* sort_column_id, enum GtkSortType* order);
     * }
     */
    public static int gtk_tree_sortable_get_sort_column_id(MemorySegment sortable, MemorySegment sort_column_id, MemorySegment order) {
        var mh$ = gtk_tree_sortable_get_sort_column_id$MH();
        try {
            return (int)mh$.invokeExact(sortable, sort_column_id, order);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_sortable_set_sort_column_id$MH() {
        return RuntimeHelper.requireNonNull(constants$2321.const$5,"gtk_tree_sortable_set_sort_column_id");
    }
    /**
     * {@snippet :
     * void gtk_tree_sortable_set_sort_column_id(struct _GtkTreeSortable* sortable, int sort_column_id, enum GtkSortType order);
     * }
     */
    public static void gtk_tree_sortable_set_sort_column_id(MemorySegment sortable, int sort_column_id, int order) {
        var mh$ = gtk_tree_sortable_set_sort_column_id$MH();
        try {
            mh$.invokeExact(sortable, sort_column_id, order);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_sortable_set_sort_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2322.const$2,"gtk_tree_sortable_set_sort_func");
    }
    /**
     * {@snippet :
     * void gtk_tree_sortable_set_sort_func(struct _GtkTreeSortable* sortable, int sort_column_id, int (*sort_func)(struct _GtkTreeModel*,struct _GtkTreeIter*,struct _GtkTreeIter*,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void gtk_tree_sortable_set_sort_func(MemorySegment sortable, int sort_column_id, MemorySegment sort_func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = gtk_tree_sortable_set_sort_func$MH();
        try {
            mh$.invokeExact(sortable, sort_column_id, sort_func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_sortable_set_default_sort_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2322.const$5,"gtk_tree_sortable_set_default_sort_func");
    }
    /**
     * {@snippet :
     * void gtk_tree_sortable_set_default_sort_func(struct _GtkTreeSortable* sortable, int (*sort_func)(struct _GtkTreeModel*,struct _GtkTreeIter*,struct _GtkTreeIter*,void*), void* user_data, void (*destroy)(void*));
     * }
     */
    public static void gtk_tree_sortable_set_default_sort_func(MemorySegment sortable, MemorySegment sort_func, MemorySegment user_data, MemorySegment destroy) {
        var mh$ = gtk_tree_sortable_set_default_sort_func$MH();
        try {
            mh$.invokeExact(sortable, sort_func, user_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_sortable_has_default_sort_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2323.const$0,"gtk_tree_sortable_has_default_sort_func");
    }
    /**
     * {@snippet :
     * int gtk_tree_sortable_has_default_sort_func(struct _GtkTreeSortable* sortable);
     * }
     */
    public static int gtk_tree_sortable_has_default_sort_func(MemorySegment sortable) {
        var mh$ = gtk_tree_sortable_has_default_sort_func$MH();
        try {
            return (int)mh$.invokeExact(sortable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2334.const$2,"gtk_cell_area_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_cell_area_get_type();
     * }
     */
    public static long gtk_cell_area_get_type() {
        var mh$ = gtk_cell_area_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_add$MH() {
        return RuntimeHelper.requireNonNull(constants$2334.const$3,"gtk_cell_area_add");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_add(struct _GtkCellArea* area, struct _GtkCellRenderer* renderer);
     * }
     */
    public static void gtk_cell_area_add(MemorySegment area, MemorySegment renderer) {
        var mh$ = gtk_cell_area_add$MH();
        try {
            mh$.invokeExact(area, renderer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$2334.const$4,"gtk_cell_area_remove");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_remove(struct _GtkCellArea* area, struct _GtkCellRenderer* renderer);
     * }
     */
    public static void gtk_cell_area_remove(MemorySegment area, MemorySegment renderer) {
        var mh$ = gtk_cell_area_remove$MH();
        try {
            mh$.invokeExact(area, renderer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_has_renderer$MH() {
        return RuntimeHelper.requireNonNull(constants$2334.const$5,"gtk_cell_area_has_renderer");
    }
    /**
     * {@snippet :
     * int gtk_cell_area_has_renderer(struct _GtkCellArea* area, struct _GtkCellRenderer* renderer);
     * }
     */
    public static int gtk_cell_area_has_renderer(MemorySegment area, MemorySegment renderer) {
        var mh$ = gtk_cell_area_has_renderer$MH();
        try {
            return (int)mh$.invokeExact(area, renderer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$2335.const$1,"gtk_cell_area_foreach");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_foreach(struct _GtkCellArea* area, int (*callback)(struct _GtkCellRenderer*,void*), void* callback_data);
     * }
     */
    public static void gtk_cell_area_foreach(MemorySegment area, MemorySegment callback, MemorySegment callback_data) {
        var mh$ = gtk_cell_area_foreach$MH();
        try {
            mh$.invokeExact(area, callback, callback_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_foreach_alloc$MH() {
        return RuntimeHelper.requireNonNull(constants$2335.const$3,"gtk_cell_area_foreach_alloc");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_foreach_alloc(struct _GtkCellArea* area, struct _GtkCellAreaContext* context, struct _GtkWidget* widget, struct _cairo_rectangle_int* cell_area, struct _cairo_rectangle_int* background_area, int (*callback)(struct _GtkCellRenderer*,struct _cairo_rectangle_int*,struct _cairo_rectangle_int*,void*), void* callback_data);
     * }
     */
    public static void gtk_cell_area_foreach_alloc(MemorySegment area, MemorySegment context, MemorySegment widget, MemorySegment cell_area, MemorySegment background_area, MemorySegment callback, MemorySegment callback_data) {
        var mh$ = gtk_cell_area_foreach_alloc$MH();
        try {
            mh$.invokeExact(area, context, widget, cell_area, background_area, callback, callback_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_event$MH() {
        return RuntimeHelper.requireNonNull(constants$2335.const$4,"gtk_cell_area_event");
    }
    /**
     * {@snippet :
     * int gtk_cell_area_event(struct _GtkCellArea* area, struct _GtkCellAreaContext* context, struct _GtkWidget* widget, union _GdkEvent* event, struct _cairo_rectangle_int* cell_area, enum GtkCellRendererState flags);
     * }
     */
    public static int gtk_cell_area_event(MemorySegment area, MemorySegment context, MemorySegment widget, MemorySegment event, MemorySegment cell_area, int flags) {
        var mh$ = gtk_cell_area_event$MH();
        try {
            return (int)mh$.invokeExact(area, context, widget, event, cell_area, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_render$MH() {
        return RuntimeHelper.requireNonNull(constants$2335.const$5,"gtk_cell_area_render");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_render(struct _GtkCellArea* area, struct _GtkCellAreaContext* context, struct _GtkWidget* widget, struct _cairo* cr, struct _cairo_rectangle_int* background_area, struct _cairo_rectangle_int* cell_area, enum GtkCellRendererState flags, int paint_focus);
     * }
     */
    public static void gtk_cell_area_render(MemorySegment area, MemorySegment context, MemorySegment widget, MemorySegment cr, MemorySegment background_area, MemorySegment cell_area, int flags, int paint_focus) {
        var mh$ = gtk_cell_area_render$MH();
        try {
            mh$.invokeExact(area, context, widget, cr, background_area, cell_area, flags, paint_focus);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_get_cell_allocation$MH() {
        return RuntimeHelper.requireNonNull(constants$2336.const$0,"gtk_cell_area_get_cell_allocation");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_get_cell_allocation(struct _GtkCellArea* area, struct _GtkCellAreaContext* context, struct _GtkWidget* widget, struct _GtkCellRenderer* renderer, struct _cairo_rectangle_int* cell_area, struct _cairo_rectangle_int* allocation);
     * }
     */
    public static void gtk_cell_area_get_cell_allocation(MemorySegment area, MemorySegment context, MemorySegment widget, MemorySegment renderer, MemorySegment cell_area, MemorySegment allocation) {
        var mh$ = gtk_cell_area_get_cell_allocation$MH();
        try {
            mh$.invokeExact(area, context, widget, renderer, cell_area, allocation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_get_cell_at_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2336.const$2,"gtk_cell_area_get_cell_at_position");
    }
    /**
     * {@snippet :
     * struct _GtkCellRenderer* gtk_cell_area_get_cell_at_position(struct _GtkCellArea* area, struct _GtkCellAreaContext* context, struct _GtkWidget* widget, struct _cairo_rectangle_int* cell_area, int x, int y, struct _cairo_rectangle_int* alloc_area);
     * }
     */
    public static MemorySegment gtk_cell_area_get_cell_at_position(MemorySegment area, MemorySegment context, MemorySegment widget, MemorySegment cell_area, int x, int y, MemorySegment alloc_area) {
        var mh$ = gtk_cell_area_get_cell_at_position$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(area, context, widget, cell_area, x, y, alloc_area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_create_context$MH() {
        return RuntimeHelper.requireNonNull(constants$2336.const$3,"gtk_cell_area_create_context");
    }
    /**
     * {@snippet :
     * struct _GtkCellAreaContext* gtk_cell_area_create_context(struct _GtkCellArea* area);
     * }
     */
    public static MemorySegment gtk_cell_area_create_context(MemorySegment area) {
        var mh$ = gtk_cell_area_create_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_copy_context$MH() {
        return RuntimeHelper.requireNonNull(constants$2336.const$4,"gtk_cell_area_copy_context");
    }
    /**
     * {@snippet :
     * struct _GtkCellAreaContext* gtk_cell_area_copy_context(struct _GtkCellArea* area, struct _GtkCellAreaContext* context);
     * }
     */
    public static MemorySegment gtk_cell_area_copy_context(MemorySegment area, MemorySegment context) {
        var mh$ = gtk_cell_area_copy_context$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(area, context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_get_request_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2336.const$5,"gtk_cell_area_get_request_mode");
    }
    /**
     * {@snippet :
     * enum GtkSizeRequestMode gtk_cell_area_get_request_mode(struct _GtkCellArea* area);
     * }
     */
    public static int gtk_cell_area_get_request_mode(MemorySegment area) {
        var mh$ = gtk_cell_area_get_request_mode$MH();
        try {
            return (int)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_get_preferred_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2337.const$0,"gtk_cell_area_get_preferred_width");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_get_preferred_width(struct _GtkCellArea* area, struct _GtkCellAreaContext* context, struct _GtkWidget* widget, int* minimum_width, int* natural_width);
     * }
     */
    public static void gtk_cell_area_get_preferred_width(MemorySegment area, MemorySegment context, MemorySegment widget, MemorySegment minimum_width, MemorySegment natural_width) {
        var mh$ = gtk_cell_area_get_preferred_width$MH();
        try {
            mh$.invokeExact(area, context, widget, minimum_width, natural_width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_get_preferred_height_for_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2337.const$1,"gtk_cell_area_get_preferred_height_for_width");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_get_preferred_height_for_width(struct _GtkCellArea* area, struct _GtkCellAreaContext* context, struct _GtkWidget* widget, int width, int* minimum_height, int* natural_height);
     * }
     */
    public static void gtk_cell_area_get_preferred_height_for_width(MemorySegment area, MemorySegment context, MemorySegment widget, int width, MemorySegment minimum_height, MemorySegment natural_height) {
        var mh$ = gtk_cell_area_get_preferred_height_for_width$MH();
        try {
            mh$.invokeExact(area, context, widget, width, minimum_height, natural_height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_get_preferred_height$MH() {
        return RuntimeHelper.requireNonNull(constants$2337.const$2,"gtk_cell_area_get_preferred_height");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_get_preferred_height(struct _GtkCellArea* area, struct _GtkCellAreaContext* context, struct _GtkWidget* widget, int* minimum_height, int* natural_height);
     * }
     */
    public static void gtk_cell_area_get_preferred_height(MemorySegment area, MemorySegment context, MemorySegment widget, MemorySegment minimum_height, MemorySegment natural_height) {
        var mh$ = gtk_cell_area_get_preferred_height$MH();
        try {
            mh$.invokeExact(area, context, widget, minimum_height, natural_height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_get_preferred_width_for_height$MH() {
        return RuntimeHelper.requireNonNull(constants$2337.const$3,"gtk_cell_area_get_preferred_width_for_height");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_get_preferred_width_for_height(struct _GtkCellArea* area, struct _GtkCellAreaContext* context, struct _GtkWidget* widget, int height, int* minimum_width, int* natural_width);
     * }
     */
    public static void gtk_cell_area_get_preferred_width_for_height(MemorySegment area, MemorySegment context, MemorySegment widget, int height, MemorySegment minimum_width, MemorySegment natural_width) {
        var mh$ = gtk_cell_area_get_preferred_width_for_height$MH();
        try {
            mh$.invokeExact(area, context, widget, height, minimum_width, natural_width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_get_current_path_string$MH() {
        return RuntimeHelper.requireNonNull(constants$2337.const$4,"gtk_cell_area_get_current_path_string");
    }
    /**
     * {@snippet :
     * char* gtk_cell_area_get_current_path_string(struct _GtkCellArea* area);
     * }
     */
    public static MemorySegment gtk_cell_area_get_current_path_string(MemorySegment area) {
        var mh$ = gtk_cell_area_get_current_path_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_apply_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$2337.const$5,"gtk_cell_area_apply_attributes");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_apply_attributes(struct _GtkCellArea* area, struct _GtkTreeModel* tree_model, struct _GtkTreeIter* iter, int is_expander, int is_expanded);
     * }
     */
    public static void gtk_cell_area_apply_attributes(MemorySegment area, MemorySegment tree_model, MemorySegment iter, int is_expander, int is_expanded) {
        var mh$ = gtk_cell_area_apply_attributes$MH();
        try {
            mh$.invokeExact(area, tree_model, iter, is_expander, is_expanded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_attribute_connect$MH() {
        return RuntimeHelper.requireNonNull(constants$2338.const$0,"gtk_cell_area_attribute_connect");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_attribute_connect(struct _GtkCellArea* area, struct _GtkCellRenderer* renderer, char* attribute, int column);
     * }
     */
    public static void gtk_cell_area_attribute_connect(MemorySegment area, MemorySegment renderer, MemorySegment attribute, int column) {
        var mh$ = gtk_cell_area_attribute_connect$MH();
        try {
            mh$.invokeExact(area, renderer, attribute, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_attribute_disconnect$MH() {
        return RuntimeHelper.requireNonNull(constants$2338.const$1,"gtk_cell_area_attribute_disconnect");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_attribute_disconnect(struct _GtkCellArea* area, struct _GtkCellRenderer* renderer, char* attribute);
     * }
     */
    public static void gtk_cell_area_attribute_disconnect(MemorySegment area, MemorySegment renderer, MemorySegment attribute) {
        var mh$ = gtk_cell_area_attribute_disconnect$MH();
        try {
            mh$.invokeExact(area, renderer, attribute);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_attribute_get_column$MH() {
        return RuntimeHelper.requireNonNull(constants$2338.const$2,"gtk_cell_area_attribute_get_column");
    }
    /**
     * {@snippet :
     * int gtk_cell_area_attribute_get_column(struct _GtkCellArea* area, struct _GtkCellRenderer* renderer, char* attribute);
     * }
     */
    public static int gtk_cell_area_attribute_get_column(MemorySegment area, MemorySegment renderer, MemorySegment attribute) {
        var mh$ = gtk_cell_area_attribute_get_column$MH();
        try {
            return (int)mh$.invokeExact(area, renderer, attribute);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_class_install_cell_property$MH() {
        return RuntimeHelper.requireNonNull(constants$2338.const$3,"gtk_cell_area_class_install_cell_property");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_class_install_cell_property(struct _GtkCellAreaClass* aclass, unsigned int property_id, struct _GParamSpec* pspec);
     * }
     */
    public static void gtk_cell_area_class_install_cell_property(MemorySegment aclass, int property_id, MemorySegment pspec) {
        var mh$ = gtk_cell_area_class_install_cell_property$MH();
        try {
            mh$.invokeExact(aclass, property_id, pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_class_find_cell_property$MH() {
        return RuntimeHelper.requireNonNull(constants$2338.const$4,"gtk_cell_area_class_find_cell_property");
    }
    /**
     * {@snippet :
     * struct _GParamSpec* gtk_cell_area_class_find_cell_property(struct _GtkCellAreaClass* aclass, char* property_name);
     * }
     */
    public static MemorySegment gtk_cell_area_class_find_cell_property(MemorySegment aclass, MemorySegment property_name) {
        var mh$ = gtk_cell_area_class_find_cell_property$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(aclass, property_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_class_list_cell_properties$MH() {
        return RuntimeHelper.requireNonNull(constants$2338.const$5,"gtk_cell_area_class_list_cell_properties");
    }
    /**
     * {@snippet :
     * struct _GParamSpec** gtk_cell_area_class_list_cell_properties(struct _GtkCellAreaClass* aclass, unsigned int* n_properties);
     * }
     */
    public static MemorySegment gtk_cell_area_class_list_cell_properties(MemorySegment aclass, MemorySegment n_properties) {
        var mh$ = gtk_cell_area_class_list_cell_properties$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(aclass, n_properties);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_add_with_properties$MH() {
        return RuntimeHelper.requireNonNull(constants$2339.const$0,"gtk_cell_area_add_with_properties");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_add_with_properties(struct _GtkCellArea* area, struct _GtkCellRenderer* renderer, char* first_prop_name,...);
     * }
     */
    public static void gtk_cell_area_add_with_properties(MemorySegment area, MemorySegment renderer, MemorySegment first_prop_name, Object... x3) {
        var mh$ = gtk_cell_area_add_with_properties$MH();
        try {
            mh$.invokeExact(area, renderer, first_prop_name, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_cell_set$MH() {
        return RuntimeHelper.requireNonNull(constants$2339.const$1,"gtk_cell_area_cell_set");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_cell_set(struct _GtkCellArea* area, struct _GtkCellRenderer* renderer, char* first_prop_name,...);
     * }
     */
    public static void gtk_cell_area_cell_set(MemorySegment area, MemorySegment renderer, MemorySegment first_prop_name, Object... x3) {
        var mh$ = gtk_cell_area_cell_set$MH();
        try {
            mh$.invokeExact(area, renderer, first_prop_name, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_cell_get$MH() {
        return RuntimeHelper.requireNonNull(constants$2339.const$2,"gtk_cell_area_cell_get");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_cell_get(struct _GtkCellArea* area, struct _GtkCellRenderer* renderer, char* first_prop_name,...);
     * }
     */
    public static void gtk_cell_area_cell_get(MemorySegment area, MemorySegment renderer, MemorySegment first_prop_name, Object... x3) {
        var mh$ = gtk_cell_area_cell_get$MH();
        try {
            mh$.invokeExact(area, renderer, first_prop_name, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_cell_set_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$2339.const$3,"gtk_cell_area_cell_set_valist");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_cell_set_valist(struct _GtkCellArea* area, struct _GtkCellRenderer* renderer, char* first_property_name, struct __va_list var_args);
     * }
     */
    public static void gtk_cell_area_cell_set_valist(MemorySegment area, MemorySegment renderer, MemorySegment first_property_name, MemorySegment var_args) {
        var mh$ = gtk_cell_area_cell_set_valist$MH();
        try {
            mh$.invokeExact(area, renderer, first_property_name, var_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_cell_get_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$2339.const$4,"gtk_cell_area_cell_get_valist");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_cell_get_valist(struct _GtkCellArea* area, struct _GtkCellRenderer* renderer, char* first_property_name, struct __va_list var_args);
     * }
     */
    public static void gtk_cell_area_cell_get_valist(MemorySegment area, MemorySegment renderer, MemorySegment first_property_name, MemorySegment var_args) {
        var mh$ = gtk_cell_area_cell_get_valist$MH();
        try {
            mh$.invokeExact(area, renderer, first_property_name, var_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_cell_set_property$MH() {
        return RuntimeHelper.requireNonNull(constants$2339.const$5,"gtk_cell_area_cell_set_property");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_cell_set_property(struct _GtkCellArea* area, struct _GtkCellRenderer* renderer, char* property_name, struct _GValue* value);
     * }
     */
    public static void gtk_cell_area_cell_set_property(MemorySegment area, MemorySegment renderer, MemorySegment property_name, MemorySegment value) {
        var mh$ = gtk_cell_area_cell_set_property$MH();
        try {
            mh$.invokeExact(area, renderer, property_name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_cell_get_property$MH() {
        return RuntimeHelper.requireNonNull(constants$2340.const$0,"gtk_cell_area_cell_get_property");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_cell_get_property(struct _GtkCellArea* area, struct _GtkCellRenderer* renderer, char* property_name, struct _GValue* value);
     * }
     */
    public static void gtk_cell_area_cell_get_property(MemorySegment area, MemorySegment renderer, MemorySegment property_name, MemorySegment value) {
        var mh$ = gtk_cell_area_cell_get_property$MH();
        try {
            mh$.invokeExact(area, renderer, property_name, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_is_activatable$MH() {
        return RuntimeHelper.requireNonNull(constants$2340.const$1,"gtk_cell_area_is_activatable");
    }
    /**
     * {@snippet :
     * int gtk_cell_area_is_activatable(struct _GtkCellArea* area);
     * }
     */
    public static int gtk_cell_area_is_activatable(MemorySegment area) {
        var mh$ = gtk_cell_area_is_activatable$MH();
        try {
            return (int)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_activate$MH() {
        return RuntimeHelper.requireNonNull(constants$2340.const$2,"gtk_cell_area_activate");
    }
    /**
     * {@snippet :
     * int gtk_cell_area_activate(struct _GtkCellArea* area, struct _GtkCellAreaContext* context, struct _GtkWidget* widget, struct _cairo_rectangle_int* cell_area, enum GtkCellRendererState flags, int edit_only);
     * }
     */
    public static int gtk_cell_area_activate(MemorySegment area, MemorySegment context, MemorySegment widget, MemorySegment cell_area, int flags, int edit_only) {
        var mh$ = gtk_cell_area_activate$MH();
        try {
            return (int)mh$.invokeExact(area, context, widget, cell_area, flags, edit_only);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_focus$MH() {
        return RuntimeHelper.requireNonNull(constants$2340.const$3,"gtk_cell_area_focus");
    }
    /**
     * {@snippet :
     * int gtk_cell_area_focus(struct _GtkCellArea* area, enum GtkDirectionType direction);
     * }
     */
    public static int gtk_cell_area_focus(MemorySegment area, int direction) {
        var mh$ = gtk_cell_area_focus$MH();
        try {
            return (int)mh$.invokeExact(area, direction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_set_focus_cell$MH() {
        return RuntimeHelper.requireNonNull(constants$2340.const$4,"gtk_cell_area_set_focus_cell");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_set_focus_cell(struct _GtkCellArea* area, struct _GtkCellRenderer* renderer);
     * }
     */
    public static void gtk_cell_area_set_focus_cell(MemorySegment area, MemorySegment renderer) {
        var mh$ = gtk_cell_area_set_focus_cell$MH();
        try {
            mh$.invokeExact(area, renderer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_get_focus_cell$MH() {
        return RuntimeHelper.requireNonNull(constants$2340.const$5,"gtk_cell_area_get_focus_cell");
    }
    /**
     * {@snippet :
     * struct _GtkCellRenderer* gtk_cell_area_get_focus_cell(struct _GtkCellArea* area);
     * }
     */
    public static MemorySegment gtk_cell_area_get_focus_cell(MemorySegment area) {
        var mh$ = gtk_cell_area_get_focus_cell$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_add_focus_sibling$MH() {
        return RuntimeHelper.requireNonNull(constants$2341.const$0,"gtk_cell_area_add_focus_sibling");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_add_focus_sibling(struct _GtkCellArea* area, struct _GtkCellRenderer* renderer, struct _GtkCellRenderer* sibling);
     * }
     */
    public static void gtk_cell_area_add_focus_sibling(MemorySegment area, MemorySegment renderer, MemorySegment sibling) {
        var mh$ = gtk_cell_area_add_focus_sibling$MH();
        try {
            mh$.invokeExact(area, renderer, sibling);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_remove_focus_sibling$MH() {
        return RuntimeHelper.requireNonNull(constants$2341.const$1,"gtk_cell_area_remove_focus_sibling");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_remove_focus_sibling(struct _GtkCellArea* area, struct _GtkCellRenderer* renderer, struct _GtkCellRenderer* sibling);
     * }
     */
    public static void gtk_cell_area_remove_focus_sibling(MemorySegment area, MemorySegment renderer, MemorySegment sibling) {
        var mh$ = gtk_cell_area_remove_focus_sibling$MH();
        try {
            mh$.invokeExact(area, renderer, sibling);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_is_focus_sibling$MH() {
        return RuntimeHelper.requireNonNull(constants$2341.const$2,"gtk_cell_area_is_focus_sibling");
    }
    /**
     * {@snippet :
     * int gtk_cell_area_is_focus_sibling(struct _GtkCellArea* area, struct _GtkCellRenderer* renderer, struct _GtkCellRenderer* sibling);
     * }
     */
    public static int gtk_cell_area_is_focus_sibling(MemorySegment area, MemorySegment renderer, MemorySegment sibling) {
        var mh$ = gtk_cell_area_is_focus_sibling$MH();
        try {
            return (int)mh$.invokeExact(area, renderer, sibling);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_get_focus_siblings$MH() {
        return RuntimeHelper.requireNonNull(constants$2341.const$3,"gtk_cell_area_get_focus_siblings");
    }
    /**
     * {@snippet :
     * struct _GList* gtk_cell_area_get_focus_siblings(struct _GtkCellArea* area, struct _GtkCellRenderer* renderer);
     * }
     */
    public static MemorySegment gtk_cell_area_get_focus_siblings(MemorySegment area, MemorySegment renderer) {
        var mh$ = gtk_cell_area_get_focus_siblings$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(area, renderer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_get_focus_from_sibling$MH() {
        return RuntimeHelper.requireNonNull(constants$2341.const$4,"gtk_cell_area_get_focus_from_sibling");
    }
    /**
     * {@snippet :
     * struct _GtkCellRenderer* gtk_cell_area_get_focus_from_sibling(struct _GtkCellArea* area, struct _GtkCellRenderer* renderer);
     * }
     */
    public static MemorySegment gtk_cell_area_get_focus_from_sibling(MemorySegment area, MemorySegment renderer) {
        var mh$ = gtk_cell_area_get_focus_from_sibling$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(area, renderer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_get_edited_cell$MH() {
        return RuntimeHelper.requireNonNull(constants$2341.const$5,"gtk_cell_area_get_edited_cell");
    }
    /**
     * {@snippet :
     * struct _GtkCellRenderer* gtk_cell_area_get_edited_cell(struct _GtkCellArea* area);
     * }
     */
    public static MemorySegment gtk_cell_area_get_edited_cell(MemorySegment area) {
        var mh$ = gtk_cell_area_get_edited_cell$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_get_edit_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2342.const$0,"gtk_cell_area_get_edit_widget");
    }
    /**
     * {@snippet :
     * struct _GtkCellEditable* gtk_cell_area_get_edit_widget(struct _GtkCellArea* area);
     * }
     */
    public static MemorySegment gtk_cell_area_get_edit_widget(MemorySegment area) {
        var mh$ = gtk_cell_area_get_edit_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_activate_cell$MH() {
        return RuntimeHelper.requireNonNull(constants$2342.const$1,"gtk_cell_area_activate_cell");
    }
    /**
     * {@snippet :
     * int gtk_cell_area_activate_cell(struct _GtkCellArea* area, struct _GtkWidget* widget, struct _GtkCellRenderer* renderer, union _GdkEvent* event, struct _cairo_rectangle_int* cell_area, enum GtkCellRendererState flags);
     * }
     */
    public static int gtk_cell_area_activate_cell(MemorySegment area, MemorySegment widget, MemorySegment renderer, MemorySegment event, MemorySegment cell_area, int flags) {
        var mh$ = gtk_cell_area_activate_cell$MH();
        try {
            return (int)mh$.invokeExact(area, widget, renderer, event, cell_area, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_stop_editing$MH() {
        return RuntimeHelper.requireNonNull(constants$2342.const$2,"gtk_cell_area_stop_editing");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_stop_editing(struct _GtkCellArea* area, int canceled);
     * }
     */
    public static void gtk_cell_area_stop_editing(MemorySegment area, int canceled) {
        var mh$ = gtk_cell_area_stop_editing$MH();
        try {
            mh$.invokeExact(area, canceled);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_inner_cell_area$MH() {
        return RuntimeHelper.requireNonNull(constants$2342.const$3,"gtk_cell_area_inner_cell_area");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_inner_cell_area(struct _GtkCellArea* area, struct _GtkWidget* widget, struct _cairo_rectangle_int* cell_area, struct _cairo_rectangle_int* inner_area);
     * }
     */
    public static void gtk_cell_area_inner_cell_area(MemorySegment area, MemorySegment widget, MemorySegment cell_area, MemorySegment inner_area) {
        var mh$ = gtk_cell_area_inner_cell_area$MH();
        try {
            mh$.invokeExact(area, widget, cell_area, inner_area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_cell_area_request_renderer$MH() {
        return RuntimeHelper.requireNonNull(constants$2342.const$4,"gtk_cell_area_request_renderer");
    }
    /**
     * {@snippet :
     * void gtk_cell_area_request_renderer(struct _GtkCellArea* area, struct _GtkCellRenderer* renderer, enum GtkOrientation orientation, struct _GtkWidget* widget, int for_size, int* minimum_size, int* natural_size);
     * }
     */
    public static void gtk_cell_area_request_renderer(MemorySegment area, MemorySegment renderer, int orientation, MemorySegment widget, int for_size, MemorySegment minimum_size, MemorySegment natural_size) {
        var mh$ = gtk_cell_area_request_renderer$MH();
        try {
            mh$.invokeExact(area, renderer, orientation, widget, for_size, minimum_size, natural_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gtk_cell_area_set_cell_data_func_with_proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$2343.const$1,"_gtk_cell_area_set_cell_data_func_with_proxy");
    }
    /**
     * {@snippet :
     * void _gtk_cell_area_set_cell_data_func_with_proxy(struct _GtkCellArea* area, struct _GtkCellRenderer* cell, void (*func)(void*,void*), void* func_data, void (*destroy)(void*), void* proxy);
     * }
     */
    public static void _gtk_cell_area_set_cell_data_func_with_proxy(MemorySegment area, MemorySegment cell, MemorySegment func, MemorySegment func_data, MemorySegment destroy, MemorySegment proxy) {
        var mh$ = _gtk_cell_area_set_cell_data_func_with_proxy$MH();
        try {
            mh$.invokeExact(area, cell, func, func_data, destroy, proxy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkTreeViewColumnSizing.GTK_TREE_VIEW_COLUMN_GROW_ONLY = 0;
     * }
     */
    public static int GTK_TREE_VIEW_COLUMN_GROW_ONLY() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum GtkTreeViewColumnSizing.GTK_TREE_VIEW_COLUMN_AUTOSIZE = 1;
     * }
     */
    public static int GTK_TREE_VIEW_COLUMN_AUTOSIZE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkTreeViewColumnSizing.GTK_TREE_VIEW_COLUMN_FIXED = 2;
     * }
     */
    public static int GTK_TREE_VIEW_COLUMN_FIXED() {
        return (int)2L;
    }
    public static MethodHandle gtk_tree_view_column_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2345.const$4,"gtk_tree_view_column_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_tree_view_column_get_type();
     * }
     */
    public static long gtk_tree_view_column_get_type() {
        var mh$ = gtk_tree_view_column_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2345.const$5,"gtk_tree_view_column_new");
    }
    /**
     * {@snippet :
     * struct _GtkTreeViewColumn* gtk_tree_view_column_new();
     * }
     */
    public static MemorySegment gtk_tree_view_column_new() {
        var mh$ = gtk_tree_view_column_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_new_with_area$MH() {
        return RuntimeHelper.requireNonNull(constants$2346.const$0,"gtk_tree_view_column_new_with_area");
    }
    /**
     * {@snippet :
     * struct _GtkTreeViewColumn* gtk_tree_view_column_new_with_area(struct _GtkCellArea* area);
     * }
     */
    public static MemorySegment gtk_tree_view_column_new_with_area(MemorySegment area) {
        var mh$ = gtk_tree_view_column_new_with_area$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_new_with_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$2346.const$1,"gtk_tree_view_column_new_with_attributes");
    }
    /**
     * {@snippet :
     * struct _GtkTreeViewColumn* gtk_tree_view_column_new_with_attributes(char* title, struct _GtkCellRenderer* cell,...);
     * }
     */
    public static MemorySegment gtk_tree_view_column_new_with_attributes(MemorySegment title, MemorySegment cell, Object... x2) {
        var mh$ = gtk_tree_view_column_new_with_attributes$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(title, cell, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_pack_start$MH() {
        return RuntimeHelper.requireNonNull(constants$2346.const$2,"gtk_tree_view_column_pack_start");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_pack_start(struct _GtkTreeViewColumn* tree_column, struct _GtkCellRenderer* cell, int expand);
     * }
     */
    public static void gtk_tree_view_column_pack_start(MemorySegment tree_column, MemorySegment cell, int expand) {
        var mh$ = gtk_tree_view_column_pack_start$MH();
        try {
            mh$.invokeExact(tree_column, cell, expand);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_pack_end$MH() {
        return RuntimeHelper.requireNonNull(constants$2346.const$3,"gtk_tree_view_column_pack_end");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_pack_end(struct _GtkTreeViewColumn* tree_column, struct _GtkCellRenderer* cell, int expand);
     * }
     */
    public static void gtk_tree_view_column_pack_end(MemorySegment tree_column, MemorySegment cell, int expand) {
        var mh$ = gtk_tree_view_column_pack_end$MH();
        try {
            mh$.invokeExact(tree_column, cell, expand);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_clear$MH() {
        return RuntimeHelper.requireNonNull(constants$2346.const$4,"gtk_tree_view_column_clear");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_clear(struct _GtkTreeViewColumn* tree_column);
     * }
     */
    public static void gtk_tree_view_column_clear(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_clear$MH();
        try {
            mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_add_attribute$MH() {
        return RuntimeHelper.requireNonNull(constants$2346.const$5,"gtk_tree_view_column_add_attribute");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_add_attribute(struct _GtkTreeViewColumn* tree_column, struct _GtkCellRenderer* cell_renderer, char* attribute, int column);
     * }
     */
    public static void gtk_tree_view_column_add_attribute(MemorySegment tree_column, MemorySegment cell_renderer, MemorySegment attribute, int column) {
        var mh$ = gtk_tree_view_column_add_attribute$MH();
        try {
            mh$.invokeExact(tree_column, cell_renderer, attribute, column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_set_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$2347.const$0,"gtk_tree_view_column_set_attributes");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_set_attributes(struct _GtkTreeViewColumn* tree_column, struct _GtkCellRenderer* cell_renderer,...);
     * }
     */
    public static void gtk_tree_view_column_set_attributes(MemorySegment tree_column, MemorySegment cell_renderer, Object... x2) {
        var mh$ = gtk_tree_view_column_set_attributes$MH();
        try {
            mh$.invokeExact(tree_column, cell_renderer, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_set_cell_data_func$MH() {
        return RuntimeHelper.requireNonNull(constants$2347.const$3,"gtk_tree_view_column_set_cell_data_func");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_set_cell_data_func(struct _GtkTreeViewColumn* tree_column, struct _GtkCellRenderer* cell_renderer, void (*func)(struct _GtkTreeViewColumn*,struct _GtkCellRenderer*,struct _GtkTreeModel*,struct _GtkTreeIter*,void*), void* func_data, void (*destroy)(void*));
     * }
     */
    public static void gtk_tree_view_column_set_cell_data_func(MemorySegment tree_column, MemorySegment cell_renderer, MemorySegment func, MemorySegment func_data, MemorySegment destroy) {
        var mh$ = gtk_tree_view_column_set_cell_data_func$MH();
        try {
            mh$.invokeExact(tree_column, cell_renderer, func, func_data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_clear_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$2347.const$4,"gtk_tree_view_column_clear_attributes");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_clear_attributes(struct _GtkTreeViewColumn* tree_column, struct _GtkCellRenderer* cell_renderer);
     * }
     */
    public static void gtk_tree_view_column_clear_attributes(MemorySegment tree_column, MemorySegment cell_renderer) {
        var mh$ = gtk_tree_view_column_clear_attributes$MH();
        try {
            mh$.invokeExact(tree_column, cell_renderer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_set_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2347.const$5,"gtk_tree_view_column_set_spacing");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_set_spacing(struct _GtkTreeViewColumn* tree_column, int spacing);
     * }
     */
    public static void gtk_tree_view_column_set_spacing(MemorySegment tree_column, int spacing) {
        var mh$ = gtk_tree_view_column_set_spacing$MH();
        try {
            mh$.invokeExact(tree_column, spacing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_get_spacing$MH() {
        return RuntimeHelper.requireNonNull(constants$2348.const$0,"gtk_tree_view_column_get_spacing");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_column_get_spacing(struct _GtkTreeViewColumn* tree_column);
     * }
     */
    public static int gtk_tree_view_column_get_spacing(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_get_spacing$MH();
        try {
            return (int)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_set_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$2348.const$1,"gtk_tree_view_column_set_visible");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_set_visible(struct _GtkTreeViewColumn* tree_column, int visible);
     * }
     */
    public static void gtk_tree_view_column_set_visible(MemorySegment tree_column, int visible) {
        var mh$ = gtk_tree_view_column_set_visible$MH();
        try {
            mh$.invokeExact(tree_column, visible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_get_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$2348.const$2,"gtk_tree_view_column_get_visible");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_column_get_visible(struct _GtkTreeViewColumn* tree_column);
     * }
     */
    public static int gtk_tree_view_column_get_visible(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_get_visible$MH();
        try {
            return (int)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_set_resizable$MH() {
        return RuntimeHelper.requireNonNull(constants$2348.const$3,"gtk_tree_view_column_set_resizable");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_set_resizable(struct _GtkTreeViewColumn* tree_column, int resizable);
     * }
     */
    public static void gtk_tree_view_column_set_resizable(MemorySegment tree_column, int resizable) {
        var mh$ = gtk_tree_view_column_set_resizable$MH();
        try {
            mh$.invokeExact(tree_column, resizable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_get_resizable$MH() {
        return RuntimeHelper.requireNonNull(constants$2348.const$4,"gtk_tree_view_column_get_resizable");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_column_get_resizable(struct _GtkTreeViewColumn* tree_column);
     * }
     */
    public static int gtk_tree_view_column_get_resizable(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_get_resizable$MH();
        try {
            return (int)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_set_sizing$MH() {
        return RuntimeHelper.requireNonNull(constants$2348.const$5,"gtk_tree_view_column_set_sizing");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_set_sizing(struct _GtkTreeViewColumn* tree_column, enum GtkTreeViewColumnSizing type);
     * }
     */
    public static void gtk_tree_view_column_set_sizing(MemorySegment tree_column, int type) {
        var mh$ = gtk_tree_view_column_set_sizing$MH();
        try {
            mh$.invokeExact(tree_column, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_get_sizing$MH() {
        return RuntimeHelper.requireNonNull(constants$2349.const$0,"gtk_tree_view_column_get_sizing");
    }
    /**
     * {@snippet :
     * enum GtkTreeViewColumnSizing gtk_tree_view_column_get_sizing(struct _GtkTreeViewColumn* tree_column);
     * }
     */
    public static int gtk_tree_view_column_get_sizing(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_get_sizing$MH();
        try {
            return (int)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_get_x_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$2349.const$1,"gtk_tree_view_column_get_x_offset");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_column_get_x_offset(struct _GtkTreeViewColumn* tree_column);
     * }
     */
    public static int gtk_tree_view_column_get_x_offset(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_get_x_offset$MH();
        try {
            return (int)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_get_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2349.const$2,"gtk_tree_view_column_get_width");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_column_get_width(struct _GtkTreeViewColumn* tree_column);
     * }
     */
    public static int gtk_tree_view_column_get_width(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_get_width$MH();
        try {
            return (int)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_get_fixed_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2349.const$3,"gtk_tree_view_column_get_fixed_width");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_column_get_fixed_width(struct _GtkTreeViewColumn* tree_column);
     * }
     */
    public static int gtk_tree_view_column_get_fixed_width(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_get_fixed_width$MH();
        try {
            return (int)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_set_fixed_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2349.const$4,"gtk_tree_view_column_set_fixed_width");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_set_fixed_width(struct _GtkTreeViewColumn* tree_column, int fixed_width);
     * }
     */
    public static void gtk_tree_view_column_set_fixed_width(MemorySegment tree_column, int fixed_width) {
        var mh$ = gtk_tree_view_column_set_fixed_width$MH();
        try {
            mh$.invokeExact(tree_column, fixed_width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_set_min_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2349.const$5,"gtk_tree_view_column_set_min_width");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_set_min_width(struct _GtkTreeViewColumn* tree_column, int min_width);
     * }
     */
    public static void gtk_tree_view_column_set_min_width(MemorySegment tree_column, int min_width) {
        var mh$ = gtk_tree_view_column_set_min_width$MH();
        try {
            mh$.invokeExact(tree_column, min_width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_get_min_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2350.const$0,"gtk_tree_view_column_get_min_width");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_column_get_min_width(struct _GtkTreeViewColumn* tree_column);
     * }
     */
    public static int gtk_tree_view_column_get_min_width(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_get_min_width$MH();
        try {
            return (int)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_set_max_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2350.const$1,"gtk_tree_view_column_set_max_width");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_set_max_width(struct _GtkTreeViewColumn* tree_column, int max_width);
     * }
     */
    public static void gtk_tree_view_column_set_max_width(MemorySegment tree_column, int max_width) {
        var mh$ = gtk_tree_view_column_set_max_width$MH();
        try {
            mh$.invokeExact(tree_column, max_width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_get_max_width$MH() {
        return RuntimeHelper.requireNonNull(constants$2350.const$2,"gtk_tree_view_column_get_max_width");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_column_get_max_width(struct _GtkTreeViewColumn* tree_column);
     * }
     */
    public static int gtk_tree_view_column_get_max_width(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_get_max_width$MH();
        try {
            return (int)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_clicked$MH() {
        return RuntimeHelper.requireNonNull(constants$2350.const$3,"gtk_tree_view_column_clicked");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_clicked(struct _GtkTreeViewColumn* tree_column);
     * }
     */
    public static void gtk_tree_view_column_clicked(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_clicked$MH();
        try {
            mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_set_title$MH() {
        return RuntimeHelper.requireNonNull(constants$2350.const$4,"gtk_tree_view_column_set_title");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_set_title(struct _GtkTreeViewColumn* tree_column, char* title);
     * }
     */
    public static void gtk_tree_view_column_set_title(MemorySegment tree_column, MemorySegment title) {
        var mh$ = gtk_tree_view_column_set_title$MH();
        try {
            mh$.invokeExact(tree_column, title);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_get_title$MH() {
        return RuntimeHelper.requireNonNull(constants$2350.const$5,"gtk_tree_view_column_get_title");
    }
    /**
     * {@snippet :
     * char* gtk_tree_view_column_get_title(struct _GtkTreeViewColumn* tree_column);
     * }
     */
    public static MemorySegment gtk_tree_view_column_get_title(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_get_title$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_set_expand$MH() {
        return RuntimeHelper.requireNonNull(constants$2351.const$0,"gtk_tree_view_column_set_expand");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_set_expand(struct _GtkTreeViewColumn* tree_column, int expand);
     * }
     */
    public static void gtk_tree_view_column_set_expand(MemorySegment tree_column, int expand) {
        var mh$ = gtk_tree_view_column_set_expand$MH();
        try {
            mh$.invokeExact(tree_column, expand);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_get_expand$MH() {
        return RuntimeHelper.requireNonNull(constants$2351.const$1,"gtk_tree_view_column_get_expand");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_column_get_expand(struct _GtkTreeViewColumn* tree_column);
     * }
     */
    public static int gtk_tree_view_column_get_expand(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_get_expand$MH();
        try {
            return (int)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_set_clickable$MH() {
        return RuntimeHelper.requireNonNull(constants$2351.const$2,"gtk_tree_view_column_set_clickable");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_set_clickable(struct _GtkTreeViewColumn* tree_column, int clickable);
     * }
     */
    public static void gtk_tree_view_column_set_clickable(MemorySegment tree_column, int clickable) {
        var mh$ = gtk_tree_view_column_set_clickable$MH();
        try {
            mh$.invokeExact(tree_column, clickable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_get_clickable$MH() {
        return RuntimeHelper.requireNonNull(constants$2351.const$3,"gtk_tree_view_column_get_clickable");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_column_get_clickable(struct _GtkTreeViewColumn* tree_column);
     * }
     */
    public static int gtk_tree_view_column_get_clickable(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_get_clickable$MH();
        try {
            return (int)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_set_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2351.const$4,"gtk_tree_view_column_set_widget");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_set_widget(struct _GtkTreeViewColumn* tree_column, struct _GtkWidget* widget);
     * }
     */
    public static void gtk_tree_view_column_set_widget(MemorySegment tree_column, MemorySegment widget) {
        var mh$ = gtk_tree_view_column_set_widget$MH();
        try {
            mh$.invokeExact(tree_column, widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_get_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2351.const$5,"gtk_tree_view_column_get_widget");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_tree_view_column_get_widget(struct _GtkTreeViewColumn* tree_column);
     * }
     */
    public static MemorySegment gtk_tree_view_column_get_widget(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_get_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_set_alignment$MH() {
        return RuntimeHelper.requireNonNull(constants$2352.const$0,"gtk_tree_view_column_set_alignment");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_set_alignment(struct _GtkTreeViewColumn* tree_column, float xalign);
     * }
     */
    public static void gtk_tree_view_column_set_alignment(MemorySegment tree_column, float xalign) {
        var mh$ = gtk_tree_view_column_set_alignment$MH();
        try {
            mh$.invokeExact(tree_column, xalign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_get_alignment$MH() {
        return RuntimeHelper.requireNonNull(constants$2352.const$1,"gtk_tree_view_column_get_alignment");
    }
    /**
     * {@snippet :
     * float gtk_tree_view_column_get_alignment(struct _GtkTreeViewColumn* tree_column);
     * }
     */
    public static float gtk_tree_view_column_get_alignment(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_get_alignment$MH();
        try {
            return (float)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_set_reorderable$MH() {
        return RuntimeHelper.requireNonNull(constants$2352.const$2,"gtk_tree_view_column_set_reorderable");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_set_reorderable(struct _GtkTreeViewColumn* tree_column, int reorderable);
     * }
     */
    public static void gtk_tree_view_column_set_reorderable(MemorySegment tree_column, int reorderable) {
        var mh$ = gtk_tree_view_column_set_reorderable$MH();
        try {
            mh$.invokeExact(tree_column, reorderable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_get_reorderable$MH() {
        return RuntimeHelper.requireNonNull(constants$2352.const$3,"gtk_tree_view_column_get_reorderable");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_column_get_reorderable(struct _GtkTreeViewColumn* tree_column);
     * }
     */
    public static int gtk_tree_view_column_get_reorderable(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_get_reorderable$MH();
        try {
            return (int)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_set_sort_column_id$MH() {
        return RuntimeHelper.requireNonNull(constants$2352.const$4,"gtk_tree_view_column_set_sort_column_id");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_set_sort_column_id(struct _GtkTreeViewColumn* tree_column, int sort_column_id);
     * }
     */
    public static void gtk_tree_view_column_set_sort_column_id(MemorySegment tree_column, int sort_column_id) {
        var mh$ = gtk_tree_view_column_set_sort_column_id$MH();
        try {
            mh$.invokeExact(tree_column, sort_column_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_get_sort_column_id$MH() {
        return RuntimeHelper.requireNonNull(constants$2352.const$5,"gtk_tree_view_column_get_sort_column_id");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_column_get_sort_column_id(struct _GtkTreeViewColumn* tree_column);
     * }
     */
    public static int gtk_tree_view_column_get_sort_column_id(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_get_sort_column_id$MH();
        try {
            return (int)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_set_sort_indicator$MH() {
        return RuntimeHelper.requireNonNull(constants$2353.const$0,"gtk_tree_view_column_set_sort_indicator");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_set_sort_indicator(struct _GtkTreeViewColumn* tree_column, int setting);
     * }
     */
    public static void gtk_tree_view_column_set_sort_indicator(MemorySegment tree_column, int setting) {
        var mh$ = gtk_tree_view_column_set_sort_indicator$MH();
        try {
            mh$.invokeExact(tree_column, setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_get_sort_indicator$MH() {
        return RuntimeHelper.requireNonNull(constants$2353.const$1,"gtk_tree_view_column_get_sort_indicator");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_column_get_sort_indicator(struct _GtkTreeViewColumn* tree_column);
     * }
     */
    public static int gtk_tree_view_column_get_sort_indicator(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_get_sort_indicator$MH();
        try {
            return (int)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_set_sort_order$MH() {
        return RuntimeHelper.requireNonNull(constants$2353.const$2,"gtk_tree_view_column_set_sort_order");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_set_sort_order(struct _GtkTreeViewColumn* tree_column, enum GtkSortType order);
     * }
     */
    public static void gtk_tree_view_column_set_sort_order(MemorySegment tree_column, int order) {
        var mh$ = gtk_tree_view_column_set_sort_order$MH();
        try {
            mh$.invokeExact(tree_column, order);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_get_sort_order$MH() {
        return RuntimeHelper.requireNonNull(constants$2353.const$3,"gtk_tree_view_column_get_sort_order");
    }
    /**
     * {@snippet :
     * enum GtkSortType gtk_tree_view_column_get_sort_order(struct _GtkTreeViewColumn* tree_column);
     * }
     */
    public static int gtk_tree_view_column_get_sort_order(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_get_sort_order$MH();
        try {
            return (int)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_cell_set_cell_data$MH() {
        return RuntimeHelper.requireNonNull(constants$2353.const$4,"gtk_tree_view_column_cell_set_cell_data");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_cell_set_cell_data(struct _GtkTreeViewColumn* tree_column, struct _GtkTreeModel* tree_model, struct _GtkTreeIter* iter, int is_expander, int is_expanded);
     * }
     */
    public static void gtk_tree_view_column_cell_set_cell_data(MemorySegment tree_column, MemorySegment tree_model, MemorySegment iter, int is_expander, int is_expanded) {
        var mh$ = gtk_tree_view_column_cell_set_cell_data$MH();
        try {
            mh$.invokeExact(tree_column, tree_model, iter, is_expander, is_expanded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_cell_get_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2353.const$5,"gtk_tree_view_column_cell_get_size");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_cell_get_size(struct _GtkTreeViewColumn* tree_column, struct _cairo_rectangle_int* cell_area, int* x_offset, int* y_offset, int* width, int* height);
     * }
     */
    public static void gtk_tree_view_column_cell_get_size(MemorySegment tree_column, MemorySegment cell_area, MemorySegment x_offset, MemorySegment y_offset, MemorySegment width, MemorySegment height) {
        var mh$ = gtk_tree_view_column_cell_get_size$MH();
        try {
            mh$.invokeExact(tree_column, cell_area, x_offset, y_offset, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_cell_is_visible$MH() {
        return RuntimeHelper.requireNonNull(constants$2354.const$0,"gtk_tree_view_column_cell_is_visible");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_column_cell_is_visible(struct _GtkTreeViewColumn* tree_column);
     * }
     */
    public static int gtk_tree_view_column_cell_is_visible(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_cell_is_visible$MH();
        try {
            return (int)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_focus_cell$MH() {
        return RuntimeHelper.requireNonNull(constants$2354.const$1,"gtk_tree_view_column_focus_cell");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_focus_cell(struct _GtkTreeViewColumn* tree_column, struct _GtkCellRenderer* cell);
     * }
     */
    public static void gtk_tree_view_column_focus_cell(MemorySegment tree_column, MemorySegment cell) {
        var mh$ = gtk_tree_view_column_focus_cell$MH();
        try {
            mh$.invokeExact(tree_column, cell);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_cell_get_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2354.const$2,"gtk_tree_view_column_cell_get_position");
    }
    /**
     * {@snippet :
     * int gtk_tree_view_column_cell_get_position(struct _GtkTreeViewColumn* tree_column, struct _GtkCellRenderer* cell_renderer, int* x_offset, int* width);
     * }
     */
    public static int gtk_tree_view_column_cell_get_position(MemorySegment tree_column, MemorySegment cell_renderer, MemorySegment x_offset, MemorySegment width) {
        var mh$ = gtk_tree_view_column_cell_get_position$MH();
        try {
            return (int)mh$.invokeExact(tree_column, cell_renderer, x_offset, width);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_queue_resize$MH() {
        return RuntimeHelper.requireNonNull(constants$2354.const$3,"gtk_tree_view_column_queue_resize");
    }
    /**
     * {@snippet :
     * void gtk_tree_view_column_queue_resize(struct _GtkTreeViewColumn* tree_column);
     * }
     */
    public static void gtk_tree_view_column_queue_resize(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_queue_resize$MH();
        try {
            mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_get_tree_view$MH() {
        return RuntimeHelper.requireNonNull(constants$2354.const$4,"gtk_tree_view_column_get_tree_view");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_tree_view_column_get_tree_view(struct _GtkTreeViewColumn* tree_column);
     * }
     */
    public static MemorySegment gtk_tree_view_column_get_tree_view(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_get_tree_view$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_tree_view_column_get_button$MH() {
        return RuntimeHelper.requireNonNull(constants$2354.const$5,"gtk_tree_view_column_get_button");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_tree_view_column_get_button(struct _GtkTreeViewColumn* tree_column);
     * }
     */
    public static MemorySegment gtk_tree_view_column_get_button(MemorySegment tree_column) {
        var mh$ = gtk_tree_view_column_get_button$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(tree_column);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_attributes_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2358.const$3,"gtk_text_attributes_new");
    }
    /**
     * {@snippet :
     * struct _GtkTextAttributes* gtk_text_attributes_new();
     * }
     */
    public static MemorySegment gtk_text_attributes_new() {
        var mh$ = gtk_text_attributes_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_attributes_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$2358.const$4,"gtk_text_attributes_copy");
    }
    /**
     * {@snippet :
     * struct _GtkTextAttributes* gtk_text_attributes_copy(struct _GtkTextAttributes* src);
     * }
     */
    public static MemorySegment gtk_text_attributes_copy(MemorySegment src) {
        var mh$ = gtk_text_attributes_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_attributes_copy_values$MH() {
        return RuntimeHelper.requireNonNull(constants$2358.const$5,"gtk_text_attributes_copy_values");
    }
    /**
     * {@snippet :
     * void gtk_text_attributes_copy_values(struct _GtkTextAttributes* src, struct _GtkTextAttributes* dest);
     * }
     */
    public static void gtk_text_attributes_copy_values(MemorySegment src, MemorySegment dest) {
        var mh$ = gtk_text_attributes_copy_values$MH();
        try {
            mh$.invokeExact(src, dest);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_attributes_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$2359.const$0,"gtk_text_attributes_unref");
    }
    /**
     * {@snippet :
     * void gtk_text_attributes_unref(struct _GtkTextAttributes* values);
     * }
     */
    public static void gtk_text_attributes_unref(MemorySegment values) {
        var mh$ = gtk_text_attributes_unref$MH();
        try {
            mh$.invokeExact(values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_attributes_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$2359.const$1,"gtk_text_attributes_ref");
    }
    /**
     * {@snippet :
     * struct _GtkTextAttributes* gtk_text_attributes_ref(struct _GtkTextAttributes* values);
     * }
     */
    public static MemorySegment gtk_text_attributes_ref(MemorySegment values) {
        var mh$ = gtk_text_attributes_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_attributes_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2359.const$2,"gtk_text_attributes_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_text_attributes_get_type();
     * }
     */
    public static long gtk_text_attributes_get_type() {
        var mh$ = gtk_text_attributes_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_child_anchor_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2361.const$2,"gtk_text_child_anchor_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_text_child_anchor_get_type();
     * }
     */
    public static long gtk_text_child_anchor_get_type() {
        var mh$ = gtk_text_child_anchor_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_child_anchor_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2361.const$3,"gtk_text_child_anchor_new");
    }
    /**
     * {@snippet :
     * struct _GtkTextChildAnchor* gtk_text_child_anchor_new();
     * }
     */
    public static MemorySegment gtk_text_child_anchor_new() {
        var mh$ = gtk_text_child_anchor_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_child_anchor_get_widgets$MH() {
        return RuntimeHelper.requireNonNull(constants$2361.const$4,"gtk_text_child_anchor_get_widgets");
    }
    /**
     * {@snippet :
     * struct _GList* gtk_text_child_anchor_get_widgets(struct _GtkTextChildAnchor* anchor);
     * }
     */
    public static MemorySegment gtk_text_child_anchor_get_widgets(MemorySegment anchor) {
        var mh$ = gtk_text_child_anchor_get_widgets$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(anchor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_child_anchor_get_deleted$MH() {
        return RuntimeHelper.requireNonNull(constants$2361.const$5,"gtk_text_child_anchor_get_deleted");
    }
    /**
     * {@snippet :
     * int gtk_text_child_anchor_get_deleted(struct _GtkTextChildAnchor* anchor);
     * }
     */
    public static int gtk_text_child_anchor_get_deleted(MemorySegment anchor) {
        var mh$ = gtk_text_child_anchor_get_deleted$MH();
        try {
            return (int)mh$.invokeExact(anchor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2364.const$1,"gtk_text_tag_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_text_tag_get_type();
     * }
     */
    public static long gtk_text_tag_get_type() {
        var mh$ = gtk_text_tag_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2364.const$2,"gtk_text_tag_new");
    }
    /**
     * {@snippet :
     * struct _GtkTextTag* gtk_text_tag_new(char* name);
     * }
     */
    public static MemorySegment gtk_text_tag_new(MemorySegment name) {
        var mh$ = gtk_text_tag_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_get_priority$MH() {
        return RuntimeHelper.requireNonNull(constants$2364.const$3,"gtk_text_tag_get_priority");
    }
    /**
     * {@snippet :
     * int gtk_text_tag_get_priority(struct _GtkTextTag* tag);
     * }
     */
    public static int gtk_text_tag_get_priority(MemorySegment tag) {
        var mh$ = gtk_text_tag_get_priority$MH();
        try {
            return (int)mh$.invokeExact(tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_set_priority$MH() {
        return RuntimeHelper.requireNonNull(constants$2364.const$4,"gtk_text_tag_set_priority");
    }
    /**
     * {@snippet :
     * void gtk_text_tag_set_priority(struct _GtkTextTag* tag, int priority);
     * }
     */
    public static void gtk_text_tag_set_priority(MemorySegment tag, int priority) {
        var mh$ = gtk_text_tag_set_priority$MH();
        try {
            mh$.invokeExact(tag, priority);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_event$MH() {
        return RuntimeHelper.requireNonNull(constants$2364.const$5,"gtk_text_tag_event");
    }
    /**
     * {@snippet :
     * int gtk_text_tag_event(struct _GtkTextTag* tag, struct _GObject* event_object, union _GdkEvent* event, struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_tag_event(MemorySegment tag, MemorySegment event_object, MemorySegment event, MemorySegment iter) {
        var mh$ = gtk_text_tag_event$MH();
        try {
            return (int)mh$.invokeExact(tag, event_object, event, iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_tag_changed$MH() {
        return RuntimeHelper.requireNonNull(constants$2365.const$0,"gtk_text_tag_changed");
    }
    /**
     * {@snippet :
     * void gtk_text_tag_changed(struct _GtkTextTag* tag, int size_changed);
     * }
     */
    public static void gtk_text_tag_changed(MemorySegment tag, int size_changed) {
        var mh$ = gtk_text_tag_changed$MH();
        try {
            mh$.invokeExact(tag, size_changed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkTextSearchFlags.GTK_TEXT_SEARCH_VISIBLE_ONLY = 1;
     * }
     */
    public static int GTK_TEXT_SEARCH_VISIBLE_ONLY() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkTextSearchFlags.GTK_TEXT_SEARCH_TEXT_ONLY = 2;
     * }
     */
    public static int GTK_TEXT_SEARCH_TEXT_ONLY() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkTextSearchFlags.GTK_TEXT_SEARCH_CASE_INSENSITIVE = 4;
     * }
     */
    public static int GTK_TEXT_SEARCH_CASE_INSENSITIVE() {
        return (int)4L;
    }
    public static MethodHandle gtk_text_iter_get_buffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2367.const$4,"gtk_text_iter_get_buffer");
    }
    /**
     * {@snippet :
     * struct _GtkTextBuffer* gtk_text_iter_get_buffer(struct _GtkTextIter* iter);
     * }
     */
    public static MemorySegment gtk_text_iter_get_buffer(MemorySegment iter) {
        var mh$ = gtk_text_iter_get_buffer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$2367.const$5,"gtk_text_iter_copy");
    }
    /**
     * {@snippet :
     * struct _GtkTextIter* gtk_text_iter_copy(struct _GtkTextIter* iter);
     * }
     */
    public static MemorySegment gtk_text_iter_copy(MemorySegment iter) {
        var mh$ = gtk_text_iter_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_free$MH() {
        return RuntimeHelper.requireNonNull(constants$2368.const$0,"gtk_text_iter_free");
    }
    /**
     * {@snippet :
     * void gtk_text_iter_free(struct _GtkTextIter* iter);
     * }
     */
    public static void gtk_text_iter_free(MemorySegment iter) {
        var mh$ = gtk_text_iter_free$MH();
        try {
            mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_assign$MH() {
        return RuntimeHelper.requireNonNull(constants$2368.const$1,"gtk_text_iter_assign");
    }
    /**
     * {@snippet :
     * void gtk_text_iter_assign(struct _GtkTextIter* iter, struct _GtkTextIter* other);
     * }
     */
    public static void gtk_text_iter_assign(MemorySegment iter, MemorySegment other) {
        var mh$ = gtk_text_iter_assign$MH();
        try {
            mh$.invokeExact(iter, other);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2368.const$2,"gtk_text_iter_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_text_iter_get_type();
     * }
     */
    public static long gtk_text_iter_get_type() {
        var mh$ = gtk_text_iter_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$2368.const$3,"gtk_text_iter_get_offset");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_get_offset(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_get_offset(MemorySegment iter) {
        var mh$ = gtk_text_iter_get_offset$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2368.const$4,"gtk_text_iter_get_line");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_get_line(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_get_line(MemorySegment iter) {
        var mh$ = gtk_text_iter_get_line$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_line_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$2368.const$5,"gtk_text_iter_get_line_offset");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_get_line_offset(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_get_line_offset(MemorySegment iter) {
        var mh$ = gtk_text_iter_get_line_offset$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_line_index$MH() {
        return RuntimeHelper.requireNonNull(constants$2369.const$0,"gtk_text_iter_get_line_index");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_get_line_index(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_get_line_index(MemorySegment iter) {
        var mh$ = gtk_text_iter_get_line_index$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_visible_line_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$2369.const$1,"gtk_text_iter_get_visible_line_offset");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_get_visible_line_offset(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_get_visible_line_offset(MemorySegment iter) {
        var mh$ = gtk_text_iter_get_visible_line_offset$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_visible_line_index$MH() {
        return RuntimeHelper.requireNonNull(constants$2369.const$2,"gtk_text_iter_get_visible_line_index");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_get_visible_line_index(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_get_visible_line_index(MemorySegment iter) {
        var mh$ = gtk_text_iter_get_visible_line_index$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_char$MH() {
        return RuntimeHelper.requireNonNull(constants$2369.const$3,"gtk_text_iter_get_char");
    }
    /**
     * {@snippet :
     * unsigned int gtk_text_iter_get_char(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_get_char(MemorySegment iter) {
        var mh$ = gtk_text_iter_get_char$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_slice$MH() {
        return RuntimeHelper.requireNonNull(constants$2369.const$4,"gtk_text_iter_get_slice");
    }
    /**
     * {@snippet :
     * char* gtk_text_iter_get_slice(struct _GtkTextIter* start, struct _GtkTextIter* end);
     * }
     */
    public static MemorySegment gtk_text_iter_get_slice(MemorySegment start, MemorySegment end) {
        var mh$ = gtk_text_iter_get_slice$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2369.const$5,"gtk_text_iter_get_text");
    }
    /**
     * {@snippet :
     * char* gtk_text_iter_get_text(struct _GtkTextIter* start, struct _GtkTextIter* end);
     * }
     */
    public static MemorySegment gtk_text_iter_get_text(MemorySegment start, MemorySegment end) {
        var mh$ = gtk_text_iter_get_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_visible_slice$MH() {
        return RuntimeHelper.requireNonNull(constants$2370.const$0,"gtk_text_iter_get_visible_slice");
    }
    /**
     * {@snippet :
     * char* gtk_text_iter_get_visible_slice(struct _GtkTextIter* start, struct _GtkTextIter* end);
     * }
     */
    public static MemorySegment gtk_text_iter_get_visible_slice(MemorySegment start, MemorySegment end) {
        var mh$ = gtk_text_iter_get_visible_slice$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_visible_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2370.const$1,"gtk_text_iter_get_visible_text");
    }
    /**
     * {@snippet :
     * char* gtk_text_iter_get_visible_text(struct _GtkTextIter* start, struct _GtkTextIter* end);
     * }
     */
    public static MemorySegment gtk_text_iter_get_visible_text(MemorySegment start, MemorySegment end) {
        var mh$ = gtk_text_iter_get_visible_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$2370.const$2,"gtk_text_iter_get_pixbuf");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gtk_text_iter_get_pixbuf(struct _GtkTextIter* iter);
     * }
     */
    public static MemorySegment gtk_text_iter_get_pixbuf(MemorySegment iter) {
        var mh$ = gtk_text_iter_get_pixbuf$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_marks$MH() {
        return RuntimeHelper.requireNonNull(constants$2370.const$3,"gtk_text_iter_get_marks");
    }
    /**
     * {@snippet :
     * struct _GSList* gtk_text_iter_get_marks(struct _GtkTextIter* iter);
     * }
     */
    public static MemorySegment gtk_text_iter_get_marks(MemorySegment iter) {
        var mh$ = gtk_text_iter_get_marks$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_child_anchor$MH() {
        return RuntimeHelper.requireNonNull(constants$2370.const$4,"gtk_text_iter_get_child_anchor");
    }
    /**
     * {@snippet :
     * struct _GtkTextChildAnchor* gtk_text_iter_get_child_anchor(struct _GtkTextIter* iter);
     * }
     */
    public static MemorySegment gtk_text_iter_get_child_anchor(MemorySegment iter) {
        var mh$ = gtk_text_iter_get_child_anchor$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_toggled_tags$MH() {
        return RuntimeHelper.requireNonNull(constants$2370.const$5,"gtk_text_iter_get_toggled_tags");
    }
    /**
     * {@snippet :
     * struct _GSList* gtk_text_iter_get_toggled_tags(struct _GtkTextIter* iter, int toggled_on);
     * }
     */
    public static MemorySegment gtk_text_iter_get_toggled_tags(MemorySegment iter, int toggled_on) {
        var mh$ = gtk_text_iter_get_toggled_tags$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iter, toggled_on);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_starts_tag$MH() {
        return RuntimeHelper.requireNonNull(constants$2371.const$0,"gtk_text_iter_starts_tag");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_starts_tag(struct _GtkTextIter* iter, struct _GtkTextTag* tag);
     * }
     */
    public static int gtk_text_iter_starts_tag(MemorySegment iter, MemorySegment tag) {
        var mh$ = gtk_text_iter_starts_tag$MH();
        try {
            return (int)mh$.invokeExact(iter, tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_begins_tag$MH() {
        return RuntimeHelper.requireNonNull(constants$2371.const$1,"gtk_text_iter_begins_tag");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_begins_tag(struct _GtkTextIter* iter, struct _GtkTextTag* tag);
     * }
     */
    public static int gtk_text_iter_begins_tag(MemorySegment iter, MemorySegment tag) {
        var mh$ = gtk_text_iter_begins_tag$MH();
        try {
            return (int)mh$.invokeExact(iter, tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_ends_tag$MH() {
        return RuntimeHelper.requireNonNull(constants$2371.const$2,"gtk_text_iter_ends_tag");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_ends_tag(struct _GtkTextIter* iter, struct _GtkTextTag* tag);
     * }
     */
    public static int gtk_text_iter_ends_tag(MemorySegment iter, MemorySegment tag) {
        var mh$ = gtk_text_iter_ends_tag$MH();
        try {
            return (int)mh$.invokeExact(iter, tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_toggles_tag$MH() {
        return RuntimeHelper.requireNonNull(constants$2371.const$3,"gtk_text_iter_toggles_tag");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_toggles_tag(struct _GtkTextIter* iter, struct _GtkTextTag* tag);
     * }
     */
    public static int gtk_text_iter_toggles_tag(MemorySegment iter, MemorySegment tag) {
        var mh$ = gtk_text_iter_toggles_tag$MH();
        try {
            return (int)mh$.invokeExact(iter, tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_has_tag$MH() {
        return RuntimeHelper.requireNonNull(constants$2371.const$4,"gtk_text_iter_has_tag");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_has_tag(struct _GtkTextIter* iter, struct _GtkTextTag* tag);
     * }
     */
    public static int gtk_text_iter_has_tag(MemorySegment iter, MemorySegment tag) {
        var mh$ = gtk_text_iter_has_tag$MH();
        try {
            return (int)mh$.invokeExact(iter, tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_tags$MH() {
        return RuntimeHelper.requireNonNull(constants$2371.const$5,"gtk_text_iter_get_tags");
    }
    /**
     * {@snippet :
     * struct _GSList* gtk_text_iter_get_tags(struct _GtkTextIter* iter);
     * }
     */
    public static MemorySegment gtk_text_iter_get_tags(MemorySegment iter) {
        var mh$ = gtk_text_iter_get_tags$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_editable$MH() {
        return RuntimeHelper.requireNonNull(constants$2372.const$0,"gtk_text_iter_editable");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_editable(struct _GtkTextIter* iter, int default_setting);
     * }
     */
    public static int gtk_text_iter_editable(MemorySegment iter, int default_setting) {
        var mh$ = gtk_text_iter_editable$MH();
        try {
            return (int)mh$.invokeExact(iter, default_setting);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_can_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$2372.const$1,"gtk_text_iter_can_insert");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_can_insert(struct _GtkTextIter* iter, int default_editability);
     * }
     */
    public static int gtk_text_iter_can_insert(MemorySegment iter, int default_editability) {
        var mh$ = gtk_text_iter_can_insert$MH();
        try {
            return (int)mh$.invokeExact(iter, default_editability);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_starts_word$MH() {
        return RuntimeHelper.requireNonNull(constants$2372.const$2,"gtk_text_iter_starts_word");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_starts_word(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_starts_word(MemorySegment iter) {
        var mh$ = gtk_text_iter_starts_word$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_ends_word$MH() {
        return RuntimeHelper.requireNonNull(constants$2372.const$3,"gtk_text_iter_ends_word");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_ends_word(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_ends_word(MemorySegment iter) {
        var mh$ = gtk_text_iter_ends_word$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_inside_word$MH() {
        return RuntimeHelper.requireNonNull(constants$2372.const$4,"gtk_text_iter_inside_word");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_inside_word(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_inside_word(MemorySegment iter) {
        var mh$ = gtk_text_iter_inside_word$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_starts_sentence$MH() {
        return RuntimeHelper.requireNonNull(constants$2372.const$5,"gtk_text_iter_starts_sentence");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_starts_sentence(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_starts_sentence(MemorySegment iter) {
        var mh$ = gtk_text_iter_starts_sentence$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_ends_sentence$MH() {
        return RuntimeHelper.requireNonNull(constants$2373.const$0,"gtk_text_iter_ends_sentence");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_ends_sentence(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_ends_sentence(MemorySegment iter) {
        var mh$ = gtk_text_iter_ends_sentence$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_inside_sentence$MH() {
        return RuntimeHelper.requireNonNull(constants$2373.const$1,"gtk_text_iter_inside_sentence");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_inside_sentence(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_inside_sentence(MemorySegment iter) {
        var mh$ = gtk_text_iter_inside_sentence$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_starts_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2373.const$2,"gtk_text_iter_starts_line");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_starts_line(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_starts_line(MemorySegment iter) {
        var mh$ = gtk_text_iter_starts_line$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_ends_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2373.const$3,"gtk_text_iter_ends_line");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_ends_line(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_ends_line(MemorySegment iter) {
        var mh$ = gtk_text_iter_ends_line$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_is_cursor_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2373.const$4,"gtk_text_iter_is_cursor_position");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_is_cursor_position(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_is_cursor_position(MemorySegment iter) {
        var mh$ = gtk_text_iter_is_cursor_position$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_chars_in_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2373.const$5,"gtk_text_iter_get_chars_in_line");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_get_chars_in_line(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_get_chars_in_line(MemorySegment iter) {
        var mh$ = gtk_text_iter_get_chars_in_line$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_bytes_in_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2374.const$0,"gtk_text_iter_get_bytes_in_line");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_get_bytes_in_line(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_get_bytes_in_line(MemorySegment iter) {
        var mh$ = gtk_text_iter_get_bytes_in_line$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_attributes$MH() {
        return RuntimeHelper.requireNonNull(constants$2374.const$1,"gtk_text_iter_get_attributes");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_get_attributes(struct _GtkTextIter* iter, struct _GtkTextAttributes* values);
     * }
     */
    public static int gtk_text_iter_get_attributes(MemorySegment iter, MemorySegment values) {
        var mh$ = gtk_text_iter_get_attributes$MH();
        try {
            return (int)mh$.invokeExact(iter, values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_get_language$MH() {
        return RuntimeHelper.requireNonNull(constants$2374.const$2,"gtk_text_iter_get_language");
    }
    /**
     * {@snippet :
     * struct _PangoLanguage* gtk_text_iter_get_language(struct _GtkTextIter* iter);
     * }
     */
    public static MemorySegment gtk_text_iter_get_language(MemorySegment iter) {
        var mh$ = gtk_text_iter_get_language$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_is_end$MH() {
        return RuntimeHelper.requireNonNull(constants$2374.const$3,"gtk_text_iter_is_end");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_is_end(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_is_end(MemorySegment iter) {
        var mh$ = gtk_text_iter_is_end$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_is_start$MH() {
        return RuntimeHelper.requireNonNull(constants$2374.const$4,"gtk_text_iter_is_start");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_is_start(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_is_start(MemorySegment iter) {
        var mh$ = gtk_text_iter_is_start$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_char$MH() {
        return RuntimeHelper.requireNonNull(constants$2374.const$5,"gtk_text_iter_forward_char");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_forward_char(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_forward_char(MemorySegment iter) {
        var mh$ = gtk_text_iter_forward_char$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_char$MH() {
        return RuntimeHelper.requireNonNull(constants$2375.const$0,"gtk_text_iter_backward_char");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_backward_char(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_backward_char(MemorySegment iter) {
        var mh$ = gtk_text_iter_backward_char$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$2375.const$1,"gtk_text_iter_forward_chars");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_forward_chars(struct _GtkTextIter* iter, int count);
     * }
     */
    public static int gtk_text_iter_forward_chars(MemorySegment iter, int count) {
        var mh$ = gtk_text_iter_forward_chars$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$2375.const$2,"gtk_text_iter_backward_chars");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_backward_chars(struct _GtkTextIter* iter, int count);
     * }
     */
    public static int gtk_text_iter_backward_chars(MemorySegment iter, int count) {
        var mh$ = gtk_text_iter_backward_chars$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2375.const$3,"gtk_text_iter_forward_line");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_forward_line(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_forward_line(MemorySegment iter) {
        var mh$ = gtk_text_iter_forward_line$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2375.const$4,"gtk_text_iter_backward_line");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_backward_line(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_backward_line(MemorySegment iter) {
        var mh$ = gtk_text_iter_backward_line$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$2375.const$5,"gtk_text_iter_forward_lines");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_forward_lines(struct _GtkTextIter* iter, int count);
     * }
     */
    public static int gtk_text_iter_forward_lines(MemorySegment iter, int count) {
        var mh$ = gtk_text_iter_forward_lines$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$2376.const$0,"gtk_text_iter_backward_lines");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_backward_lines(struct _GtkTextIter* iter, int count);
     * }
     */
    public static int gtk_text_iter_backward_lines(MemorySegment iter, int count) {
        var mh$ = gtk_text_iter_backward_lines$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_word_end$MH() {
        return RuntimeHelper.requireNonNull(constants$2376.const$1,"gtk_text_iter_forward_word_end");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_forward_word_end(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_forward_word_end(MemorySegment iter) {
        var mh$ = gtk_text_iter_forward_word_end$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_word_start$MH() {
        return RuntimeHelper.requireNonNull(constants$2376.const$2,"gtk_text_iter_backward_word_start");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_backward_word_start(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_backward_word_start(MemorySegment iter) {
        var mh$ = gtk_text_iter_backward_word_start$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_word_ends$MH() {
        return RuntimeHelper.requireNonNull(constants$2376.const$3,"gtk_text_iter_forward_word_ends");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_forward_word_ends(struct _GtkTextIter* iter, int count);
     * }
     */
    public static int gtk_text_iter_forward_word_ends(MemorySegment iter, int count) {
        var mh$ = gtk_text_iter_forward_word_ends$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_word_starts$MH() {
        return RuntimeHelper.requireNonNull(constants$2376.const$4,"gtk_text_iter_backward_word_starts");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_backward_word_starts(struct _GtkTextIter* iter, int count);
     * }
     */
    public static int gtk_text_iter_backward_word_starts(MemorySegment iter, int count) {
        var mh$ = gtk_text_iter_backward_word_starts$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_visible_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2376.const$5,"gtk_text_iter_forward_visible_line");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_forward_visible_line(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_forward_visible_line(MemorySegment iter) {
        var mh$ = gtk_text_iter_forward_visible_line$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_visible_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2377.const$0,"gtk_text_iter_backward_visible_line");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_backward_visible_line(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_backward_visible_line(MemorySegment iter) {
        var mh$ = gtk_text_iter_backward_visible_line$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_visible_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$2377.const$1,"gtk_text_iter_forward_visible_lines");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_forward_visible_lines(struct _GtkTextIter* iter, int count);
     * }
     */
    public static int gtk_text_iter_forward_visible_lines(MemorySegment iter, int count) {
        var mh$ = gtk_text_iter_forward_visible_lines$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_visible_lines$MH() {
        return RuntimeHelper.requireNonNull(constants$2377.const$2,"gtk_text_iter_backward_visible_lines");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_backward_visible_lines(struct _GtkTextIter* iter, int count);
     * }
     */
    public static int gtk_text_iter_backward_visible_lines(MemorySegment iter, int count) {
        var mh$ = gtk_text_iter_backward_visible_lines$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_visible_word_end$MH() {
        return RuntimeHelper.requireNonNull(constants$2377.const$3,"gtk_text_iter_forward_visible_word_end");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_forward_visible_word_end(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_forward_visible_word_end(MemorySegment iter) {
        var mh$ = gtk_text_iter_forward_visible_word_end$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_visible_word_start$MH() {
        return RuntimeHelper.requireNonNull(constants$2377.const$4,"gtk_text_iter_backward_visible_word_start");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_backward_visible_word_start(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_backward_visible_word_start(MemorySegment iter) {
        var mh$ = gtk_text_iter_backward_visible_word_start$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_visible_word_ends$MH() {
        return RuntimeHelper.requireNonNull(constants$2377.const$5,"gtk_text_iter_forward_visible_word_ends");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_forward_visible_word_ends(struct _GtkTextIter* iter, int count);
     * }
     */
    public static int gtk_text_iter_forward_visible_word_ends(MemorySegment iter, int count) {
        var mh$ = gtk_text_iter_forward_visible_word_ends$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_visible_word_starts$MH() {
        return RuntimeHelper.requireNonNull(constants$2378.const$0,"gtk_text_iter_backward_visible_word_starts");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_backward_visible_word_starts(struct _GtkTextIter* iter, int count);
     * }
     */
    public static int gtk_text_iter_backward_visible_word_starts(MemorySegment iter, int count) {
        var mh$ = gtk_text_iter_backward_visible_word_starts$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_sentence_end$MH() {
        return RuntimeHelper.requireNonNull(constants$2378.const$1,"gtk_text_iter_forward_sentence_end");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_forward_sentence_end(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_forward_sentence_end(MemorySegment iter) {
        var mh$ = gtk_text_iter_forward_sentence_end$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_sentence_start$MH() {
        return RuntimeHelper.requireNonNull(constants$2378.const$2,"gtk_text_iter_backward_sentence_start");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_backward_sentence_start(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_backward_sentence_start(MemorySegment iter) {
        var mh$ = gtk_text_iter_backward_sentence_start$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_sentence_ends$MH() {
        return RuntimeHelper.requireNonNull(constants$2378.const$3,"gtk_text_iter_forward_sentence_ends");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_forward_sentence_ends(struct _GtkTextIter* iter, int count);
     * }
     */
    public static int gtk_text_iter_forward_sentence_ends(MemorySegment iter, int count) {
        var mh$ = gtk_text_iter_forward_sentence_ends$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_sentence_starts$MH() {
        return RuntimeHelper.requireNonNull(constants$2378.const$4,"gtk_text_iter_backward_sentence_starts");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_backward_sentence_starts(struct _GtkTextIter* iter, int count);
     * }
     */
    public static int gtk_text_iter_backward_sentence_starts(MemorySegment iter, int count) {
        var mh$ = gtk_text_iter_backward_sentence_starts$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_cursor_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2378.const$5,"gtk_text_iter_forward_cursor_position");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_forward_cursor_position(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_forward_cursor_position(MemorySegment iter) {
        var mh$ = gtk_text_iter_forward_cursor_position$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_cursor_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2379.const$0,"gtk_text_iter_backward_cursor_position");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_backward_cursor_position(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_backward_cursor_position(MemorySegment iter) {
        var mh$ = gtk_text_iter_backward_cursor_position$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_cursor_positions$MH() {
        return RuntimeHelper.requireNonNull(constants$2379.const$1,"gtk_text_iter_forward_cursor_positions");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_forward_cursor_positions(struct _GtkTextIter* iter, int count);
     * }
     */
    public static int gtk_text_iter_forward_cursor_positions(MemorySegment iter, int count) {
        var mh$ = gtk_text_iter_forward_cursor_positions$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_cursor_positions$MH() {
        return RuntimeHelper.requireNonNull(constants$2379.const$2,"gtk_text_iter_backward_cursor_positions");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_backward_cursor_positions(struct _GtkTextIter* iter, int count);
     * }
     */
    public static int gtk_text_iter_backward_cursor_positions(MemorySegment iter, int count) {
        var mh$ = gtk_text_iter_backward_cursor_positions$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_visible_cursor_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2379.const$3,"gtk_text_iter_forward_visible_cursor_position");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_forward_visible_cursor_position(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_forward_visible_cursor_position(MemorySegment iter) {
        var mh$ = gtk_text_iter_forward_visible_cursor_position$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_visible_cursor_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2379.const$4,"gtk_text_iter_backward_visible_cursor_position");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_backward_visible_cursor_position(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_backward_visible_cursor_position(MemorySegment iter) {
        var mh$ = gtk_text_iter_backward_visible_cursor_position$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_visible_cursor_positions$MH() {
        return RuntimeHelper.requireNonNull(constants$2379.const$5,"gtk_text_iter_forward_visible_cursor_positions");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_forward_visible_cursor_positions(struct _GtkTextIter* iter, int count);
     * }
     */
    public static int gtk_text_iter_forward_visible_cursor_positions(MemorySegment iter, int count) {
        var mh$ = gtk_text_iter_forward_visible_cursor_positions$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_visible_cursor_positions$MH() {
        return RuntimeHelper.requireNonNull(constants$2380.const$0,"gtk_text_iter_backward_visible_cursor_positions");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_backward_visible_cursor_positions(struct _GtkTextIter* iter, int count);
     * }
     */
    public static int gtk_text_iter_backward_visible_cursor_positions(MemorySegment iter, int count) {
        var mh$ = gtk_text_iter_backward_visible_cursor_positions$MH();
        try {
            return (int)mh$.invokeExact(iter, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_set_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$2380.const$1,"gtk_text_iter_set_offset");
    }
    /**
     * {@snippet :
     * void gtk_text_iter_set_offset(struct _GtkTextIter* iter, int char_offset);
     * }
     */
    public static void gtk_text_iter_set_offset(MemorySegment iter, int char_offset) {
        var mh$ = gtk_text_iter_set_offset$MH();
        try {
            mh$.invokeExact(iter, char_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_set_line$MH() {
        return RuntimeHelper.requireNonNull(constants$2380.const$2,"gtk_text_iter_set_line");
    }
    /**
     * {@snippet :
     * void gtk_text_iter_set_line(struct _GtkTextIter* iter, int line_number);
     * }
     */
    public static void gtk_text_iter_set_line(MemorySegment iter, int line_number) {
        var mh$ = gtk_text_iter_set_line$MH();
        try {
            mh$.invokeExact(iter, line_number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_set_line_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$2380.const$3,"gtk_text_iter_set_line_offset");
    }
    /**
     * {@snippet :
     * void gtk_text_iter_set_line_offset(struct _GtkTextIter* iter, int char_on_line);
     * }
     */
    public static void gtk_text_iter_set_line_offset(MemorySegment iter, int char_on_line) {
        var mh$ = gtk_text_iter_set_line_offset$MH();
        try {
            mh$.invokeExact(iter, char_on_line);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_set_line_index$MH() {
        return RuntimeHelper.requireNonNull(constants$2380.const$4,"gtk_text_iter_set_line_index");
    }
    /**
     * {@snippet :
     * void gtk_text_iter_set_line_index(struct _GtkTextIter* iter, int byte_on_line);
     * }
     */
    public static void gtk_text_iter_set_line_index(MemorySegment iter, int byte_on_line) {
        var mh$ = gtk_text_iter_set_line_index$MH();
        try {
            mh$.invokeExact(iter, byte_on_line);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_to_end$MH() {
        return RuntimeHelper.requireNonNull(constants$2380.const$5,"gtk_text_iter_forward_to_end");
    }
    /**
     * {@snippet :
     * void gtk_text_iter_forward_to_end(struct _GtkTextIter* iter);
     * }
     */
    public static void gtk_text_iter_forward_to_end(MemorySegment iter) {
        var mh$ = gtk_text_iter_forward_to_end$MH();
        try {
            mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_to_line_end$MH() {
        return RuntimeHelper.requireNonNull(constants$2381.const$0,"gtk_text_iter_forward_to_line_end");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_forward_to_line_end(struct _GtkTextIter* iter);
     * }
     */
    public static int gtk_text_iter_forward_to_line_end(MemorySegment iter) {
        var mh$ = gtk_text_iter_forward_to_line_end$MH();
        try {
            return (int)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_set_visible_line_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$2381.const$1,"gtk_text_iter_set_visible_line_offset");
    }
    /**
     * {@snippet :
     * void gtk_text_iter_set_visible_line_offset(struct _GtkTextIter* iter, int char_on_line);
     * }
     */
    public static void gtk_text_iter_set_visible_line_offset(MemorySegment iter, int char_on_line) {
        var mh$ = gtk_text_iter_set_visible_line_offset$MH();
        try {
            mh$.invokeExact(iter, char_on_line);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_set_visible_line_index$MH() {
        return RuntimeHelper.requireNonNull(constants$2381.const$2,"gtk_text_iter_set_visible_line_index");
    }
    /**
     * {@snippet :
     * void gtk_text_iter_set_visible_line_index(struct _GtkTextIter* iter, int byte_on_line);
     * }
     */
    public static void gtk_text_iter_set_visible_line_index(MemorySegment iter, int byte_on_line) {
        var mh$ = gtk_text_iter_set_visible_line_index$MH();
        try {
            mh$.invokeExact(iter, byte_on_line);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_to_tag_toggle$MH() {
        return RuntimeHelper.requireNonNull(constants$2381.const$3,"gtk_text_iter_forward_to_tag_toggle");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_forward_to_tag_toggle(struct _GtkTextIter* iter, struct _GtkTextTag* tag);
     * }
     */
    public static int gtk_text_iter_forward_to_tag_toggle(MemorySegment iter, MemorySegment tag) {
        var mh$ = gtk_text_iter_forward_to_tag_toggle$MH();
        try {
            return (int)mh$.invokeExact(iter, tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_to_tag_toggle$MH() {
        return RuntimeHelper.requireNonNull(constants$2381.const$4,"gtk_text_iter_backward_to_tag_toggle");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_backward_to_tag_toggle(struct _GtkTextIter* iter, struct _GtkTextTag* tag);
     * }
     */
    public static int gtk_text_iter_backward_to_tag_toggle(MemorySegment iter, MemorySegment tag) {
        var mh$ = gtk_text_iter_backward_to_tag_toggle$MH();
        try {
            return (int)mh$.invokeExact(iter, tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_find_char$MH() {
        return RuntimeHelper.requireNonNull(constants$2382.const$2,"gtk_text_iter_forward_find_char");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_forward_find_char(struct _GtkTextIter* iter, int (*pred)(unsigned int,void*), void* user_data, struct _GtkTextIter* limit);
     * }
     */
    public static int gtk_text_iter_forward_find_char(MemorySegment iter, MemorySegment pred, MemorySegment user_data, MemorySegment limit) {
        var mh$ = gtk_text_iter_forward_find_char$MH();
        try {
            return (int)mh$.invokeExact(iter, pred, user_data, limit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_find_char$MH() {
        return RuntimeHelper.requireNonNull(constants$2382.const$4,"gtk_text_iter_backward_find_char");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_backward_find_char(struct _GtkTextIter* iter, int (*pred)(unsigned int,void*), void* user_data, struct _GtkTextIter* limit);
     * }
     */
    public static int gtk_text_iter_backward_find_char(MemorySegment iter, MemorySegment pred, MemorySegment user_data, MemorySegment limit) {
        var mh$ = gtk_text_iter_backward_find_char$MH();
        try {
            return (int)mh$.invokeExact(iter, pred, user_data, limit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_forward_search$MH() {
        return RuntimeHelper.requireNonNull(constants$2382.const$5,"gtk_text_iter_forward_search");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_forward_search(struct _GtkTextIter* iter, char* str, enum GtkTextSearchFlags flags, struct _GtkTextIter* match_start, struct _GtkTextIter* match_end, struct _GtkTextIter* limit);
     * }
     */
    public static int gtk_text_iter_forward_search(MemorySegment iter, MemorySegment str, int flags, MemorySegment match_start, MemorySegment match_end, MemorySegment limit) {
        var mh$ = gtk_text_iter_forward_search$MH();
        try {
            return (int)mh$.invokeExact(iter, str, flags, match_start, match_end, limit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_backward_search$MH() {
        return RuntimeHelper.requireNonNull(constants$2383.const$0,"gtk_text_iter_backward_search");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_backward_search(struct _GtkTextIter* iter, char* str, enum GtkTextSearchFlags flags, struct _GtkTextIter* match_start, struct _GtkTextIter* match_end, struct _GtkTextIter* limit);
     * }
     */
    public static int gtk_text_iter_backward_search(MemorySegment iter, MemorySegment str, int flags, MemorySegment match_start, MemorySegment match_end, MemorySegment limit) {
        var mh$ = gtk_text_iter_backward_search$MH();
        try {
            return (int)mh$.invokeExact(iter, str, flags, match_start, match_end, limit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$2383.const$1,"gtk_text_iter_equal");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_equal(struct _GtkTextIter* lhs, struct _GtkTextIter* rhs);
     * }
     */
    public static int gtk_text_iter_equal(MemorySegment lhs, MemorySegment rhs) {
        var mh$ = gtk_text_iter_equal$MH();
        try {
            return (int)mh$.invokeExact(lhs, rhs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_compare$MH() {
        return RuntimeHelper.requireNonNull(constants$2383.const$2,"gtk_text_iter_compare");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_compare(struct _GtkTextIter* lhs, struct _GtkTextIter* rhs);
     * }
     */
    public static int gtk_text_iter_compare(MemorySegment lhs, MemorySegment rhs) {
        var mh$ = gtk_text_iter_compare$MH();
        try {
            return (int)mh$.invokeExact(lhs, rhs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_in_range$MH() {
        return RuntimeHelper.requireNonNull(constants$2383.const$3,"gtk_text_iter_in_range");
    }
    /**
     * {@snippet :
     * int gtk_text_iter_in_range(struct _GtkTextIter* iter, struct _GtkTextIter* start, struct _GtkTextIter* end);
     * }
     */
    public static int gtk_text_iter_in_range(MemorySegment iter, MemorySegment start, MemorySegment end) {
        var mh$ = gtk_text_iter_in_range$MH();
        try {
            return (int)mh$.invokeExact(iter, start, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_text_iter_order$MH() {
        return RuntimeHelper.requireNonNull(constants$2383.const$4,"gtk_text_iter_order");
    }
    /**
     * {@snippet :
     * void gtk_text_iter_order(struct _GtkTextIter* first, struct _GtkTextIter* second);
     * }
     */
    public static void gtk_text_iter_order(MemorySegment first, MemorySegment second) {
        var mh$ = gtk_text_iter_order$MH();
        try {
            mh$.invokeExact(first, second);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum GtkTargetFlags.GTK_TARGET_SAME_APP = 1;
     * }
     */
    public static int GTK_TARGET_SAME_APP() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum GtkTargetFlags.GTK_TARGET_SAME_WIDGET = 2;
     * }
     */
    public static int GTK_TARGET_SAME_WIDGET() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum GtkTargetFlags.GTK_TARGET_OTHER_APP = 4;
     * }
     */
    public static int GTK_TARGET_OTHER_APP() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum GtkTargetFlags.GTK_TARGET_OTHER_WIDGET = 8;
     * }
     */
    public static int GTK_TARGET_OTHER_WIDGET() {
        return (int)8L;
    }
    public static MethodHandle gtk_target_list_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2385.const$1,"gtk_target_list_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_target_list_get_type();
     * }
     */
    public static long gtk_target_list_get_type() {
        var mh$ = gtk_target_list_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_target_list_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2385.const$2,"gtk_target_list_new");
    }
    /**
     * {@snippet :
     * struct _GtkTargetList* gtk_target_list_new(struct _GtkTargetEntry* targets, unsigned int ntargets);
     * }
     */
    public static MemorySegment gtk_target_list_new(MemorySegment targets, int ntargets) {
        var mh$ = gtk_target_list_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(targets, ntargets);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_target_list_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$2385.const$3,"gtk_target_list_ref");
    }
    /**
     * {@snippet :
     * struct _GtkTargetList* gtk_target_list_ref(struct _GtkTargetList* list);
     * }
     */
    public static MemorySegment gtk_target_list_ref(MemorySegment list) {
        var mh$ = gtk_target_list_ref$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_target_list_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$2385.const$4,"gtk_target_list_unref");
    }
    /**
     * {@snippet :
     * void gtk_target_list_unref(struct _GtkTargetList* list);
     * }
     */
    public static void gtk_target_list_unref(MemorySegment list) {
        var mh$ = gtk_target_list_unref$MH();
        try {
            mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_target_list_add$MH() {
        return RuntimeHelper.requireNonNull(constants$2385.const$5,"gtk_target_list_add");
    }
    /**
     * {@snippet :
     * void gtk_target_list_add(struct _GtkTargetList* list, struct _GdkAtom* target, unsigned int flags, unsigned int info);
     * }
     */
    public static void gtk_target_list_add(MemorySegment list, MemorySegment target, int flags, int info) {
        var mh$ = gtk_target_list_add$MH();
        try {
            mh$.invokeExact(list, target, flags, info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_target_list_add_text_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$2386.const$0,"gtk_target_list_add_text_targets");
    }
    /**
     * {@snippet :
     * void gtk_target_list_add_text_targets(struct _GtkTargetList* list, unsigned int info);
     * }
     */
    public static void gtk_target_list_add_text_targets(MemorySegment list, int info) {
        var mh$ = gtk_target_list_add_text_targets$MH();
        try {
            mh$.invokeExact(list, info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_target_list_add_rich_text_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$2386.const$1,"gtk_target_list_add_rich_text_targets");
    }
    /**
     * {@snippet :
     * void gtk_target_list_add_rich_text_targets(struct _GtkTargetList* list, unsigned int info, int deserializable, struct _GtkTextBuffer* buffer);
     * }
     */
    public static void gtk_target_list_add_rich_text_targets(MemorySegment list, int info, int deserializable, MemorySegment buffer) {
        var mh$ = gtk_target_list_add_rich_text_targets$MH();
        try {
            mh$.invokeExact(list, info, deserializable, buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_target_list_add_image_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$2386.const$2,"gtk_target_list_add_image_targets");
    }
    /**
     * {@snippet :
     * void gtk_target_list_add_image_targets(struct _GtkTargetList* list, unsigned int info, int writable);
     * }
     */
    public static void gtk_target_list_add_image_targets(MemorySegment list, int info, int writable) {
        var mh$ = gtk_target_list_add_image_targets$MH();
        try {
            mh$.invokeExact(list, info, writable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_target_list_add_uri_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$2386.const$3,"gtk_target_list_add_uri_targets");
    }
    /**
     * {@snippet :
     * void gtk_target_list_add_uri_targets(struct _GtkTargetList* list, unsigned int info);
     * }
     */
    public static void gtk_target_list_add_uri_targets(MemorySegment list, int info) {
        var mh$ = gtk_target_list_add_uri_targets$MH();
        try {
            mh$.invokeExact(list, info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_target_list_add_table$MH() {
        return RuntimeHelper.requireNonNull(constants$2386.const$4,"gtk_target_list_add_table");
    }
    /**
     * {@snippet :
     * void gtk_target_list_add_table(struct _GtkTargetList* list, struct _GtkTargetEntry* targets, unsigned int ntargets);
     * }
     */
    public static void gtk_target_list_add_table(MemorySegment list, MemorySegment targets, int ntargets) {
        var mh$ = gtk_target_list_add_table$MH();
        try {
            mh$.invokeExact(list, targets, ntargets);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_target_list_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$2386.const$5,"gtk_target_list_remove");
    }
    /**
     * {@snippet :
     * void gtk_target_list_remove(struct _GtkTargetList* list, struct _GdkAtom* target);
     * }
     */
    public static void gtk_target_list_remove(MemorySegment list, MemorySegment target) {
        var mh$ = gtk_target_list_remove$MH();
        try {
            mh$.invokeExact(list, target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_target_list_find$MH() {
        return RuntimeHelper.requireNonNull(constants$2387.const$0,"gtk_target_list_find");
    }
    /**
     * {@snippet :
     * int gtk_target_list_find(struct _GtkTargetList* list, struct _GdkAtom* target, unsigned int* info);
     * }
     */
    public static int gtk_target_list_find(MemorySegment list, MemorySegment target, MemorySegment info) {
        var mh$ = gtk_target_list_find$MH();
        try {
            return (int)mh$.invokeExact(list, target, info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_target_table_new_from_list$MH() {
        return RuntimeHelper.requireNonNull(constants$2387.const$1,"gtk_target_table_new_from_list");
    }
    /**
     * {@snippet :
     * struct _GtkTargetEntry* gtk_target_table_new_from_list(struct _GtkTargetList* list, int* n_targets);
     * }
     */
    public static MemorySegment gtk_target_table_new_from_list(MemorySegment list, MemorySegment n_targets) {
        var mh$ = gtk_target_table_new_from_list$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(list, n_targets);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_target_table_free$MH() {
        return RuntimeHelper.requireNonNull(constants$2387.const$2,"gtk_target_table_free");
    }
    /**
     * {@snippet :
     * void gtk_target_table_free(struct _GtkTargetEntry* targets, int n_targets);
     * }
     */
    public static void gtk_target_table_free(MemorySegment targets, int n_targets) {
        var mh$ = gtk_target_table_free$MH();
        try {
            mh$.invokeExact(targets, n_targets);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_owner_set$MH() {
        return RuntimeHelper.requireNonNull(constants$2387.const$3,"gtk_selection_owner_set");
    }
    /**
     * {@snippet :
     * int gtk_selection_owner_set(struct _GtkWidget* widget, struct _GdkAtom* selection, unsigned int time_);
     * }
     */
    public static int gtk_selection_owner_set(MemorySegment widget, MemorySegment selection, int time_) {
        var mh$ = gtk_selection_owner_set$MH();
        try {
            return (int)mh$.invokeExact(widget, selection, time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_owner_set_for_display$MH() {
        return RuntimeHelper.requireNonNull(constants$2387.const$4,"gtk_selection_owner_set_for_display");
    }
    /**
     * {@snippet :
     * int gtk_selection_owner_set_for_display(struct _GdkDisplay* display, struct _GtkWidget* widget, struct _GdkAtom* selection, unsigned int time_);
     * }
     */
    public static int gtk_selection_owner_set_for_display(MemorySegment display, MemorySegment widget, MemorySegment selection, int time_) {
        var mh$ = gtk_selection_owner_set_for_display$MH();
        try {
            return (int)mh$.invokeExact(display, widget, selection, time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_add_target$MH() {
        return RuntimeHelper.requireNonNull(constants$2387.const$5,"gtk_selection_add_target");
    }
    /**
     * {@snippet :
     * void gtk_selection_add_target(struct _GtkWidget* widget, struct _GdkAtom* selection, struct _GdkAtom* target, unsigned int info);
     * }
     */
    public static void gtk_selection_add_target(MemorySegment widget, MemorySegment selection, MemorySegment target, int info) {
        var mh$ = gtk_selection_add_target$MH();
        try {
            mh$.invokeExact(widget, selection, target, info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_add_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$2388.const$0,"gtk_selection_add_targets");
    }
    /**
     * {@snippet :
     * void gtk_selection_add_targets(struct _GtkWidget* widget, struct _GdkAtom* selection, struct _GtkTargetEntry* targets, unsigned int ntargets);
     * }
     */
    public static void gtk_selection_add_targets(MemorySegment widget, MemorySegment selection, MemorySegment targets, int ntargets) {
        var mh$ = gtk_selection_add_targets$MH();
        try {
            mh$.invokeExact(widget, selection, targets, ntargets);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_clear_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$2388.const$1,"gtk_selection_clear_targets");
    }
    /**
     * {@snippet :
     * void gtk_selection_clear_targets(struct _GtkWidget* widget, struct _GdkAtom* selection);
     * }
     */
    public static void gtk_selection_clear_targets(MemorySegment widget, MemorySegment selection) {
        var mh$ = gtk_selection_clear_targets$MH();
        try {
            mh$.invokeExact(widget, selection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_convert$MH() {
        return RuntimeHelper.requireNonNull(constants$2388.const$2,"gtk_selection_convert");
    }
    /**
     * {@snippet :
     * int gtk_selection_convert(struct _GtkWidget* widget, struct _GdkAtom* selection, struct _GdkAtom* target, unsigned int time_);
     * }
     */
    public static int gtk_selection_convert(MemorySegment widget, MemorySegment selection, MemorySegment target, int time_) {
        var mh$ = gtk_selection_convert$MH();
        try {
            return (int)mh$.invokeExact(widget, selection, target, time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_remove_all$MH() {
        return RuntimeHelper.requireNonNull(constants$2388.const$3,"gtk_selection_remove_all");
    }
    /**
     * {@snippet :
     * void gtk_selection_remove_all(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_selection_remove_all(MemorySegment widget) {
        var mh$ = gtk_selection_remove_all$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_data_get_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2388.const$4,"gtk_selection_data_get_selection");
    }
    /**
     * {@snippet :
     * struct _GdkAtom* gtk_selection_data_get_selection(struct _GtkSelectionData* selection_data);
     * }
     */
    public static MemorySegment gtk_selection_data_get_selection(MemorySegment selection_data) {
        var mh$ = gtk_selection_data_get_selection$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(selection_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_data_get_target$MH() {
        return RuntimeHelper.requireNonNull(constants$2388.const$5,"gtk_selection_data_get_target");
    }
    /**
     * {@snippet :
     * struct _GdkAtom* gtk_selection_data_get_target(struct _GtkSelectionData* selection_data);
     * }
     */
    public static MemorySegment gtk_selection_data_get_target(MemorySegment selection_data) {
        var mh$ = gtk_selection_data_get_target$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(selection_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_data_get_data_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2389.const$0,"gtk_selection_data_get_data_type");
    }
    /**
     * {@snippet :
     * struct _GdkAtom* gtk_selection_data_get_data_type(struct _GtkSelectionData* selection_data);
     * }
     */
    public static MemorySegment gtk_selection_data_get_data_type(MemorySegment selection_data) {
        var mh$ = gtk_selection_data_get_data_type$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(selection_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_data_get_format$MH() {
        return RuntimeHelper.requireNonNull(constants$2389.const$1,"gtk_selection_data_get_format");
    }
    /**
     * {@snippet :
     * int gtk_selection_data_get_format(struct _GtkSelectionData* selection_data);
     * }
     */
    public static int gtk_selection_data_get_format(MemorySegment selection_data) {
        var mh$ = gtk_selection_data_get_format$MH();
        try {
            return (int)mh$.invokeExact(selection_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_data_get_data$MH() {
        return RuntimeHelper.requireNonNull(constants$2389.const$2,"gtk_selection_data_get_data");
    }
    /**
     * {@snippet :
     * unsigned char* gtk_selection_data_get_data(struct _GtkSelectionData* selection_data);
     * }
     */
    public static MemorySegment gtk_selection_data_get_data(MemorySegment selection_data) {
        var mh$ = gtk_selection_data_get_data$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(selection_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_data_get_length$MH() {
        return RuntimeHelper.requireNonNull(constants$2389.const$3,"gtk_selection_data_get_length");
    }
    /**
     * {@snippet :
     * int gtk_selection_data_get_length(struct _GtkSelectionData* selection_data);
     * }
     */
    public static int gtk_selection_data_get_length(MemorySegment selection_data) {
        var mh$ = gtk_selection_data_get_length$MH();
        try {
            return (int)mh$.invokeExact(selection_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_data_get_data_with_length$MH() {
        return RuntimeHelper.requireNonNull(constants$2389.const$4,"gtk_selection_data_get_data_with_length");
    }
    /**
     * {@snippet :
     * unsigned char* gtk_selection_data_get_data_with_length(struct _GtkSelectionData* selection_data, int* length);
     * }
     */
    public static MemorySegment gtk_selection_data_get_data_with_length(MemorySegment selection_data, MemorySegment length) {
        var mh$ = gtk_selection_data_get_data_with_length$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(selection_data, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_data_get_display$MH() {
        return RuntimeHelper.requireNonNull(constants$2389.const$5,"gtk_selection_data_get_display");
    }
    /**
     * {@snippet :
     * struct _GdkDisplay* gtk_selection_data_get_display(struct _GtkSelectionData* selection_data);
     * }
     */
    public static MemorySegment gtk_selection_data_get_display(MemorySegment selection_data) {
        var mh$ = gtk_selection_data_get_display$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(selection_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_data_set$MH() {
        return RuntimeHelper.requireNonNull(constants$2390.const$0,"gtk_selection_data_set");
    }
    /**
     * {@snippet :
     * void gtk_selection_data_set(struct _GtkSelectionData* selection_data, struct _GdkAtom* type, int format, unsigned char* data, int length);
     * }
     */
    public static void gtk_selection_data_set(MemorySegment selection_data, MemorySegment type, int format, MemorySegment data, int length) {
        var mh$ = gtk_selection_data_set$MH();
        try {
            mh$.invokeExact(selection_data, type, format, data, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_data_set_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2390.const$1,"gtk_selection_data_set_text");
    }
    /**
     * {@snippet :
     * int gtk_selection_data_set_text(struct _GtkSelectionData* selection_data, char* str, int len);
     * }
     */
    public static int gtk_selection_data_set_text(MemorySegment selection_data, MemorySegment str, int len) {
        var mh$ = gtk_selection_data_set_text$MH();
        try {
            return (int)mh$.invokeExact(selection_data, str, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_data_get_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2390.const$2,"gtk_selection_data_get_text");
    }
    /**
     * {@snippet :
     * unsigned char* gtk_selection_data_get_text(struct _GtkSelectionData* selection_data);
     * }
     */
    public static MemorySegment gtk_selection_data_get_text(MemorySegment selection_data) {
        var mh$ = gtk_selection_data_get_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(selection_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_data_set_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$2390.const$3,"gtk_selection_data_set_pixbuf");
    }
    /**
     * {@snippet :
     * int gtk_selection_data_set_pixbuf(struct _GtkSelectionData* selection_data, struct _GdkPixbuf* pixbuf);
     * }
     */
    public static int gtk_selection_data_set_pixbuf(MemorySegment selection_data, MemorySegment pixbuf) {
        var mh$ = gtk_selection_data_set_pixbuf$MH();
        try {
            return (int)mh$.invokeExact(selection_data, pixbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_data_get_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$2390.const$4,"gtk_selection_data_get_pixbuf");
    }
    /**
     * {@snippet :
     * struct _GdkPixbuf* gtk_selection_data_get_pixbuf(struct _GtkSelectionData* selection_data);
     * }
     */
    public static MemorySegment gtk_selection_data_get_pixbuf(MemorySegment selection_data) {
        var mh$ = gtk_selection_data_get_pixbuf$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(selection_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_data_set_uris$MH() {
        return RuntimeHelper.requireNonNull(constants$2390.const$5,"gtk_selection_data_set_uris");
    }
    /**
     * {@snippet :
     * int gtk_selection_data_set_uris(struct _GtkSelectionData* selection_data, char** uris);
     * }
     */
    public static int gtk_selection_data_set_uris(MemorySegment selection_data, MemorySegment uris) {
        var mh$ = gtk_selection_data_set_uris$MH();
        try {
            return (int)mh$.invokeExact(selection_data, uris);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_data_get_uris$MH() {
        return RuntimeHelper.requireNonNull(constants$2391.const$0,"gtk_selection_data_get_uris");
    }
    /**
     * {@snippet :
     * char** gtk_selection_data_get_uris(struct _GtkSelectionData* selection_data);
     * }
     */
    public static MemorySegment gtk_selection_data_get_uris(MemorySegment selection_data) {
        var mh$ = gtk_selection_data_get_uris$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(selection_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_data_get_targets$MH() {
        return RuntimeHelper.requireNonNull(constants$2391.const$1,"gtk_selection_data_get_targets");
    }
    /**
     * {@snippet :
     * int gtk_selection_data_get_targets(struct _GtkSelectionData* selection_data, struct _GdkAtom*** targets, int* n_atoms);
     * }
     */
    public static int gtk_selection_data_get_targets(MemorySegment selection_data, MemorySegment targets, MemorySegment n_atoms) {
        var mh$ = gtk_selection_data_get_targets$MH();
        try {
            return (int)mh$.invokeExact(selection_data, targets, n_atoms);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_data_targets_include_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2391.const$2,"gtk_selection_data_targets_include_text");
    }
    /**
     * {@snippet :
     * int gtk_selection_data_targets_include_text(struct _GtkSelectionData* selection_data);
     * }
     */
    public static int gtk_selection_data_targets_include_text(MemorySegment selection_data) {
        var mh$ = gtk_selection_data_targets_include_text$MH();
        try {
            return (int)mh$.invokeExact(selection_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_data_targets_include_rich_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2391.const$3,"gtk_selection_data_targets_include_rich_text");
    }
    /**
     * {@snippet :
     * int gtk_selection_data_targets_include_rich_text(struct _GtkSelectionData* selection_data, struct _GtkTextBuffer* buffer);
     * }
     */
    public static int gtk_selection_data_targets_include_rich_text(MemorySegment selection_data, MemorySegment buffer) {
        var mh$ = gtk_selection_data_targets_include_rich_text$MH();
        try {
            return (int)mh$.invokeExact(selection_data, buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_data_targets_include_image$MH() {
        return RuntimeHelper.requireNonNull(constants$2391.const$4,"gtk_selection_data_targets_include_image");
    }
    /**
     * {@snippet :
     * int gtk_selection_data_targets_include_image(struct _GtkSelectionData* selection_data, int writable);
     * }
     */
    public static int gtk_selection_data_targets_include_image(MemorySegment selection_data, int writable) {
        var mh$ = gtk_selection_data_targets_include_image$MH();
        try {
            return (int)mh$.invokeExact(selection_data, writable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_data_targets_include_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$2391.const$5,"gtk_selection_data_targets_include_uri");
    }
    /**
     * {@snippet :
     * int gtk_selection_data_targets_include_uri(struct _GtkSelectionData* selection_data);
     * }
     */
    public static int gtk_selection_data_targets_include_uri(MemorySegment selection_data) {
        var mh$ = gtk_selection_data_targets_include_uri$MH();
        try {
            return (int)mh$.invokeExact(selection_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_targets_include_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2392.const$0,"gtk_targets_include_text");
    }
    /**
     * {@snippet :
     * int gtk_targets_include_text(struct _GdkAtom** targets, int n_targets);
     * }
     */
    public static int gtk_targets_include_text(MemorySegment targets, int n_targets) {
        var mh$ = gtk_targets_include_text$MH();
        try {
            return (int)mh$.invokeExact(targets, n_targets);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_targets_include_rich_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2392.const$1,"gtk_targets_include_rich_text");
    }
    /**
     * {@snippet :
     * int gtk_targets_include_rich_text(struct _GdkAtom** targets, int n_targets, struct _GtkTextBuffer* buffer);
     * }
     */
    public static int gtk_targets_include_rich_text(MemorySegment targets, int n_targets, MemorySegment buffer) {
        var mh$ = gtk_targets_include_rich_text$MH();
        try {
            return (int)mh$.invokeExact(targets, n_targets, buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_targets_include_image$MH() {
        return RuntimeHelper.requireNonNull(constants$2392.const$2,"gtk_targets_include_image");
    }
    /**
     * {@snippet :
     * int gtk_targets_include_image(struct _GdkAtom** targets, int n_targets, int writable);
     * }
     */
    public static int gtk_targets_include_image(MemorySegment targets, int n_targets, int writable) {
        var mh$ = gtk_targets_include_image$MH();
        try {
            return (int)mh$.invokeExact(targets, n_targets, writable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_targets_include_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$2392.const$3,"gtk_targets_include_uri");
    }
    /**
     * {@snippet :
     * int gtk_targets_include_uri(struct _GdkAtom** targets, int n_targets);
     * }
     */
    public static int gtk_targets_include_uri(MemorySegment targets, int n_targets) {
        var mh$ = gtk_targets_include_uri$MH();
        try {
            return (int)mh$.invokeExact(targets, n_targets);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_data_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2392.const$4,"gtk_selection_data_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_selection_data_get_type();
     * }
     */
    public static long gtk_selection_data_get_type() {
        var mh$ = gtk_selection_data_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_data_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$2392.const$5,"gtk_selection_data_copy");
    }
    /**
     * {@snippet :
     * struct _GtkSelectionData* gtk_selection_data_copy(struct _GtkSelectionData* data);
     * }
     */
    public static MemorySegment gtk_selection_data_copy(MemorySegment data) {
        var mh$ = gtk_selection_data_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_selection_data_free$MH() {
        return RuntimeHelper.requireNonNull(constants$2393.const$0,"gtk_selection_data_free");
    }
    /**
     * {@snippet :
     * void gtk_selection_data_free(struct _GtkSelectionData* data);
     * }
     */
    public static void gtk_selection_data_free(MemorySegment data) {
        var mh$ = gtk_selection_data_free$MH();
        try {
            mh$.invokeExact(data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_target_entry_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2393.const$1,"gtk_target_entry_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_target_entry_get_type();
     * }
     */
    public static long gtk_target_entry_get_type() {
        var mh$ = gtk_target_entry_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_target_entry_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2393.const$2,"gtk_target_entry_new");
    }
    /**
     * {@snippet :
     * struct _GtkTargetEntry* gtk_target_entry_new(char* target, unsigned int flags, unsigned int info);
     * }
     */
    public static MemorySegment gtk_target_entry_new(MemorySegment target, int flags, int info) {
        var mh$ = gtk_target_entry_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(target, flags, info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_target_entry_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$2393.const$3,"gtk_target_entry_copy");
    }
    /**
     * {@snippet :
     * struct _GtkTargetEntry* gtk_target_entry_copy(struct _GtkTargetEntry* data);
     * }
     */
    public static MemorySegment gtk_target_entry_copy(MemorySegment data) {
        var mh$ = gtk_target_entry_copy$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_target_entry_free$MH() {
        return RuntimeHelper.requireNonNull(constants$2393.const$4,"gtk_target_entry_free");
    }
    /**
     * {@snippet :
     * void gtk_target_entry_free(struct _GtkTargetEntry* data);
     * }
     */
    public static void gtk_target_entry_free(MemorySegment data) {
        var mh$ = gtk_target_entry_free$MH();
        try {
            mh$.invokeExact(data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_get_data$MH() {
        return RuntimeHelper.requireNonNull(constants$2393.const$5,"gtk_drag_get_data");
    }
    /**
     * {@snippet :
     * void gtk_drag_get_data(struct _GtkWidget* widget, struct _GdkDragContext* context, struct _GdkAtom* target, unsigned int time_);
     * }
     */
    public static void gtk_drag_get_data(MemorySegment widget, MemorySegment context, MemorySegment target, int time_) {
        var mh$ = gtk_drag_get_data$MH();
        try {
            mh$.invokeExact(widget, context, target, time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$2394.const$0,"gtk_drag_finish");
    }
    /**
     * {@snippet :
     * void gtk_drag_finish(struct _GdkDragContext* context, int success, int del, unsigned int time_);
     * }
     */
    public static void gtk_drag_finish(MemorySegment context, int success, int del, int time_) {
        var mh$ = gtk_drag_finish$MH();
        try {
            mh$.invokeExact(context, success, del, time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_get_source_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2394.const$1,"gtk_drag_get_source_widget");
    }
    /**
     * {@snippet :
     * struct _GtkWidget* gtk_drag_get_source_widget(struct _GdkDragContext* context);
     * }
     */
    public static MemorySegment gtk_drag_get_source_widget(MemorySegment context) {
        var mh$ = gtk_drag_get_source_widget$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_highlight$MH() {
        return RuntimeHelper.requireNonNull(constants$2394.const$2,"gtk_drag_highlight");
    }
    /**
     * {@snippet :
     * void gtk_drag_highlight(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_drag_highlight(MemorySegment widget) {
        var mh$ = gtk_drag_highlight$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_unhighlight$MH() {
        return RuntimeHelper.requireNonNull(constants$2394.const$3,"gtk_drag_unhighlight");
    }
    /**
     * {@snippet :
     * void gtk_drag_unhighlight(struct _GtkWidget* widget);
     * }
     */
    public static void gtk_drag_unhighlight(MemorySegment widget) {
        var mh$ = gtk_drag_unhighlight$MH();
        try {
            mh$.invokeExact(widget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_begin_with_coordinates$MH() {
        return RuntimeHelper.requireNonNull(constants$2394.const$5,"gtk_drag_begin_with_coordinates");
    }
    /**
     * {@snippet :
     * struct _GdkDragContext* gtk_drag_begin_with_coordinates(struct _GtkWidget* widget, struct _GtkTargetList* targets, enum GdkDragAction actions, int button, union _GdkEvent* event, int x, int y);
     * }
     */
    public static MemorySegment gtk_drag_begin_with_coordinates(MemorySegment widget, MemorySegment targets, int actions, int button, MemorySegment event, int x, int y) {
        var mh$ = gtk_drag_begin_with_coordinates$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget, targets, actions, button, event, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_begin$MH() {
        return RuntimeHelper.requireNonNull(constants$2395.const$0,"gtk_drag_begin");
    }
    /**
     * {@snippet :
     * struct _GdkDragContext* gtk_drag_begin(struct _GtkWidget* widget, struct _GtkTargetList* targets, enum GdkDragAction actions, int button, union _GdkEvent* event);
     * }
     */
    public static MemorySegment gtk_drag_begin(MemorySegment widget, MemorySegment targets, int actions, int button, MemorySegment event) {
        var mh$ = gtk_drag_begin$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(widget, targets, actions, button, event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_cancel$MH() {
        return RuntimeHelper.requireNonNull(constants$2395.const$1,"gtk_drag_cancel");
    }
    /**
     * {@snippet :
     * void gtk_drag_cancel(struct _GdkDragContext* context);
     * }
     */
    public static void gtk_drag_cancel(MemorySegment context) {
        var mh$ = gtk_drag_cancel$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_set_icon_widget$MH() {
        return RuntimeHelper.requireNonNull(constants$2395.const$2,"gtk_drag_set_icon_widget");
    }
    /**
     * {@snippet :
     * void gtk_drag_set_icon_widget(struct _GdkDragContext* context, struct _GtkWidget* widget, int hot_x, int hot_y);
     * }
     */
    public static void gtk_drag_set_icon_widget(MemorySegment context, MemorySegment widget, int hot_x, int hot_y) {
        var mh$ = gtk_drag_set_icon_widget$MH();
        try {
            mh$.invokeExact(context, widget, hot_x, hot_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_set_icon_pixbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$2395.const$3,"gtk_drag_set_icon_pixbuf");
    }
    /**
     * {@snippet :
     * void gtk_drag_set_icon_pixbuf(struct _GdkDragContext* context, struct _GdkPixbuf* pixbuf, int hot_x, int hot_y);
     * }
     */
    public static void gtk_drag_set_icon_pixbuf(MemorySegment context, MemorySegment pixbuf, int hot_x, int hot_y) {
        var mh$ = gtk_drag_set_icon_pixbuf$MH();
        try {
            mh$.invokeExact(context, pixbuf, hot_x, hot_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_set_icon_stock$MH() {
        return RuntimeHelper.requireNonNull(constants$2395.const$4,"gtk_drag_set_icon_stock");
    }
    /**
     * {@snippet :
     * void gtk_drag_set_icon_stock(struct _GdkDragContext* context, char* stock_id, int hot_x, int hot_y);
     * }
     */
    public static void gtk_drag_set_icon_stock(MemorySegment context, MemorySegment stock_id, int hot_x, int hot_y) {
        var mh$ = gtk_drag_set_icon_stock$MH();
        try {
            mh$.invokeExact(context, stock_id, hot_x, hot_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_set_icon_surface$MH() {
        return RuntimeHelper.requireNonNull(constants$2395.const$5,"gtk_drag_set_icon_surface");
    }
    /**
     * {@snippet :
     * void gtk_drag_set_icon_surface(struct _GdkDragContext* context, struct _cairo_surface* surface);
     * }
     */
    public static void gtk_drag_set_icon_surface(MemorySegment context, MemorySegment surface) {
        var mh$ = gtk_drag_set_icon_surface$MH();
        try {
            mh$.invokeExact(context, surface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_set_icon_name$MH() {
        return RuntimeHelper.requireNonNull(constants$2396.const$0,"gtk_drag_set_icon_name");
    }
    /**
     * {@snippet :
     * void gtk_drag_set_icon_name(struct _GdkDragContext* context, char* icon_name, int hot_x, int hot_y);
     * }
     */
    public static void gtk_drag_set_icon_name(MemorySegment context, MemorySegment icon_name, int hot_x, int hot_y) {
        var mh$ = gtk_drag_set_icon_name$MH();
        try {
            mh$.invokeExact(context, icon_name, hot_x, hot_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_set_icon_gicon$MH() {
        return RuntimeHelper.requireNonNull(constants$2396.const$1,"gtk_drag_set_icon_gicon");
    }
    /**
     * {@snippet :
     * void gtk_drag_set_icon_gicon(struct _GdkDragContext* context, struct _GIcon* icon, int hot_x, int hot_y);
     * }
     */
    public static void gtk_drag_set_icon_gicon(MemorySegment context, MemorySegment icon, int hot_x, int hot_y) {
        var mh$ = gtk_drag_set_icon_gicon$MH();
        try {
            mh$.invokeExact(context, icon, hot_x, hot_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_set_icon_default$MH() {
        return RuntimeHelper.requireNonNull(constants$2396.const$2,"gtk_drag_set_icon_default");
    }
    /**
     * {@snippet :
     * void gtk_drag_set_icon_default(struct _GdkDragContext* context);
     * }
     */
    public static void gtk_drag_set_icon_default(MemorySegment context) {
        var mh$ = gtk_drag_set_icon_default$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_drag_check_threshold$MH() {
        return RuntimeHelper.requireNonNull(constants$2396.const$4,"gtk_drag_check_threshold");
    }
    /**
     * {@snippet :
     * int gtk_drag_check_threshold(struct _GtkWidget* widget, int start_x, int start_y, int current_x, int current_y);
     * }
     */
    public static int gtk_drag_check_threshold(MemorySegment widget, int start_x, int start_y, int current_x, int current_y) {
        var mh$ = gtk_drag_check_threshold$MH();
        try {
            return (int)mh$.invokeExact(widget, start_x, start_y, current_x, current_y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2400.const$2,"gtk_editable_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_editable_get_type();
     * }
     */
    public static long gtk_editable_get_type() {
        var mh$ = gtk_editable_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_select_region$MH() {
        return RuntimeHelper.requireNonNull(constants$2400.const$3,"gtk_editable_select_region");
    }
    /**
     * {@snippet :
     * void gtk_editable_select_region(struct _GtkEditable* editable, int start_pos, int end_pos);
     * }
     */
    public static void gtk_editable_select_region(MemorySegment editable, int start_pos, int end_pos) {
        var mh$ = gtk_editable_select_region$MH();
        try {
            mh$.invokeExact(editable, start_pos, end_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_get_selection_bounds$MH() {
        return RuntimeHelper.requireNonNull(constants$2400.const$4,"gtk_editable_get_selection_bounds");
    }
    /**
     * {@snippet :
     * int gtk_editable_get_selection_bounds(struct _GtkEditable* editable, int* start_pos, int* end_pos);
     * }
     */
    public static int gtk_editable_get_selection_bounds(MemorySegment editable, MemorySegment start_pos, MemorySegment end_pos) {
        var mh$ = gtk_editable_get_selection_bounds$MH();
        try {
            return (int)mh$.invokeExact(editable, start_pos, end_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_insert_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2400.const$5,"gtk_editable_insert_text");
    }
    /**
     * {@snippet :
     * void gtk_editable_insert_text(struct _GtkEditable* editable, char* new_text, int new_text_length, int* position);
     * }
     */
    public static void gtk_editable_insert_text(MemorySegment editable, MemorySegment new_text, int new_text_length, MemorySegment position) {
        var mh$ = gtk_editable_insert_text$MH();
        try {
            mh$.invokeExact(editable, new_text, new_text_length, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_delete_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2401.const$0,"gtk_editable_delete_text");
    }
    /**
     * {@snippet :
     * void gtk_editable_delete_text(struct _GtkEditable* editable, int start_pos, int end_pos);
     * }
     */
    public static void gtk_editable_delete_text(MemorySegment editable, int start_pos, int end_pos) {
        var mh$ = gtk_editable_delete_text$MH();
        try {
            mh$.invokeExact(editable, start_pos, end_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_get_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$2401.const$1,"gtk_editable_get_chars");
    }
    /**
     * {@snippet :
     * char* gtk_editable_get_chars(struct _GtkEditable* editable, int start_pos, int end_pos);
     * }
     */
    public static MemorySegment gtk_editable_get_chars(MemorySegment editable, int start_pos, int end_pos) {
        var mh$ = gtk_editable_get_chars$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(editable, start_pos, end_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_cut_clipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$2401.const$2,"gtk_editable_cut_clipboard");
    }
    /**
     * {@snippet :
     * void gtk_editable_cut_clipboard(struct _GtkEditable* editable);
     * }
     */
    public static void gtk_editable_cut_clipboard(MemorySegment editable) {
        var mh$ = gtk_editable_cut_clipboard$MH();
        try {
            mh$.invokeExact(editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_copy_clipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$2401.const$3,"gtk_editable_copy_clipboard");
    }
    /**
     * {@snippet :
     * void gtk_editable_copy_clipboard(struct _GtkEditable* editable);
     * }
     */
    public static void gtk_editable_copy_clipboard(MemorySegment editable) {
        var mh$ = gtk_editable_copy_clipboard$MH();
        try {
            mh$.invokeExact(editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_paste_clipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$2401.const$4,"gtk_editable_paste_clipboard");
    }
    /**
     * {@snippet :
     * void gtk_editable_paste_clipboard(struct _GtkEditable* editable);
     * }
     */
    public static void gtk_editable_paste_clipboard(MemorySegment editable) {
        var mh$ = gtk_editable_paste_clipboard$MH();
        try {
            mh$.invokeExact(editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_delete_selection$MH() {
        return RuntimeHelper.requireNonNull(constants$2401.const$5,"gtk_editable_delete_selection");
    }
    /**
     * {@snippet :
     * void gtk_editable_delete_selection(struct _GtkEditable* editable);
     * }
     */
    public static void gtk_editable_delete_selection(MemorySegment editable) {
        var mh$ = gtk_editable_delete_selection$MH();
        try {
            mh$.invokeExact(editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_set_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2402.const$0,"gtk_editable_set_position");
    }
    /**
     * {@snippet :
     * void gtk_editable_set_position(struct _GtkEditable* editable, int position);
     * }
     */
    public static void gtk_editable_set_position(MemorySegment editable, int position) {
        var mh$ = gtk_editable_set_position$MH();
        try {
            mh$.invokeExact(editable, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_get_position$MH() {
        return RuntimeHelper.requireNonNull(constants$2402.const$1,"gtk_editable_get_position");
    }
    /**
     * {@snippet :
     * int gtk_editable_get_position(struct _GtkEditable* editable);
     * }
     */
    public static int gtk_editable_get_position(MemorySegment editable) {
        var mh$ = gtk_editable_get_position$MH();
        try {
            return (int)mh$.invokeExact(editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_set_editable$MH() {
        return RuntimeHelper.requireNonNull(constants$2402.const$2,"gtk_editable_set_editable");
    }
    /**
     * {@snippet :
     * void gtk_editable_set_editable(struct _GtkEditable* editable, int is_editable);
     * }
     */
    public static void gtk_editable_set_editable(MemorySegment editable, int is_editable) {
        var mh$ = gtk_editable_set_editable$MH();
        try {
            mh$.invokeExact(editable, is_editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_editable_get_editable$MH() {
        return RuntimeHelper.requireNonNull(constants$2402.const$3,"gtk_editable_get_editable");
    }
    /**
     * {@snippet :
     * int gtk_editable_get_editable(struct _GtkEditable* editable);
     * }
     */
    public static int gtk_editable_get_editable(MemorySegment editable) {
        var mh$ = gtk_editable_get_editable$MH();
        try {
            return (int)mh$.invokeExact(editable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2410.const$2,"gtk_im_context_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_im_context_get_type();
     * }
     */
    public static long gtk_im_context_get_type() {
        var mh$ = gtk_im_context_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_set_client_window$MH() {
        return RuntimeHelper.requireNonNull(constants$2410.const$3,"gtk_im_context_set_client_window");
    }
    /**
     * {@snippet :
     * void gtk_im_context_set_client_window(struct _GtkIMContext* context, struct _GdkWindow* window);
     * }
     */
    public static void gtk_im_context_set_client_window(MemorySegment context, MemorySegment window) {
        var mh$ = gtk_im_context_set_client_window$MH();
        try {
            mh$.invokeExact(context, window);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_get_preedit_string$MH() {
        return RuntimeHelper.requireNonNull(constants$2410.const$4,"gtk_im_context_get_preedit_string");
    }
    /**
     * {@snippet :
     * void gtk_im_context_get_preedit_string(struct _GtkIMContext* context, char** str, struct _PangoAttrList** attrs, int* cursor_pos);
     * }
     */
    public static void gtk_im_context_get_preedit_string(MemorySegment context, MemorySegment str, MemorySegment attrs, MemorySegment cursor_pos) {
        var mh$ = gtk_im_context_get_preedit_string$MH();
        try {
            mh$.invokeExact(context, str, attrs, cursor_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_filter_keypress$MH() {
        return RuntimeHelper.requireNonNull(constants$2410.const$5,"gtk_im_context_filter_keypress");
    }
    /**
     * {@snippet :
     * int gtk_im_context_filter_keypress(struct _GtkIMContext* context, struct _GdkEventKey* event);
     * }
     */
    public static int gtk_im_context_filter_keypress(MemorySegment context, MemorySegment event) {
        var mh$ = gtk_im_context_filter_keypress$MH();
        try {
            return (int)mh$.invokeExact(context, event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_focus_in$MH() {
        return RuntimeHelper.requireNonNull(constants$2411.const$0,"gtk_im_context_focus_in");
    }
    /**
     * {@snippet :
     * void gtk_im_context_focus_in(struct _GtkIMContext* context);
     * }
     */
    public static void gtk_im_context_focus_in(MemorySegment context) {
        var mh$ = gtk_im_context_focus_in$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_focus_out$MH() {
        return RuntimeHelper.requireNonNull(constants$2411.const$1,"gtk_im_context_focus_out");
    }
    /**
     * {@snippet :
     * void gtk_im_context_focus_out(struct _GtkIMContext* context);
     * }
     */
    public static void gtk_im_context_focus_out(MemorySegment context) {
        var mh$ = gtk_im_context_focus_out$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_reset$MH() {
        return RuntimeHelper.requireNonNull(constants$2411.const$2,"gtk_im_context_reset");
    }
    /**
     * {@snippet :
     * void gtk_im_context_reset(struct _GtkIMContext* context);
     * }
     */
    public static void gtk_im_context_reset(MemorySegment context) {
        var mh$ = gtk_im_context_reset$MH();
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_set_cursor_location$MH() {
        return RuntimeHelper.requireNonNull(constants$2411.const$3,"gtk_im_context_set_cursor_location");
    }
    /**
     * {@snippet :
     * void gtk_im_context_set_cursor_location(struct _GtkIMContext* context, struct _cairo_rectangle_int* area);
     * }
     */
    public static void gtk_im_context_set_cursor_location(MemorySegment context, MemorySegment area) {
        var mh$ = gtk_im_context_set_cursor_location$MH();
        try {
            mh$.invokeExact(context, area);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_set_use_preedit$MH() {
        return RuntimeHelper.requireNonNull(constants$2411.const$4,"gtk_im_context_set_use_preedit");
    }
    /**
     * {@snippet :
     * void gtk_im_context_set_use_preedit(struct _GtkIMContext* context, int use_preedit);
     * }
     */
    public static void gtk_im_context_set_use_preedit(MemorySegment context, int use_preedit) {
        var mh$ = gtk_im_context_set_use_preedit$MH();
        try {
            mh$.invokeExact(context, use_preedit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_set_surrounding$MH() {
        return RuntimeHelper.requireNonNull(constants$2411.const$5,"gtk_im_context_set_surrounding");
    }
    /**
     * {@snippet :
     * void gtk_im_context_set_surrounding(struct _GtkIMContext* context, char* text, int len, int cursor_index);
     * }
     */
    public static void gtk_im_context_set_surrounding(MemorySegment context, MemorySegment text, int len, int cursor_index) {
        var mh$ = gtk_im_context_set_surrounding$MH();
        try {
            mh$.invokeExact(context, text, len, cursor_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_get_surrounding$MH() {
        return RuntimeHelper.requireNonNull(constants$2412.const$0,"gtk_im_context_get_surrounding");
    }
    /**
     * {@snippet :
     * int gtk_im_context_get_surrounding(struct _GtkIMContext* context, char** text, int* cursor_index);
     * }
     */
    public static int gtk_im_context_get_surrounding(MemorySegment context, MemorySegment text, MemorySegment cursor_index) {
        var mh$ = gtk_im_context_get_surrounding$MH();
        try {
            return (int)mh$.invokeExact(context, text, cursor_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_im_context_delete_surrounding$MH() {
        return RuntimeHelper.requireNonNull(constants$2412.const$1,"gtk_im_context_delete_surrounding");
    }
    /**
     * {@snippet :
     * int gtk_im_context_delete_surrounding(struct _GtkIMContext* context, int offset, int n_chars);
     * }
     */
    public static int gtk_im_context_delete_surrounding(MemorySegment context, int offset, int n_chars) {
        var mh$ = gtk_im_context_delete_surrounding$MH();
        try {
            return (int)mh$.invokeExact(context, offset, n_chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_buffer_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$2417.const$5,"gtk_entry_buffer_get_type");
    }
    /**
     * {@snippet :
     * unsigned long gtk_entry_buffer_get_type();
     * }
     */
    public static long gtk_entry_buffer_get_type() {
        var mh$ = gtk_entry_buffer_get_type$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_buffer_new$MH() {
        return RuntimeHelper.requireNonNull(constants$2418.const$0,"gtk_entry_buffer_new");
    }
    /**
     * {@snippet :
     * struct _GtkEntryBuffer* gtk_entry_buffer_new(char* initial_chars, int n_initial_chars);
     * }
     */
    public static MemorySegment gtk_entry_buffer_new(MemorySegment initial_chars, int n_initial_chars) {
        var mh$ = gtk_entry_buffer_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(initial_chars, n_initial_chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_buffer_get_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$2418.const$1,"gtk_entry_buffer_get_bytes");
    }
    /**
     * {@snippet :
     * unsigned long gtk_entry_buffer_get_bytes(struct _GtkEntryBuffer* buffer);
     * }
     */
    public static long gtk_entry_buffer_get_bytes(MemorySegment buffer) {
        var mh$ = gtk_entry_buffer_get_bytes$MH();
        try {
            return (long)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_buffer_get_length$MH() {
        return RuntimeHelper.requireNonNull(constants$2418.const$2,"gtk_entry_buffer_get_length");
    }
    /**
     * {@snippet :
     * unsigned int gtk_entry_buffer_get_length(struct _GtkEntryBuffer* buffer);
     * }
     */
    public static int gtk_entry_buffer_get_length(MemorySegment buffer) {
        var mh$ = gtk_entry_buffer_get_length$MH();
        try {
            return (int)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_buffer_get_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2418.const$3,"gtk_entry_buffer_get_text");
    }
    /**
     * {@snippet :
     * char* gtk_entry_buffer_get_text(struct _GtkEntryBuffer* buffer);
     * }
     */
    public static MemorySegment gtk_entry_buffer_get_text(MemorySegment buffer) {
        var mh$ = gtk_entry_buffer_get_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gtk_entry_buffer_set_text$MH() {
        return RuntimeHelper.requireNonNull(constants$2418.const$4,"gtk_entry_buffer_set_text");
    }
    /**
     * {@snippet :
     * void gtk_entry_buffer_set_text(struct _GtkEntryBuffer* buffer, char* chars, int n_chars);
     * }
     */
    public static void gtk_entry_buffer_set_text(MemorySegment buffer, MemorySegment chars, int n_chars) {
        var mh$ = gtk_entry_buffer_set_text$MH();
        try {
            mh$.invokeExact(buffer, chars, n_chars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


